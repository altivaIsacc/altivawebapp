@model AltivaWebApp.ViewModels.ContactoViewModel
@inject IStringLocalizer<SharedResources> Lb
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@{

    var tipoEmpresa = "";
    var tipoPersona = "";
    var tipoCliente = "";
    var tipoProveedor = "";

    if (Model.Persona)
    {
        tipoEmpresa = "hidden";
    }
    else
    {
        tipoPersona = "hidden";
    }

    if (!Model.Cliente)
    {
        tipoCliente = "hidden";
    }

    if (!Model.Proveedor)
    {
        tipoProveedor = "hidden";
    }


    var titulo = Lb["Editar"] + " " + Lb["Contacto"];

    if (Model.IdContacto == 0)
    {
        titulo = Lb["Nuevo"] + " " + Lb["Contacto"];
    }

    ViewData["Title"] = titulo;


}


<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <h3> @titulo</h3>
    </div>
</div>


<div class="row well">

    <form id="frmContacto">
        @Html.HiddenFor(x => x.IdContacto)
        @Html.HiddenFor(x => x.Ruta)

        <div class="form-group col-md-12 col-sm-12 col-xs-12">
            <label class="radio-inline" for="persona"><input type="radio" name="radioTipo" onchange="ocultarCamposNombre(1)" checked="@Model.Persona" value="1" id="persona" />@Lb["Persona"]</label>
            <label class="radio-inline" for="empresa"><input type="radio" name="radioTipo" onchange="ocultarCamposNombre(2)" checked="@Model.Empresa" value="2" id="empresa" />@Lb["Empresa"]</label>
        </div>

        <div @tipoPersona class="form-group col-md-4 col-sm-4 col-xs-12 nombrePersona">
            <label asp-for="Nombre" class="control-label"><span class="text-danger">*</span>@Lb["Nombre"]:</label>
            <input asp-for="Nombre" autofocus maxlength="50" type="text" class="form-control" />
            <span hidden id="nombreValid" class="text-danger">@Lb["nombreValid"]</span>
        </div>
        <div @tipoPersona class="form-group col-md-4 col-sm-4 col-xs-12 nombrePersona">
            <label asp-for="Apellidos" class="control-label"><span class="text-danger">*</span>@Lb["Apellidos"]:</label>
            <input asp-for="Apellidos" maxlength="75" type="text" class="form-control" />
            <span hidden id="apellidosValid" class="text-danger">@Lb["apellidosValid"]</span>
        </div>
        <div @tipoEmpresa class="form-group col-md-4 col-sm-4 col-xs-12 nombreEmpresa">
            <label asp-for="NombreComercial" class="control-label"><span class="text-danger">*</span>@Lb["NombreComercial"]:</label>
            <input asp-for="NombreComercial" maxlength="90" type="text" class="form-control" />
            <span hidden id="nombreComercialValid" class="text-danger">@Lb["nombreValid"]</span>
        </div>
        <div @tipoEmpresa class="form-group col-md-4 col-sm-4 col-xs-12 nombreEmpresa">
            <label asp-for="NombreJuridico" class="control-label"><span class="text-danger">*</span>@Lb["NombreJuridico"]:</label>
            <input asp-for="NombreJuridico" class="form-control" type="text" />
            <span hidden id="nombreJuridicaValid" class="text-danger">@Lb["nombreValid"]</span>
        </div>

        <div class="form-group col-md-2 col-sm-4 col-xs-12">
            <label asp-for="TipoCedula" class="control-label">@Lb["TipoCedula"]:</label>
            <select asp-for="TipoCedula" onchange="tipoCedula(value)" class="form-control">
                <option value="1">@Lb["Física"]</option>
                <option value="2">@Lb["Jurídica"]</option>
                <option value="3">@Lb["Dimex"]</option>
                <option value="4">@Lb["NITE"]</option>
            </select>
        </div>

        <div class="form-group col-md-2 col-sm-4 col-xs-12">
            <label asp-for="Cedula" class="control-label"><span class="text-danger">*</span>@Lb["Cédula"]:</label>
            <input asp-for="Cedula" class="form-control" />
            <span hidden id="cedulaValid" class="text-danger">@Lb["cedulaValid"]</span>
            <span hidden id="repetidoValid" class="text-danger">@Lb["repetidoValid"]</span>
        </div>

        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="Telefono" class="control-label"><span class="text-danger">*</span>@Lb["Teléfono"]:</label>
            <input asp-for="Telefono" type="text" class="form-control telefono" />
            <span hidden id="telefonoValid" class="text-danger">@Lb["telefonoValid"]</span>
        </div>
        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="Correo" class="control-label"><span class="text-danger">*</span>@Lb["Correo"]:</label>
            <input asp-for="Correo" class="form-control" />
            <span hidden id="correoValid" class="text-danger">@Lb["correoValid"]</span>
            <span hidden id="correoInvalido" class="text-danger">@Lb["correoInvalido"]</span>
        </div>




        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="IdUsuario" class="control-label">@Lb["UsuarioEncargado"]:</label>

            <select asp-for="IdUsuario" class="form-control">
                @foreach (var item in ViewData["usuarios"] as IList<TbSeUsuario>)
                {
                    <option value="@item.Id">@item.Nombre</option>
                }
            </select>
        </div>

        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label class="input-group-text" id="inputGroup-sizing-sm">@Lb["CargarImagen"] (6MB)</label>
            <input type="file" accept="image/*" id="fileUploadC" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
            <span hidden id="tamanoArchivoC" class="text-danger">@Lb["tamanoArchivo"]</span>
            <span hidden id="tipoArchivoC" class="text-danger">@Lb["tipoArchivo"]</span>
        </div>

        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="WebLink" class="control-label">@Lb["PaginaWeb"]:</label>
            <input asp-for="WebLink" maxlength="150" type="text" class="form-control" />
        </div>


        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="MapLink" class="control-label">@Lb["LinkUbicacion"]:</label>
            <input asp-for="MapLink" maxlength="500" type="text" class="form-control" />
        </div>



        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="Pais" class="control-label">@Lb["País"]:</label>
            <select onchange="getProvincias()" asp-for="Pais" class="form-control">
                @foreach (var item in ViewData["paises"] as IList<TbSePais>)
                {
                    <option value="@item.Id">@item.NombreEs</option>
                }
            </select>
        </div>
        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="Provincia" class="control-label">@Lb["Provincia"]:</label>
            <select onchange="getCantones(value)" class="form-control" asp-for="Provincia"></select>
        </div>
        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="Canton" class="control-label">@Lb["Cantón"]:</label>
            <select onchange="getDistritos(value)" class="form-control" asp-for="Canton"></select>
        </div>

        <div class="form-group col-md-4 col-sm-4 col-xs-12">
            <label asp-for="Distrito" class="control-label">@Lb["Distrito"]:</label>
            <select class="form-control" asp-for="Distrito"></select>
        </div>
        <div class="form-group col-md-8 col-sm-8 col-xs-12">
            <label asp-for="OtrasSenas" class="control-label">@Lb["OtrasSenas"]:</label>
            <textarea asp-for="OtrasSenas" maxlength="450" rows="4" class="form-control">@Model.OtrasSenas</textarea>
            <span hidden id="otrasSenasValid" class="text-danger">@Lb["otrasSenasValid"]</span>
        </div>




        <div class="form-group col-md-12 col-sm-12 col-xs-12">
            <label asp-for="Cliente" class="control-label">@Lb["Cliente"]</label>
            <input asp-for="Cliente" type="checkbox" onchange="mostrarTipoCliente()" />
        </div>

        <div @tipoCliente class="tipoCliente">

            <div class="form-group col-md-4 col-sm-4 col-xs-12">
                <label asp-for="IdTipoCliente" class="control-label">@Lb["Tipo"]:</label>
                <select onchange="cargarFamiliaClientes(value)" asp-for="IdTipoCliente" class="form-control"><option value=""></option></select>
            </div>

            <div class="form-group col-md-4 col-sm-4 col-xs-12">
                <label asp-for="IdFamiliaCliente" class="control-label">@Lb["Familia"]:</label>
                <select onchange="cargarSubFamiliaClientes(value)" asp-for="IdFamiliaCliente" class="form-control"><option value=""></option></select>
            </div>
            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label asp-for="IdSubFamiliaCliente" class="control-label">@Lb["Sub-Familia"]:</label>
                <select asp-for="IdSubFamiliaCliente" class="form-control"><option value=""></option></select>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12"><h5>@Lb["CondicionesPago"]</h5></div>

            <input readonly hidden id="idCPCliente" value="0" />

            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label for="plazoC" class="control-label">@Lb["PlazoCredito"] (@Lb["Días"]) :</label>
                <input id="plazoC" type="text" class="form-control numerico" value="0" />
            </div>
            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label for="montoMaxC" class="control-label">@Lb["MontoMaximo"]:</label>
                <input id="montoMaxC" type="text" class="form-control moneda" value="0" />
            </div>

        </div>


        <div class="form-group col-md-12 col-sm-12 col-xs-12">
            <label asp-for="Proveedor" class="control-label">@Lb["Proveedor"]</label>
            <input asp-for="Proveedor" type="checkbox" onchange="mostrarTipoProveedor()" />
        </div>
        <div @tipoProveedor class="tipoProveedor">
            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label asp-for="IdTipoProveedor" class="control-label">@Lb["Tipo"]:</label>
                <select onchange="cargarFamiliaProveedores(value)" asp-for="IdTipoProveedor" class="form-control"><option value=""></option></select>
            </div>

            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label asp-for="IdFamiliaProveedor" class="control-label">@Lb["Familia"]:</label>
                <select onchange="cargarSubFamiliaProveedores(value)" asp-for="IdFamiliaProveedor" class="form-control"><option value=""></option></select>
            </div>
            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label asp-for="IdSubFamiliaProveedor" class="control-label">@Lb["Sub-Familia"]:</label>
                <select asp-for="IdSubFamiliaProveedor" class="form-control"><option value=""></option></select>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12"><h5>@Lb["CondicionesPago"]</h5></div>

            <input readonly hidden id="idCPProveedor" value="0" />

            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label for="plazoP" class="control-label">@Lb["PlazoCredito"] (@Lb["Días"]):</label>
                <input id="plazoP" type="text" class="form-control numerico" value="0" />
            </div>

            <div class="form-group col-md-4 col-sm-4 col-xs-12 ">
                <label for="montoMaxP" class="control-label">@Lb["MontoMaximo"]:</label>
                <input id="montoMaxP" type="text" class="form-control moneda" value="0" />
            </div>
        </div>

    </form>

    <hr />

    <div class="row form-group ">
        <div class="col-md-3 col-sm-3 col-xs-8">
            <h4>&ensp;@Lb["CamposPersonalizados"]</h4>
        </div>
        <div class="col-md-3 col-sm-3 col-xs-4">
            <a class="btn btn-link" data-toggle="collapse" data-target="#collapseFrmCP" aria-expanded="false" aria-controls="collapseFrmCP"><span id="optFrmCP">@*@Lb["VerMenos"]..*@</span></a>
        </div>
    </div>

    <div class="collapse" id="collapseFrmCP">
        <div class="card card-body ">
            <form id="frmCP"></form>
        </div>
    </div>

</div>

<div class="row">
    <div class="form-group col-md-3">
        <button class="btn btn-success btnAccion" onclick="guardarCambios()">@Lb["Guardar"] <i class="fas fa-save"></i></button>
        <a onclick="cancelar()" class="btn btn-default">@Lb["Cancelar"]</a>
    </div>
</div>

<hr />
<!---------------------------------------------------------------------tabs----------------------------------------------------------------------------->
<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <ul class="nav nav-tabs">
            <li><a class="optTab" data-toggle="tab" href="#relaciones">@Lb["Relaciones"]</a></li>
            <li><a class="optTab" data-toggle="tab" href="#tareas">@Lb["TareasAsignadas"]</a></li>
            <li><a class="optTab" data-toggle="tab" href="#cuentasBancarias">@Lb["CuentasBancarias"]</a></li>
            <li><a class="optTab" data-toggle="tab" href="#comentario">@Lb["Comentarios"]</a></li>
        </ul>
    </div>
</div>
<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade in active row" id="relaciones">
        <br />
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div id="relacionesContainer">

            </div>
        </div>
    </div>
    <div class="tab-pane fade row" id="tareas">

        <br />
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div id="tareasContainer">

            </div>
        </div>
    </div>

    <div class="tab-pane fade " id="cuentasBancarias">
        <br />
        <div id="cuentasBancariasContainer">

        </div>
    </div>

    <div class="tab-pane fade" id="comentario">
        <div id="comentarios">

        </div>
    </div>

</div>


<!------------------------------------------------------------------------fin tabs------------------------------------------------------------------------->



<script src="~/js/comentario.js"></script>

<script>

    var camposPersonalizados = [];
    var ccPersonalizados = [];
    var paises = [];
    var $cedula = $('#Cedula');
    var tipoClientes = [];
    var familiaClientes = [];
    var subFamiliaClientes = [];
    var tipoClientesList = [];
    var tipoProveedoresList = [];

    $(document).ready(function () {

        if (@Model.IdContacto != 0) {
            getCondicionesPago();
            getRelaciones();
            getCuentasBancarias();
            getTareasContacto();
            GetComentarios("Contactos", @Model.IdContacto);
            mostrarCuentasBancarias($('#Proveedor').prop('checked'));
        }

        $('.fechaPicker').datetimepicker({
            defaultDate: new Date(),
            locale: localStorage.getItem("idioma")
        });

        $(".numerico").inputmask({
            'alias': 'integer',
            rightAlign: false,
            min: 0
        });

        $(".moneda").inputmask({
            'alias': 'decimal',
            rightAlign: true,
            'groupSeparator': '.',
            'autoGroup': true,
            min: 0
        });

        $('.cedFisica').mask('0-0000-0000');
        $('.cedJuridica').mask('0-000-000000');
        $('.cedDimex').mask('000000000000');
        $('.cedNite').mask('000000000000');

        tipoCedula("@Model.TipoCedula");

        getTipoClientes();
        getTipoProveedores();


        getCamposPersonalizados();

        getProvincias();

        $('#collapseFrmCP').collapse();
    });


    //////////////////////////////////////helpers/////////////////////////////



    function getFormData() {
        var unindexed_array = $('#frmContacto').serializeArray();
        var indexed_array = {};

        $.map(unindexed_array, function (n, i) {

            indexed_array[n['name']] = n['value'];
        });

        console.log(indexed_array);
        return indexed_array;
    }

    function editarCCPersonalizado(value, key, id) {


        if (ccPersonalizados[key].tipo == "casilla")
            value = $('#' + id).prop('checked');

        ccPersonalizados[key].valor = value;
    }

    function validarCampos() {

        var flag = true;

        if ($('#persona').prop('checked')) {
            if ($('#Nombre').val().replace(/ /g, '') === "") {
                flag = false;
                $('#nombreValid').prop('hidden', false);
            }
            else
                $('#nombreValid').prop('hidden', true);

            if ($('#Apellidos').val().replace(/ /g, '') === "") {
                flag = false;
                $('#apellidosValid').prop('hidden', false);
            }
            else
                $('#apellidosValid').prop('hidden', true);
        }
        else {
            if ($('#NombreComercial').val().replace(/ /g, '') === "") {
                flag = false;
                $('#nombreComercialValid').prop('hidden', false);
            }
            else
                $('#nombreComercialValid').prop('hidden', true);

            if ($('#NombreJuridico').val().replace(/ /g, '') === "") {
                flag = false;
                $('#nombreJuridicoValid').prop('hidden', false);
            }
            else
                $('#nombreJuridicoValid').prop('hidden', true);
        }

        if ($('#Cedula').val().replace(/ /g, '') === "") {
            flag = false;
            $('#cedulaValid').prop('hidden', false);
            $('#repetidoValid').prop('hidden', true);
        }
        else {
            $('#cedulaValid').prop('hidden', true);
            $('#repetidoValid').prop('hidden', true);
        }

        if ($('#Telefono').val().replace(/ /g, '') === "") {
            flag = false;
            $('#telefonoValid').prop('hidden', false);
        }
        else
            $('#telefonoValid').prop('hidden', true);

        if ($('#Correo').val().replace(/ /g, '') === "") {
            flag = false;
            $('#correoValid').prop('hidden', false);
        }
        else
            $('#correoValid').prop('hidden', true);

        if ($('#Correo').val().replace(/ /g, "") === "") {

            $('#correoValid').prop('hidden', false);
            flag = false;
        } else {
            $('#correoValid').prop('hidden', true);
            if (!isEmail($('#Correo').val())) {
                $('#correoInvalido').prop("hidden", false);
                flag = false;
            } else
                $('#correoInvalido').prop("hidden", true);

        }




        return flag;


    }

    function isEmail(email) {
        var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return regex.test(email);
    }

    /////////////////////////////////////////////////ajax////////////////////////////////

    function guardarCambios() {

        if (validarCampos()) {

            var contacto = getFormData();

            if (contacto.radioTipo === "1") {

                contacto['Persona'] = true;
                contacto['Empresa'] = false;

            } else {
                contacto['Persona'] = false;
                contacto['Empresa'] = true;
            }

            contacto.Cliente = $('#Cliente').prop('checked');
            contacto.Proveedor = $('#Proveedor').prop('checked');

            $.ajax({
                type: "POST",
                url: '@Url.Action("CrearEditarContacto", "Contacto")',
                data: { cpViewModel: ccPersonalizados, cViewModel: contacto, cPagoViewModel: crearModeloCondiciones() },
                success: function (data) {

                    if (data.success) {
                        if ($('#fileUploadC').val() !== "")
                            guardarImagen(data.id);

                        if (!data.accion) {
                            window.location.href = "@Url.Action("EditarContacto", new { id = "__id__" })".replace("__id__", data.id);
                        }
                        else {
                            window.location.href = "@Url.Action("ListarContactos", new { nombreContacto = "__nombre__" })".replace("__nombre__", data.nombre);
                        }
                    }
                    else {
                        $('#repetidoValid').prop('hidden', false);
                        $('#Cedula').focus();
                    }

                },
                error: function (err, scnd) {
                    cargarAlert('@Lb["errorGeneral"]');
                }

            });
        }


    }

    function crearModeloCondiciones() {

        var cp = [];

        var modelC = {
            id: $('#idCPCliente').val(),
            plazoCredito: $('#plazoC').val(),
            montoMaximo: $('#montoMaxC').inputmask('unmaskedvalue').replace(".", ","),
            esCliente: true,
            esProveedor: false,
            idContacto: @Model.IdContacto
        };

        cp.push(modelC);

        var modelP = {
            id: $('#idCPProveedor').val(),
            plazoCredito: $('#plazoP').val(),
            montoMaximo: $('#montoMaxP').inputmask('unmaskedvalue').replace(".", ","),
            esCliente: true,
            esProveedor: false,
            idContacto: @Model.IdContacto
        };

        cp.push(modelP);


        return cp;
    }

    function guardarImagen(idContacto) {

         var formData = new FormData();
         var file = $('#fileUploadC')[0].files[0];

         formData.append("Foto", file);

        $.ajax({
            type: "post",
            dataType: 'json',
            contentType: false,
            processData: false,
            url: '@Url.Action("GuardarImagen", "Contacto", new { idContacto = "__id__"})'.replace("__id__", idContacto),
            data: formData,
             success: function (data) {

             },
             error: function (err, scnd) {
                 cargarAlert('@Lb["errorGeneral"]');
                 console.log(err.statusText);
             }
         });

    }

    function getCamposPersonalizados() {

         $.ajax({
            type: "get",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetCamposPersonalizados", "Contacto")',
            data: {idContacto: @Model.IdContacto},
            success: function (data) {

                camposPersonalizados = data;

                for (var i = 0; i < data.length; i++) {
                    var idCampoContacto = 0;
                    var valor = '';
                    if (data[i].tbCrContactosCamposPersonalizados.length != 0) {
                        idCampoContacto = data[i].tbCrContactosCamposPersonalizados[0].id;
                        valor = data[i].tbCrContactosCamposPersonalizados[0].valor;
                    }
                    var model = {
                        id: idCampoContacto,
                        idContacto: @Model.IdContacto,
                        idCampoPersonalizados: data[i].id,
                        valor: valor,
                        tipo: data[i].tipo
                    };

                    ccPersonalizados.push(model);
                }

                cargarCamposPersonalizados(camposPersonalizados);
            },
            error: function (err, scnd) {
                cargarAlert('@Lb["errorGeneral"]');
                console.log(err.statusText);
            }
         });
    }

    function getTipoClientes() {

         $.ajax({
            type: "get",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetTiposClientes", "TipoCliente")',
            success: function (data) {


                tipoClientesList = data;
                setTipoClientes(data);

                //cargarTipoCLientes(data);

            },
            error: function (err, scnd) {
                cargarAlert('@Lb["errorGeneral"]');
                console.log(err.statusText);
            }
         });
    }

    function getTipoProveedores() {

         $.ajax({
            type: "get",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetTiposProveedor", "TipoProveedor")',
            success: function (data) {


                tipoProveedoresList = data;
                setTipoProveedores(data);

                //cargarTipoCLientes(data);

            },
            error: function (err, scnd) {
                cargarAlert('@Lb["errorGeneral"]');
                console.log(err.statusText);
            }
         });
    }

    function getCondicionesPago() {
        $.ajax({
            type: "GET",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetCondicionesPago", "Contacto", new { idContacto = Model.IdContacto })',
            success: function (data) {

                if (data.length != 0) {
                    $('#idCPCliente').val(data[0].id);
                    $('#plazoC').val(data[0].plazoCredito);
                    $('#montoMaxC').val(data[0].montoMaximo);

                    $('#idCPProveedor').val(data[1].id);
                    $('#plazoP').val(data[1].plazoCredito);
                    $('#montoMaxP').val(data[1].montoMaximo);
                }

            },
            error: function (err, scnd) {
                console.log(err.statusText);
            }

        });
    }


    function getRelaciones() {
        $.ajax({
            type: "POST",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            url: '@Url.Action("_RelacionContacto", "Contacto")',
            data: { idContacto: @Model.IdContacto },
            success: function (data) {
                $('#relacionesContainer').html(data);
                $('#relacionesTab').addClass('active');
            },
            error: function (err, scnd) {
                console.log(err.statusText);
            }

        });
    }

    function getCuentasBancarias() {
        $.ajax({
            type: "GET",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            url: '@Url.Action("_ListarCuentasBancarias", "Contacto", new { idContacto = Model.IdContacto })',
            success: function (data) {

                $('#cuentasBancariasContainer').html(data);
            },
            error: function (err, scnd) {
                console.log(err.statusText);
            }

        });
    }

    function getTareasContacto() {
        $.ajax({
            type: "GET",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            url: '@Url.Action("_ListarTareasContacto", "Contacto", new { idContacto = Model.IdContacto })',
            success: function (data) {
                $('#tareasContainer').html(data);
            },
            error: function (err, scnd) {
                console.log(err.statusText);
            }

        });
    }


    /////////////////////////////////////////////////////////////////manejo del dom//////////////////////////////////////////////

    $('#Proveedor').change(function () {
        mostrarCuentasBancarias($(this).prop('checked'));
    });

    function mostrarCuentasBancarias(value) {
        if (!value) {
            $('#cuentasBancariasContainer').prop('hidden', true);
        } else {
            $('#cuentasBancariasContainer').prop('hidden', false);
        }
    }




    /////////Tipos de Clientes

    function setTipoClientes(data) {

        $('#IdTipoCliente')
            .find('option')
            .remove();

        for (var i = 0; i < data.length; i++) {
            if (data[i].idPadre === 0) {
                var o = new Option(data[i].nombre, data[i].id);
                if (@Model.IdTipoCliente === data[i].id) {
                    $(o).prop('selected', true);
                }
                $("#IdTipoCliente").append(o);
            }
        }

        cargarFamiliaClientes(parseInt($('#IdTipoCliente').val()));

    }

    function cargarFamiliaClientes(idTipo) {

        $('#IdFamiliaCliente')
            .find('option')
            .remove();

        for (var i = 0; i < tipoClientesList.length; i++) {
            if (tipoClientesList[i].idPadre == idTipo) {
                var o = new Option(tipoClientesList[i].nombre, tipoClientesList[i].id);
                if (@Model.IdFamiliaCliente === tipoClientesList[i].id) {
                    $(o).prop('selected', true);
                }
                $("#IdFamiliaCliente").append(o);
            }
        }

        cargarSubFamiliaClientes(parseInt($('#IdFamiliaCliente').val()));

    }

    function cargarSubFamiliaClientes(idFamilia) {

        $('#IdSubFamiliaCliente')
            .find('option')
            .remove();

        for (var i = 0; i < tipoClientesList.length; i++) {
            if (tipoClientesList[i].idPadre == idFamilia) {
                var o = new Option(tipoClientesList[i].nombre, tipoClientesList[i].id);
                if (@Model.IdSubFamiliaCliente === tipoClientesList[i].id) {
                    $(o).prop('selected', true);
                }
                $("#IdSubFamiliaCliente").append(o);
            }
        }

    }

    /////////Fin de Tipos de Clientes


    /////////Tipos de Proveedores

    function setTipoProveedores(data) {

        $('#IdTipoProveedor')
            .find('option')
            .remove();

        for (var i = 0; i < data.length; i++) {
            if (data[i].idPadre === 0) {
                var o = new Option(data[i].nombre, data[i].id);
                if (@Model.IdTipoProveedor === data[i].id) {
                    $(o).prop('selected', true);
                }
                $("#IdTipoProveedor").append(o);
            }
        }

        cargarFamiliaProveedores(parseInt($('#IdTipoProveedor').val()));

    }

    function cargarFamiliaProveedores(idTipo) {

        $('#IdFamiliaProveedor')
            .find('option')
            .remove();

        for (var i = 0; i < tipoProveedoresList.length; i++) {
            if (tipoProveedoresList[i].idPadre == idTipo) {
                var o = new Option(tipoProveedoresList[i].nombre, tipoProveedoresList[i].id);
                if (@Model.IdFamiliaProveedor === tipoProveedoresList[i].id) {
                    $(o).prop('selected', true);
                }
                $("#IdFamiliaProveedor").append(o);
            }
        }

        cargarSubFamiliaProveedores(parseInt($('#IdFamiliaProveedor').val()));

    }

    function cargarSubFamiliaProveedores(idFamilia) {

        $('#IdSubFamiliaProveedor')
            .find('option')
            .remove();

        for (var i = 0; i < tipoProveedoresList.length; i++) {
            if (tipoProveedoresList[i].idPadre == idFamilia) {
                var o = new Option(tipoProveedoresList[i].nombre, tipoProveedoresList[i].id);
                if (@Model.IdSubFamiliaCliente === tipoProveedoresList[i].id) {
                    $(o).prop('selected', true);
                }
                $("#IdSubFamiliaProveedor").append(o);
            }
        }

    }

    /////////Fin de Tipos de proveedores

    function getProvincias() {
        if ($("#Pais option:selected").text() === "Costa Rica") {

            $.ajax({
                type: "POST",
                url: '@Url.Action("Provincias", "Contacto")',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].idProvincia == @Model.Provincia)
                            $("#Provincia").append('<option selected class="provin" value=' + data[i].idProvincia + '>' + data[i].descProvincia + ' </option>');
                        else
                            $("#Provincia").append('<option class="provin" value=' + data[i].idProvincia + '>' + data[i].descProvincia + ' </option>');
                    }
                    $("#Provincia").prop("disabled", false);

                    $("#Provincia").trigger("change");
                },
                error: function (err, scnd) {
                    console.log(err.statusText);
                }

            });

        } else {
            $("#Provincia").prop("disabled", true);
            $("#Canton").prop("disabled", true);
            $("#Distrito").prop("disabled", true);
            $("#Provincia").find('option').remove();
            $("#Canton").find('option').remove();
            $("#Distrito").find('option').remove();
        }
    }

    function getCantones(idProvincia) {
        $("#Canton").find('option').remove();
        $.ajax({
            type: "POST",
            url: '@Url.Action("Cantones", "Contacto")',
            data: { idProvincia: idProvincia },
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    if (data[i].idCanton == @Model.Canton)
                        $("#Canton").append('<option selected class="canton" value=' + data[i].idCanton + '>' + data[i].descCanton + ' </option>');
                    else
                        $("#Canton").append('<option class="canton" value=' + data[i].idCanton + '>' + data[i].descCanton + ' </option>');
                }
                $("#Canton").prop("disabled", false);
                $("#Canton").trigger("change");
            },

            error: function (err, scnd) {
                console.log(err.statusText);
                }

        });
    }

    function getDistritos(value) {
        $("#Distrito").find('option').remove();
        $.ajax({

            type: "POST",
            url: '@Url.Action("Distritos", "Contacto")',
            data: { idDistrito: value, idProvincia: $('#Provincia').val()},
            success: function (data) {


                for (var i = 0; i < data.length; i++) {

                    if (data[i].idDistrito == @Model.Distrito)
                        $("#Distrito").append('<option selected class="distrito" value=' + data[i].idDistrito + '>' + data[i].descDistrito + ' </option>');
                    else
                        $("#Distrito").append('<option class="distrito" value=' + data[i].idDistrito + '>' + data[i].descDistrito + ' </option>');

                }

                $("#Distrito").prop("disabled", false);

            },

            error: function (err, scnd) {
                console.log(err.statusText);
            }

        });
    }

    function cargarCamposPersonalizados(data) {

        var contador = 0;
        var input = '';
        for (var i = 0; i < data.length; i++) {

            var value = '';
            if (data[i].tbCrContactosCamposPersonalizados.length != 0) {
                value = data[i].tbCrContactosCamposPersonalizados[0].valor;
            }

            if (data[i].tipo != "lista") {

                if (data[i].tipo === "casilla") {

                    var idC = data[i].id;
                    if (@Model.IdContacto == 0) {
                        idC = i;
                    }

                    if (value == "" || value.toString() == "false")
                        value = "";
                    else
                        value = "checked='checked'";

                    input = '<div class="form-group col-md-4 col-sm-4 col-xs-12" >'
                        + '<label style="padding-top:2.8rem" for="' + idC + '"> ' + data[i].nombre + ' <input onchange="editarCCPersonalizado(value, ' + contador + ', ' + idC + ')" id="' + idC + '" type="checkbox" ' + value + '  /></label>'
                        + '</div > ';
                }
                else if (data[i].tipo === "texto") {
                    input = '<div class="form-group col-md-4 col-sm-4 col-xs-12" >'
                        + '<label for="' + data[i].id + '">' + data[i].nombre + ':</label>'
                        + '<input onchange="editarCCPersonalizado(value, ' + contador + ', null)" id="' + data[i].id + '" class="form-control" value="' + value + '" type="' + data[i].tipo + '" />'
                        + '</div>';
                }
                else if (data[i].tipo === "fecha") {
                    input = '<div class="form-group col-md-4 col-sm-4 col-xs-12" style="margin: 0; padding:0">'
                        + '<label for="' + data[i].id + '">' + data[i].nombre + ':</label>'
                        + '<div class="input-group date fechaPickerCP" >'
                        + '<input onchange="editarCCPersonalizado(value, ' + contador + ', null)" id="' + data[i].id + '" class="form-control" value="' + value + '" type="text" />'
                        + '<span class="input-group-addon"><span class="fas fa-calendar"></span></span>'
                        + '</div>'
                        + '</div>';
                }

            }
            else {
                var valoresLista = '';
                for (var k = 0; k < data[i].tbCrListaDesplegables.length; k++) {

                    var selected = '';
                    if (data[i].tbCrListaDesplegables[k].id.toString() === value) {
                        selected = 'selected';
                    }

                    valoresLista += '<option ' + selected + ' value="' + data[i].tbCrListaDesplegables[k].id + '" >' + data[i].tbCrListaDesplegables[k].valor + '</option>';
                }

                input = '<div class="form-group col-md-4 col-sm-4 col-xs-12">'
                    + '<label for="' + data[i].id + '">' + data[i].nombre + ':</label>'
                    + '<select onchange="editarCCPersonalizado(value, ' + contador + ', null)" id="' + data[i].id + '" class="form-control">'
                    + valoresLista
                    + '</select></div>';
            }

            contador++;
            $('#frmCP').append(input);

            if (data[i].tipo == "fecha"){
                $('.fechaPickerCP').datetimepicker({
                    locale: localStorage.getItem("idioma")
                });
            }


        }



    }


    function tipoCedula(key) {

        $cedula.removeClass("cedFisica cedJuridica cedDimex cedNite");

        switch (key) {

            case "1":
                $cedula.addClass("cedFisica");
                $cedula.prop('placeholder', "0-0000-0000");
                break;
            case "2":
                $cedula.addClass("cedJuridica");
                $cedula.prop('placeholder', "0-000-000000");
                break;
            case "3":
                $cedula.addClass("cedDimex");
                $cedula.prop('placeholder', "000000000000");
                break;
            case "4":
                $cedula.addClass("cedNite");
                $cedula.prop('placeholder', "000000000000");
                break;
        }
    }

    function ocultarCamposNombre(value) {
        if (value === 1) {
            $('.nombrePersona').prop("hidden", false);
            $('.nombreEmpresa').prop("hidden", true);

            $('#NombreJuridico').val("");
            $('#NombreComercial').val("");

        }
        else {
            $('.nombrePersona').prop("hidden", true);
            $('.nombreEmpresa').prop("hidden", false);

            $('#Nombre').val("");
            $('#Apellidos').val("");
        }

    }

    function mostrarTipoProveedor() {

        if ($('#Proveedor').prop('checked'))
            $('.tipoProveedor').prop('hidden', false);
        else
            $('.tipoProveedor').prop('hidden', true);
    }
    function mostrarTipoCliente() {
        if ($('#Cliente').prop('checked'))
            $('.tipoCliente').prop('hidden', false);
        else
            $('.tipoCliente').prop('hidden', true);
    }

    $('#fileUploadC').bind('change', function () {

        var file = $(this)[0].files[0];



        if ($(this).val() != '') {


            var e = 0;
            e = + file.size;

            if (e > 6000000) {
                $('#tamanoArchivoC').attr('hidden', false);
                $(this).val('');
            }
            else
                $('#tamanoArchivoC').attr('hidden', true);

            if (!(/\.(jpg|png)$/i).test(file.name)) {
                $('#tipoArchivoC').attr('hidden', false);
                $(this).val('');
            }
            else
                $('#tipoArchivoC').attr('hidden', true);

        }




    });

    function cancelar() {
        bootbox.confirm("@Lb["confirmCancelar"]", function (result) {
            if (result)
                window.location.href = "@Url.Action("ListarContactos")";
            else {
                if ($('#persona').prop('checked')) {
                    setTimeout(function () { $('#Nombre').focus(); }, 1);
                }
                else {
                    setTimeout(function () { $('#NombreComercial').focus(); }, 1);
                }
            }

        });
    }
</script>