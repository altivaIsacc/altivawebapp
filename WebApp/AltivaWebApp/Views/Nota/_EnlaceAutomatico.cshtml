@inject IStringLocalizer<SharedResources> Lb
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
<h5 class="col-md-11 col-sm-11 col-xs-11" id="departamentoModallabel"> @Lb["EnlaceAutomatico"]</h5>
<div class="col-md-1 col-sm-1 col-xs-1">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="col-md-3 col-sm-3 col-xs-12">
    <label>@Lb["Disponible"]:</label>
    <input readonly class="form-control currency" id="disponible" />
    <br />
</div>

    <table class="table table-bordered table-striped col-md-2 col-sm-2 col-xs-12 well" id="tblSinAplicar">
        <thead>
            <tr>

                <th><span>@Lb["tipo"]</span></th>
                <th><span>@Lb["Documento"]</span></th>
                <th><span>@Lb["Fecha"]</span></th>
                <th><span>@Lb["Pendiente"]</span></th>
                <th><span>@Lb["Aplicado"]</span></th>
            </tr>
        </thead>
        <tbody>
            <tr class="lineaSinAplicar"></tr>
        </tbody>
    </table>
 
    <div class="col-md-3 col-sm-3 col-xs-12 pull-right" >
        <label>@Lb["Aplicado"]:</label>
        <input readonly id="sumaAplicado" class="form-control currency" />

    </div>

    <div class="row">
        <div class="form-group col-md-12 col-sm-12 col-xs-12">
            <br />
            <button class="btn btn-success btnAccion" onclick="GuardarEnlace()">@Lb["Aplicar"]</button>
            <a id="cancelarEnlace" onclick="" class="btn btn-default">@Lb["Cancelar"]</a>
            <span id="saldoValid" class="text-danger" hidden>@Lb["saldoValid"]</span>

        </div>

    </div>
<script>

    var saldoAplicable = 0;

    $(document).ready(function () {
        $("#disponible").val($("#totalDisponible").inputmask('unmaskedvalue'));
        $("#sumaAplicado").val(0.00);

        saldoAplicable = getSaldoAplicable();
        getDocumentosPendientes();

    });

    $("#cancelarEnlace").on("click", function () {
        $('#modalTipoJustificante').modal('hide');
    });
         
    function cargarTablaDocSinAplicar(data) {

        $('.filasSinAplicar').remove();
        contadorFila = 0;

        var aplicado = 0;

        for (var i = 0; i < data.length; i++) {
            contadorFila++;
            var body = '<tr class="filasSinAplicar" id="fila' + contadorFila + '"><td style="padding-top:2rem;">' + recuperarTipoDocumento(data[i].idTipoDocumento) + '</td>'
                + '<td style="padding-top:2rem;"><span>' + data[i].idDocumento + '</span></td>'
                + '<td ><span >' + recuperarFecha(data[i].fechaDocumento) + '</span></td>'
                + '<td ><span id="pendiente' + i + '" class="currency">' + recuperarSaldo(data[i]) + '</span></td>'
                + '<td ><input id="aplicado' + i + '" onkeyup="cambiarAplicado(' + i + ')"  class="form-control currency" value="' + aplicado + '"/></td></tr>';
            $('.lineaSinAplicar').before(body);

        }
    }
    
    function calcularLinea(saldo) {

        if (saldo > 0 && saldo != NaN) {
            var disponible = $("#disponible").inputmask('unmaskedvalue');
            var totalApli = $("#sumaAplicado").inputmask('unmaskedvalue');
            var result = 0;
            if (saldo <= disponible) {
                result = disponible - saldo;
                $("#disponible").val(result);
                $("#sumaAplicado").val(parseFloat(totalApli) + saldo);
                return saldo;
            }
            if (saldo > disponible) {
                $("#disponible").val(0.00);
                $("#sumaAplicado").val(parseFloat(disponible) + parseFloat(totalApli));
                return disponible;
            }
        } else {
            return 0;
        }
    }

    ///AJAX///
    function GuardarEnlace() {
    $('#saldoValid').prop('hidden', true);
        var total = $("#disponible").inputmask('unmaskedvalue');
        if (total < 0) {
          $('#saldoValid').prop('hidden', false);
        } else {           
            lineasAplicado = JSON.parse(JSON.stringify(lineasEnlace));

            Guardar();                      
            $('#modalTipoJustificante').modal('hide');
        }
    }

    function cargarDatos() {
        $("#totalDisponible").val($("#disponible").inputmask('unmaskedvalue'));
        $("#totalAplicado").val($("#sumaAplicado").inputmask('unmaskedvalue'));
    }

    function getDocumentosPendientes() {

        var url = '@Url.Action("GetDocumentosPendientesContacto", "Nota", new { idContacto = ViewBag.idContacto })';
        $.ajax({
            type: "get",
            dataType: "json",
            url: url,
            success: function (data) {

                docSinAplicar = data;
                cargarTablaDocSinAplicar(data);
            },
            error: function (err, scnd) {
               console.log(err.statusText);
            }
        });
    }

    function calcularLinea(pos) {
        var moneda = parseInt($("#tipoMoneda").val());
        var saldo = lineasEnlace[pos].saldoBase;
        if(moneda == 2)
            saldo = lineasEnlace[pos].saldoDolar;
         if(moneda == 3)
            saldo = lineasEnlace[pos].saldoEuro;
        if (saldo > 0 && saldo != NaN) {

            var disponible = $("#disponible").inputmask('unmaskedvalue');
            var totalApli = $("#sumaAplicado").inputmask('unmaskedvalue');
            var result = 0;
            if (saldo <= disponible) {
                result = disponible - saldo;
                $("#disponible").val(result);
                $("#sumaAplicado").val(parseFloat(totalApli) + saldo);
                return saldo;
            }
            if (saldo > disponible) {
                $("#disponible").val(0.00);
                $("#sumaAplicado").val(parseFloat(disponible) + parseFloat(totalApli));
                return disponible;
            }
        } else {
            return 0;
        }
    }

    function crearModeloEnlace() {
        var array = [];
        for (var i = 0; i < movimientosDetalle.length; i++) {
            if (movimientosDetalle[i].tipo == 1) {
                var model = {
                    num: movimientosDetalle[i].idDocumento,
                    IdMovimientoDesde: parseInt($("#IdMovimiento").val()),
                    IdMovimientoHasta: movimientosDetalle[i].idMovimiento,
                    Aplicado: parseFloat($("#aplicadoFinal" + i).inputmask('unmaskedvalue')).toString().replace(".", ","),
                    CompraDolarTC: parseFloat($("#dolar").inputmask('unmaskedvalue')),
                    VentaDolarTC: parseFloat($("#dolarVenta").inputmask('unmaskedvalue')),
                    CompraEuroTC: parseFloat($("#euro").inputmask('unmaskedvalue')),
                    VentaEuroTC: parseFloat($("#euroVenta").inputmask('unmaskedvalue')),
                    IdMoneda: parseInt($("#tipoMoneda").val()),
                };
                array.push(model);
            }
        }
        return array;
    }

</script>
