@model AltivaWebApp.ViewModels.TrasladoViewModel
@inject IStringLocalizer<SharedResources> SharedLocalizer
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@{
    var titulo = "";

    @if (Model.IdTraslado != 0)
    {

        titulo = @SharedLocalizer["editarTraslado"];

    }
    else
    {
        titulo = @SharedLocalizer["nuevoTraslado"];
    }

}
<style>
    .color {
        color: #fff;
    }
</style>

<div class="container" style=" overflow-y: scroll; height:60rem;">

    <div class="row">
        <h4 class="col-md-11 col-sm-11 col-xs-11" id="trasladoModallabel">@titulo</h4>
        <div class="col-md-1">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
    <hr />


    <div class="container">
        <div class="form-row">
            <input type="hidden" asp-for="IdTraslado" class="form-control" id="IdTraslado" size="5" /> <!--   type="hidden"   -->
            <span hidden id="IdTrasladoValid" class="text-danger">@SharedLocalizer["IdTrasladoValid"]</span>
        </div>

        <div class="row">

            <div class="col-md-4 col-sm-4 col-xs-4 ">
                <label class="control-label">@SharedLocalizer["BodegaOrigen"]:</label>
                <select id="IdBodegaOrigen" class="form-control" onChange="validarBodegaOrigenSeleccionada(value)" autofocus="autofocus">
                    <option id="option" value="">@SharedLocalizer["seleccione"]</option>
                </select>
                <span hidden id="IdbodegaOrigenRequeridaValid" class="text-danger">@SharedLocalizer["bodegaRequerida"]</span>
            </div>

            <div class="col-md-4 col-sm-4 col-xs-4 ">
                <div class="row">
                    <fieldset>
                        <div class="form-group">
                            <label>@SharedLocalizer["Fecha"]:</label>
                            <div class='input-group date' id='fechaPicker'>
                                <input type='text' class="form-control" id="fecha" min="2019-01-01" max="2019-01-01" required />
                                <span class="input-group-addon">
                                    <span class="fas fa-calendar"></span>
                                </span>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>

            <div class="col-md-4 col-sm-4 col-xs-4 ">
                <label class="control-label">@SharedLocalizer["BodegaDestino"]:</label>
                <select id="IdBodegaDestino" class="form-control">

                    <option id="option" value="">@SharedLocalizer["seleccione"]</option>
                </select>
                <span hidden id="IdbodegaDestinoRequeridaValid" class="text-danger">@SharedLocalizer["bodegaRequerida"]</span>
            </div>

        </div>

        <div class="row">
            <div class="col-md-10 col-sm-10 col-xs-10">
                <div class="input-group">
                    <div class="input-group">
                        <span id="errorExistenciaArticulo" class="text-danger">@SharedLocalizer["Este articulo no existe"] </span>
                    </div>
                    <div class="input-group">
                        <span class="input-group-btn">
                            <button class="btn btn-success" id="BuscarInventarioBodega" onclick="mostrarModalInventarioBodega()">@SharedLocalizer["buscarInventarioBodega"]</button>
                        </span>
                        <input type="text" id="BuscarCodigoInventarioBodega" size="25" maxlength="50" class="form-control" placeholder="@SharedLocalizer["buscarPorDescripcionNombre"]">
                    </div>
                </div>
            </div>

            <div class="col-md-2 col-sm-2 col-xs-2">
                <div class="text-right">

                    <div class="row">

                        <div class="col-md-6 col-sm-6 col-xs-6">
                            <div class="input-group">
                                <br>
                                <button class="btn btn-danger btn-sm" id="Anular" onclick="anularTraslado()">@SharedLocalizer["Anular"]</button>
                                <input type="hidden" value="@Model.Anulado.ToString()" id="Anulado" class="form-control" />
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6 col-sm-6 col-xs-6">
                                <div class="input-group">
                                    <br>
                                    <button class="btn btn-primary btn-sm" id="Pdf" onclick="crearPdfTrasladoEspecifico()">@SharedLocalizer["PDF"]</button>
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
            </div>


        </div>

        <div class="row">
            <div class="col-md-12 table-responsive">
                <table class="table table-bordered" id="tablaTrasladoInventario">
                    <thead>
                        <tr>
                            <th>
                                @SharedLocalizer["CodigoArticulo"]
                            </th>
                            <th>
                                @SharedLocalizer["descripcion"]
                            </th>
                            <th>
                                @SharedLocalizer["Cantidad"]
                            </th>

                            <th>
                                @SharedLocalizer["PrecioUnitario"]
                            </th>
                            <th>
                                @SharedLocalizer["CostoTotal"]
                            </th>

                            <th>
                                @SharedLocalizer["accion"]
                            </th>
                        </tr>
                        </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

        <br>

        <div class="row">
            <div class="col-md-6 col-sm-6 col-xs-6">
                <div class="input-group">
                    <label class="control-label">@SharedLocalizer["Comentario"]:</label>
                    <textarea asp-for="Comentario" id="Comentario" rows="3" class="form-control" style="resize:none;" maxlength="200"></textarea>
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-6">
                <div class="text-right">
                    <label class="control-label">@SharedLocalizer["CostoTotal"]:</label>
                    <input class="text-right colon" size="20" type="text" maxlength="50" id="CostoTraslado" />
                    <input class="text-right" size="20" type="text" maxlength="50" id="txtCostoTraslado" />
                </div>
            </div>
        </div>


        <div class="form-row" id="divTraslado">

            <div class="input-group">
                <label class="control-label">@SharedLocalizer["fechaCreacion"]:</label>
                <input readonly asp-for="FechaCreacion" size="12" type="text" maxlength="50" id="FechaCreacion" class="form-control" />
            </div>

            <div class="input-group">
                <label class="control-label">@SharedLocalizer["nombreUsuario"]:</label>
                <input type="hidden" asp-for="IdUsuario" maxlength="50" id="IdUsuario" class="form-control" />
                <input readonly id="IdUsuario2" size="14" class="form-control" />
            </div>

        </div>
        <br>

        <button class="btn btn-success" onclick="guardarTraslado()">@SharedLocalizer["Guardar"] <i class="fas fa-save"></i></button>
        <button class="btn btn-default" data-dismiss="modal" onclick="focus()">@SharedLocalizer["Cancelar"]</button>

    </div>
</div>




<!--  modal -->
<div class="row">
    <div class="modal fade bd-example-modal-lg" id="modalInventarioBodega" tabindex="-1" role="dialog" aria-labelledby="InventarioBodegaModallabel" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalLongTitle">@SharedLocalizer["InventarioBodega"]</h4>
                    <span id="error" class="text-danger">@SharedLocalizer["ArticuloEnlistado"] </span>

                    <button type="button" class="close" aria-label="Close" onclick="ocultarModalInventarioBodega()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>



                <div class="modal-body">


                    <div class="row">
                        <div class="col-md-6 ">
                            <div class="input-group">
                                <span class="input-group-btn">
                                    <button class="btn btn-success">@SharedLocalizer["buscar"] </button>
                                </span>
                                <input type="text" autofocus="autofocus" id="filtroBuscarInventarioBodega" class="form-control" maxlength="50" placeholder="@SharedLocalizer["buscarPorNombre"].">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 table-responsive">
                            <table class="table table-bordered" id="tblInventarioBodega">
                                <thead>
                                    <tr>
                                        <th>
                                            @SharedLocalizer["Id"]
                                        </th>

                                        <th>
                                            @SharedLocalizer["Codigo"]
                                        </th>

                                        <th>
                                            @SharedLocalizer["descripcion"]
                                        </th>

                                        <th>
                                            @SharedLocalizer["existencia"]
                                        </th>

                                        <th>
                                            @SharedLocalizer["PrecioUnitario"]
                                        </th>

                                        <th>
                                            @SharedLocalizer["Elegir"]
                                        </th>
                                    </tr>
                                </thead>

                                <tbody></tbody>
                            </table>
                        </div>
                    </div>

                </div>
            

            </div>
        </div>
    </div>
</div>


<script>




    var arrayBodegas = [];
    var arrayInventarioBodegas = [];
    var arrayInventario = [];
    var arrayArticuloPorBodegaOrigenSeleccionada = [];
    var arrayTablaTraslado = [];
    var arrayTablaTrasladoInventario = [];


    var arrayTraslado = [];
    var arrayTrasladoInventario = [];
    var fecha = $('#fecha');
    var arrayArticulosEliminados = [];

    var arrayTablaTrasladoItemEditadosOnuevos = [];


    $(document).ready(function () {


        validarGuardarEditar();
        getBodegasInventario();


        if (@Model.IdTraslado != 0) {

            date = new Date(formatearFecha());


            $('#fechaPicker').datetimepicker({
                defaultDate: date,
                locale: localStorage.getItem("idioma")
            });

        } else {

            $('#fechaPicker').datetimepicker({
                defaultDate: new Date(),
                locale: localStorage.getItem("idioma")
            });

        }

        //inicializa formato de la moneda tambien aca unicamente por el input costoTotal
        $(".colon").inputmask('currency', {
            prefix: monedas[0].simbolo + " ",
            rightAlign: true
        });

        // cuando precione enter al buscador
        $('#BuscarCodigoInventarioBodega').keypress(function (e) {
            if (e.keyCode == 13)
                $('#BuscarInventarioBodega').click();
        });





    });



    function formatearFecha() {

        return '@Model.Fecha.Month' + "/" + '@Model.Fecha.Day' + "/" + '@Model.Fecha.Year' + " " + '@Model.Fecha.TimeOfDay';

    }


    function controlarEnter() {
        if (e.keyCode === 13) {
            e.preventDefault();
            enter();
        }
    }


    fecha.on('keyup', function () {
        $('#fechaPicker').datetimepicker('defaultDate', new Date());
    });



    function validarGuardarEditar(){
        if (validarModal() == true) {
            //alert('entro a guardar');
            ocultarCampos();
        } else {
           // alert('entro a editar');
            recuperarUsuario();
            mostrarOcultarCampos();

            getTraslado();

        }
    }



    function validarModal() {
        var idTraslado = $("#IdTraslado").val();
        if (idTraslado == 0) {
            return true;
        } else {
            return false;
        }
    }



    function ocultarCampos() {
        $('#divTraslado').hide();
        $('#BuscarInventarioBodega').prop("disabled", true);
        $('#CostoTraslado').prop("disabled", true);
        $('#txtCostoTraslado').hide();
        $('#errorExistenciaArticulo').hide(); //el mensaje del error se oculte

        $('#Anular').hide();
        $('#Pdf').hide();




    }



    function mostrarOcultarCampos() {
        $('#divTraslado').show();
        $('#errorExistenciaArticulo').hide();
        $('#CostoTraslado').prop("disabled", true);
        $('#txtCostoTraslado').hide();
        $('#IdBodegaDestino').prop("disabled", true);
        $('#IdBodegaOrigen').prop("disabled", true);
        $('#Pdf').show();

        var estadoAnulado = "";
        estadoAnulado = "@Model.Anulado";
        //console.log(estadoAnulado);

        if (estadoAnulado == "False") {

           // console.log("dejar disponible el boton");
            $('#Anular').prop("disabled", false);

        } else if (estadoAnulado == "True") {
          //  console.log("bloquear boton");
            $('#Anular').prop("disabled", true);

        }



    }



     function getBodegasInventario() {
          $.ajax({
              type: "get",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
              url: '@Url.Action("GetBodegaInventario", "AjusteInventario")',
              success: function (data) {

                  arrayBodegas = data;
                  obtenerTablaInventarioBodega();
                  obtenerTablaInventario();
                  cargarBodegasOrigen();

                  cargarDatosTraslado(arrayTablaTraslado);//para que muestre la tabla vacia
               },
              error: function (err, scnd) {
                  cargarAlert('@SharedLocalizer["errorGeneral"]');
                  console.log(err.statusText);
              }
          });
    }



    function obtenerTablaInventarioBodega() {
        for (var i = 0; i < arrayBodegas.length; i++) {
            if (arrayBodegas[i].tbPrInventarioBodega.length != 0) {
                arrayInventarioBodegas.push(arrayBodegas[i].tbPrInventarioBodega);
            }
        }

    }



    function obtenerTablaInventario() {
        var auxArrayInventarioBodegas  = [];
        for (var i = 0; i < arrayBodegas.length; i++) {
            auxArrayInventarioBodegas = arrayBodegas[i].tbPrInventarioBodega;
            for (var j = 0; j < auxArrayInventarioBodegas.length; j++) {
                arrayInventario.push(auxArrayInventarioBodegas[j].idInventarioNavigation);
            }
        }

    }



    function cargarBodegasOrigen() {
        for (var i = 0; i < arrayBodegas.length; i++) {
            if (arrayBodegas[i].tbPrInventarioBodega.length != 0) {
                var o = new Option(arrayBodegas[i].nombre, arrayBodegas[i].id);
                    if (@Model.IdBodegaOrigen == arrayBodegas[i].id) {
                        $(o).prop('selected', true);
                        validarBodegaOrigenSeleccionada(@Model.IdBodegaOrigen);
                    }
                $("#IdBodegaOrigen").append(o);
            }
        }
    }



    var array = [];
    function cargarBodegasDestino(idBodegaOrigenSeleccionada) {

        if (idBodegaOrigenSeleccionada != "") {
            array = [];
            for (var i = 0; i < arrayBodegas.length; i++) {
                var model = {
                    id: arrayBodegas[i].id,
                    nombre: arrayBodegas[i].nombre,
                };

                array.push(model);
            }

              document.getElementById('IdBodegaDestino').options.length = 0;
                for (var i = 0; i < array.length; i++)
                {

                    if ($('#IdTraslado').val() == 0) {
                        //guarda
                        if (array[i].id != idBodegaOrigenSeleccionada) {
                            var o = new Option(array[i].nombre, array[i].id);
                            $("#IdBodegaDestino").append(o);
                        }

                    } else {
                         //edita
                        var bodegaDestinoEditar = @Model.IdBodegaDestino;

                        if (array[i].id == bodegaDestinoEditar) {
                            var o = new Option(array[i].nombre, array[i].id);
                            $("#IdBodegaDestino").append(o);
                        }

                    }
                }
        }
    }





    function limpiarSelect() {

        var select = document.getElementById('IdBodegaDestino');

        while (select.length > 0) {
            select.remove(1);
        }
    }



    function validarBodegaOrigenSeleccionada(value) {
        $('#IdbodegaOrigenRequeridaValid').hide();
        $('#IdbodegaDestinoRequeridaValid').hide();
        var vacio = "";
        if (value == "") {
            ocultarCampos();
            cargarBodegasDestino(vacio);

        } else {

            $('#BuscarInventarioBodega').prop("disabled", false);
            cargarBodegasDestino(value);
            obtenerBodega(value);
            cargarDatosInventarioBodega();
        }
    }



    function mostrarModalInventarioBodega() {
        $('#error').hide();
        var value = $('#BuscarCodigoInventarioBodega').val().trim();

        if (value != 0) {

            buscarArticuloInventarioBodega(value);
        } else {
            $('#modalInventarioBodega').modal('show');

            $('#filtroBuscarInventarioBodega').val("");

        }
    }



    function buscarArticuloInventarioBodega(value) {
        var existeInventarioBodega = "";
        var existeTraslado = "";
        existeInventarioBodega = validarExistenciaInventarioBodega(arrayArticuloPorBodegaOrigenSeleccionada, value);
        existeTraslado = validarExistenciaTablaTraslado(arrayTablaTraslado, value);

        if (existeInventarioBodega == true) {

            if (existeTraslado == true) {
                cargarAlert("@SharedLocalizer["ArticuloEnlistado"]");
            } else {
                agregarArticuloTablaTraslado(value);
                $('#BuscarCodigoInventarioBodega').val("");
                $('#IdBodegaOrigen').prop("disabled", true);
                $('#IdBodegaDestino').prop("disabled", true);
            }
        } else {

            bootbox.alert({
                message: "@SharedLocalizer["noExisteArticulo"]",
                locale: 'en'
            });


        }
    }



    function validarExistenciaInventarioBodega(array, value) {

        var respuesta = false;
        for (var i = 0; i < array.length; i++) {
            if (array[i].codigo == value || array[i].descripcion == value) {
                respuesta = true;
                break;
            }
        }
        return respuesta;
    }



    function validarExistenciaTablaTraslado(array, value) {

        var respuesta = false;
        for (var i = 0; i < array.length; i++) {
            if (array[i].codigoArticulo == value || array[i].descripcion == value) {
                respuesta = true;
                break;
            }
        }
        return respuesta;
    }




    function agregarArticuloTablaTraslado(value) {

        for (var i = 0; i < arrayArticuloPorBodegaOrigenSeleccionada.length; i++) {
            if (arrayArticuloPorBodegaOrigenSeleccionada[i].codigo == value || arrayArticuloPorBodegaOrigenSeleccionada[i].descripcion == value ) {
                var objEncontrado = {
                    id: 0,
                    idTraslado: @Model.IdTraslado,
                    idInventario: arrayArticuloPorBodegaOrigenSeleccionada[i].idInventario,
                    codigoArticulo: arrayArticuloPorBodegaOrigenSeleccionada[i].codigo,
                    descripcion: arrayArticuloPorBodegaOrigenSeleccionada[i].descripcion,
                    cantidad: 1,
                    precioUnitario: arrayArticuloPorBodegaOrigenSeleccionada[i].costoPromedioBodega,
                    costoTotal: arrayArticuloPorBodegaOrigenSeleccionada[i].costoPromedioBodega,
                    existenciaBodega: arrayArticuloPorBodegaOrigenSeleccionada[i].existenciaBodega
                };
            }
        }

        arrayTablaTraslado.push(objEncontrado);

        cargarDatosTraslado(arrayTablaTraslado);
    }




    function ocultarModalInventarioBodega() {
        $('#modalInventarioBodega').modal('hide');

        if (arrayTablaTraslado.length == 0) {
            $('#IdBodegaOrigen').prop("disabled", false);
            $('#IdBodegaDestino').prop("disabled", false);

            } else {
                $('#IdBodegaOrigen').prop("disabled", true);
                $('#IdBodegaDestino').prop("disabled", true);

            }
    }



    function obtenerBodega(value) {
        for (var i = 0; i < arrayBodegas.length; i++) {
            if (value == arrayBodegas[i].id) {
                obtenerArticulosPorBodega(arrayBodegas[i].tbPrInventarioBodega);
                break;
            }
        }
    }




    function obtenerArticulosPorBodega(array) {

        var ib = array;
        arrayArticuloPorBodegaOrigenSeleccionada = [];
        for (var i = 0; i < ib.length; i++) {

            if (ib[i].existenciaBodega > 0) {
                var model = {
                    idInventario: ib[i].idInventarioNavigation.idInventario,
                    codigo: ib[i].idInventarioNavigation.codigo,
                    descripcion: ib[i].idInventarioNavigation.descripcion,
                    existenciaBodega: ib[i].existenciaBodega,
                    costoPromedioBodega: ib[i].costoPromedioBodega,
                    idInventarioBodega: ib[i].id
                };

                arrayArticuloPorBodegaOrigenSeleccionada.push(model);
            }




        }
    }




    function cargarDatosInventarioBodega() {

        var contadorFila = 0;
        $("#tblInventarioBodega > tbody").remove();
        $('#tblInventarioBodega').append('<tbody></tbody>');
        for (var i = 0; i < arrayArticuloPorBodegaOrigenSeleccionada.length; i++) {


                var body = '<tr class="fila' + contadorFila + ' filas">'
                    + '<td id="idInventario"><p style="padding-top:1rem">' + arrayArticuloPorBodegaOrigenSeleccionada[i].idInventario + '</p></td>'
                    + '<td id="codigo" ><p style="padding-top:1rem">' + arrayArticuloPorBodegaOrigenSeleccionada[i].codigo + '</p></td>'
                    + '<td id="descripcion" ><p style="padding-top:1rem">' + arrayArticuloPorBodegaOrigenSeleccionada[i].descripcion + '</p></td>'
                    + '<td id="existenciaBodega" ><p style="padding-top:1rem">' + arrayArticuloPorBodegaOrigenSeleccionada[i].existenciaBodega + '</p></td>'
                    + '<td id="costoPromedioBodega"><p style="padding-top:1rem" class="colon">' + arrayArticuloPorBodegaOrigenSeleccionada[i].costoPromedioBodega + '</p></td>'
                    + '<td>  <button value="' + contadorFila + '" onclick="capturar(value)" class="btn btn-link btnEditar"><i class="fas fa-plus"></i>';
                $('#tblInventarioBodega > tbody').append(body);
                contadorFila++;



        }


        $(".colon").inputmask('currency', {
            prefix: monedas[0].simbolo + " ",
            rightAlign: true
        });

        inicializarTablaInventarioBodega();
    }





    function inicializarTablaInventarioBodega() {
        $('#tblInventarioBodega').DataTable().destroy();
        tblInventarioBodega = $('#tblInventarioBodega').DataTable({

            "info": false,
            "iDisplayLength": 5,//Paginación
            "order": [[0, "desc"]],
            paging: true,

            language: {
                "decimal": "",
                "emptyTable": "@SharedLocalizer["NoDatos"]",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "@SharedLocalizer["Mostrar"] _MENU_ @SharedLocalizer["Entradas"]",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "<i class='fas fa-search'></i>",
                "zeroRecords": "@SharedLocalizer["sinResultados"]",
                 "paginate": {
                    "first": "@SharedLocalizer["Primero"]",
                    "last": "@SharedLocalizer["Último"]",
                    "next": "@SharedLocalizer["Sguiente"]",
                    "previous": "@SharedLocalizer["Anterior"]"
                }
            },
        });
        $(".dataTables_searching").hide();
    }



    $("#filtroBuscarInventarioBodega").on("keyup", function () {
        buscarPorNombre(this.value)
    });




    function buscarPorNombre(nombre) {
        tblInventarioBodega
            .columns(2)
            .search(nombre)
            .draw();
    }



    function capturar(pos) {
        var obj = "";

        obj = arrayArticuloPorBodegaOrigenSeleccionada[pos];


        var model = {
            id: 0,
            idTraslado: @Model.IdTraslado,
            idInventario: obj.idInventario,

            codigoArticulo: obj.codigo,
            descripcion: obj.descripcion,
            cantidad: 1,
            precioUnitario: obj.costoPromedioBodega,
            costoTotal: obj.costoPromedioBodega,
            existenciaBodega: obj.existenciaBodega
        };
        if (!existeItem(arrayTablaTraslado, model.idInventario)) {
            arrayTablaTraslado.push(model);
            cargarDatosTraslado(arrayTablaTraslado);
            agregarNuevoArticulo2(obj); //en caso de que edite
            ocultarModalInventarioBodega();
        } else
            $('#error').show();
    }




    function existeItem(array, idInventario) {
        var flag = false;
        for (var i = 0; i < array.length; i++) {
            if (array[i].idInventario == idInventario) {
                flag = true;
                break;
            }
        }
        return flag;
    }


    function pasarSigCampo(e, id) {
        id = "txtCostoTotal" + id;

        //console.log("Evento>" + id);

        (e.keyCode) ? k = e.keyCode : k = e.which;

        if (k == 13) {
            document.getElementById(id).focus();
            document.getElementById(id).select();

        }
    }

    function cargarDatosTraslado(arrayTablaTraslado) {

        calcularCostoTraslado();
        var contadorFila = 0;
        $("#tablaTrasladoInventario > tbody").remove();
        $('#tablaTrasladoInventario').append('<tbody></tbody>');
        for (var i = 0; i < arrayTablaTraslado.length; i++) {



            var body = '<tr class="fila' + contadorFila + ' filas">'
                + '<td style="width:17%"><p style="padding-top:1rem">' + arrayTablaTraslado[i].codigoArticulo + '</p></td>'
                + '<td><p style="padding-top:1rem">' + arrayTablaTraslado[i].descripcion + '</p></td>'
                + '<td> <input style="width:50%" type="number" id="' + contadorFila + '" class="form-control" maxlength="50" value="' + arrayTablaTraslado[i].cantidad + '" onChange="calcular(value,' + contadorFila + ', ' + arrayTablaTraslado[i].idInventario + ' )"  min="1" pattern="^[0-9]+"  onkeyup="pasarSigCampo(event,' + contadorFila + ')" readonly /></td>'
                + '<td style="width:17%"><p style="padding-top:1rem" class="colon">' + arrayTablaTraslado[i].precioUnitario + '</p></td>'

                + '<td style="width:20%"> <input type="text" style="width:100%" id="txtCostoTotal' + contadorFila + '" class="form-control colon" maxlength="50" size="10" value="' + arrayTablaTraslado[i].costoTotal + '" readonly placeholder="@SharedLocalizer["costoTotal"]."/>  <input type="hidden" id="txtCosto' + contadorFila + '" class="form-control" maxlength="50" size="10" value="' + arrayTablaTraslado[i].costoTotal + '"/>    </td>'
                + '<td> <button id="btGuardarLinea' + contadorFila + '" value="' + contadorFila + '" onclick="editar(value)" class="btn btn-link btnEditar"><i class="fas fa-edit"></i></button><button value="' + contadorFila + '" onclick="eliminar(value)" class="btn btn-link btnEditar"><i class="fas fa-trash"></i></button>';
            $('#tablaTrasladoInventario > tbody').append(body);
            contadorFila++;
        }

        //inicializa formato de la moneda tambien aca
        $(".colon").inputmask('currency', {
            prefix: monedas[0].simbolo + " ",
            rightAlign: true
        });

        inicializarTablaTraslado();
    }





    function inicializarTablaTraslado() {
        $('#tablaTrasladoInventario').DataTable().destroy();
        tablaTrasladoInventario = $('#tablaTrasladoInventario').DataTable({

            "info": false,
            "iDisplayLength": 10,
            "order": [[0, "desc"]],
            paging: true,

            language: {
                "decimal": "",
                "emptyTable": "@SharedLocalizer["NoDatos"]",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "@SharedLocalizer["Mostrar"] _MENU_ @SharedLocalizer["Entradas"]",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "<i class='fas fa-search'></i>",
                "zeroRecords": "@SharedLocalizer["sinResultados"]",
                "paginate": {
                    "first": "@SharedLocalizer["Primero"]",
                    "last": "@SharedLocalizer["Último"]",
                    "next": "@SharedLocalizer["Sguiente"]",
                    "previous": "@SharedLocalizer["Anterior"]"
                }
            },
        });
        $(".dataTables_searching").hide();
    }







    function editar(pos) {
        desbloquearCantidad(pos);
    }




    function desbloquearCantidad(pos) {
        $('#' + pos).prop("readonly", false);
    }




    function calcular(cantidad,pos,id) {


        var precioUnitario = 0;


         if (@Model.IdTraslado == 0) {


                        if (cantidad > arrayTablaTraslado[pos].existenciaBodega) { // si la cantidad dijitada es mayor que la que se encuentra en esa bodega
                            var existenciaBodega = arrayTablaTraslado[pos].existenciaBodega;

                            cargarAlert("@SharedLocalizer["ExistenciaSuperada"]");
                            $('#' + pos).val(1);
                            $('#' + pos).prop("readonly", true);
                            precioUnitario = arrayTablaTraslado[pos].precioUnitario;
                            costo = precioUnitario * 1;
                            $('#txtCostoTotal' + pos).val(costo);
                            $('#txtCosto' + pos).val(costo);
                            calcularCostoTotal(1, pos);
                        } else if (cantidad == 0) {

                            $('#' + pos).val(1);
                            $('#' + pos).prop("readonly", true);
                            precioUnitario = arrayTablaTraslado[pos].precioUnitario;
                            costo = precioUnitario * 1;
                            $('#txtCostoTotal' + pos).val(costo);
                            $('#txtCosto' + pos).val(costo);
                            calcularCostoTotal(1, pos);
                        } else {

                            precioUnitario = arrayTablaTraslado[pos].precioUnitario;
                            costo = precioUnitario * cantidad;
                            $('#txtCostoTotal' + pos).val(costo);
                            $('#txtCosto' + pos).val(costo);
                            $('#' + pos).prop("readonly", true);
                            calcularCostoTotal(cantidad, pos);
                        }

        } else {


                 for (var j = 0; j < arrayArticuloPorBodegaOrigenSeleccionada.length; j++) {

                     if (arrayArticuloPorBodegaOrigenSeleccionada[j].idInventario == id) {

                         var existenciaBodega = arrayArticuloPorBodegaOrigenSeleccionada[j].existenciaBodega;


                         if (cantidad > existenciaBodega) {
                               cargarAlert("@SharedLocalizer["ExistenciaSuperada"]");
                             $('#' + pos).val(1);
                             $('#' + pos).prop("readonly", true);
                             precioUnitario = arrayTablaTraslado[pos].precioUnitario;
                             costo = precioUnitario * 1;
                             $('#txtCostoTotal' + pos).val(costo);
                             $('#txtCosto' + pos).val(costo);
                             calcularCostoTotal(1, pos);
                             capturarArticulosPorCantidadesEditadas(pos);
                         } else if (cantidad == 0) {
                             $('#' + pos).val(1);
                             $('#' + pos).prop("readonly", true);
                             precioUnitario = arrayTablaTraslado[pos].precioUnitario;
                             costo = precioUnitario * 1;
                             $('#txtCostoTotal' + pos).val(costo);
                             $('#txtCosto' + pos).val(costo);
                             calcularCostoTotal(1, pos);
                             capturarArticulosPorCantidadesEditadas(pos);
                         } else {
                             precioUnitario = arrayTablaTraslado[pos].precioUnitario;
                             costo = precioUnitario * cantidad;
                             $('#txtCostoTotal' + pos).val(costo);
                             $('#txtCosto' + pos).val(costo);
                             $('#' + pos).prop("readonly", true);
                             calcularCostoTotal(cantidad, pos);
                             capturarArticulosPorCantidadesEditadas(pos);
                         }

                 }
             }
        }
    }





    function calcularCostoTraslado() {
        var sumatoria = 0;
        for (var i = 0; i < arrayTablaTraslado.length; i++) {
            sumatoria += parseInt(arrayTablaTraslado[i].costoTotal);
        }

        $("#CostoTraslado").val("");
        $("#CostoTraslado").val(sumatoria);
        $("#txtCostoTraslado").val(sumatoria); //ACA
    }





    function calcularCostoTotal(cantidad, pos) {

        var nuevoPrecioUnitario = 0;
        nuevoPrecioUnitario = $('#txtCosto' + pos).val();

        for (var i = 0; i < arrayTablaTraslado.length; i++) {
             arrayTablaTraslado[pos].cantidad = parseInt(cantidad);
             arrayTablaTraslado[pos].costoTotal = parseInt(nuevoPrecioUnitario);
        }

        calcularCostoTraslado();
    }





    function eliminar(pos) {

        var elementoEliminado = arrayTablaTraslado.splice(pos, 1);

        //se elimina tambien de aca
        for (var i = 0; i < arrayTablaTrasladoItemEditadosOnuevos.length; i++) {

            if (arrayTablaTrasladoItemEditadosOnuevos[i].idInventario == elementoEliminado[0].idInventario) {

                arrayTablaTrasladoItemEditadosOnuevos.splice(i, 1);
            }

        }

        cargarDatosTraslado(arrayTablaTraslado);
        calcularCostoTraslado();
        bloquearCampos();

        if (elementoEliminado[0].id != 0) {
            insertarArticuloEliminado(elementoEliminado);
        }


    }



    function insertarArticuloEliminado(elementoEliminado) {

        var num = elementoEliminado[0].id;
        arrayArticulosEliminados.push(num);

    }







    function bloquearCampos() {

        if ($('#IdTraslado').val() == 0 && arrayTablaTraslado.length == 0) {
            $('#IdBodegaOrigen').prop("disabled", false);
            $('#IdBodegaDestino').prop("disabled", false);

        } else {
            $('#IdBodegaOrigen').prop("disabled", true);
            $('#IdBodegaDestino').prop("disabled", true);
        }

    }





    function guardarTraslado() {


        if (validarGuardaEditar() == false) {
           // console.log("edita");


              if (validarTablaTraslado() == false) {
                            $.ajax({
                                type: "POST",
                                headers: {
                                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                                },
                                dataType: "json",
                                url: '@Url.Action("CrearEditarTraslado", "Traslado")',
                                data: { traslado: crearModelo(), inventarioTraslado: arrayTablaTrasladoItemEditadosOnuevos, eliminados: arrayArticulosEliminados },
                                success: function (data) {
                                    if (data.success) {

                                        $('#modalTraslado').modal('hide');
                                        getTrasladosGeneral();

                                    }
                                    else
                                        cargarAlert("@SharedLocalizer["errorDuplicacion"]");
                                },
                                error: function (err, scnd) {
                                    cargarAlert('@SharedLocalizer["errorGeneral"]');
                                    console.log(err.statusText);
                                }
                            });
                        } else {
                         $('#modalTraslado').modal('show');
                         cargarAlert('@SharedLocalizer["docSinDetalle"]');
                        }


        } else {


               if (validarSelectBodegaOrigen() == false) {
                    if (validarTablaTraslado() == false) {
                            $.ajax({
                                type: "POST",
                                headers: {
                                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                                },
                                dataType: "json",
                                url: '@Url.Action("CrearEditarTraslado", "Traslado")',
                                data: { traslado: crearModelo(), inventarioTraslado: arrayTablaTraslado, eliminados: arrayArticulosEliminados },
                                success: function (data) {
                                    if (data.success) {

                                        $('#modalTraslado').modal('hide');
                                        getTrasladosGeneral();

                                    }
                                    else
                                        cargarAlert("@SharedLocalizer["errorDuplicacion"]");
                                },
                                error: function (err, scnd) {
                                    cargarAlert('@SharedLocalizer["errorGeneral"]');
                                    console.log(err.statusText);
                                }
                            });
                        } else {
                         $('#modalTraslado').modal('show');
                         cargarAlert('@SharedLocalizer["docSinDetalle"]');
                        }
            } else {
                $('#modalTraslado').modal('show');
                   $('#IdbodegaOrigenRequeridaValid').show();
                   $('#IdbodegaDestinoRequeridaValid').hide();
                   if (validarSelectBodegaDestino() == true) {$('#IdbodegaDestinoRequeridaValid').show();}


            }

        }

    }




    function crearModelo() {


       var idBodegaOrigen = 0;
       var idBodegaDestino = 0;
       var fecha = "";
       var fechaCreacion = "";
       var anulado = 0;
       var txtCostoTraslado = 0;
       var comentario = "";
       idBodegaOrigen = $("#IdBodegaOrigen").val();
       idBodegaDestino = $("#IdBodegaDestino").val();
       fecha = $("#fecha").val();
       txtCostoTraslado = $("#txtCostoTraslado").val();
       comentario = $("#Comentario ").val();
       var modelTraslado = {
               idTraslado: @Model.IdTraslado,
               idUsuario:@Model.IdUsuario,
               idBodegaOrigen: idBodegaOrigen,
               idBodegaDestino: idBodegaDestino,
               fecha: fecha,
               fechaCreacion: fechaCreacion,
               anulado: anulado,
               costoTraslado: txtCostoTraslado,
               comentario: comentario
       };

       return modelTraslado;
   }





    function validarSelectBodegaOrigen() {
        var resp = false;
        if ($('#IdBodegaOrigen').val() == "" ) {
            resp = true;
            return resp;
        } else {
            resp = false;
            return resp;
        }
    }
     function validarSelectBodegaDestino() {
        var resp = false;
        if ($('#IdBodegaDestino').val() == "" ) {
            resp = true;
            return resp;
        } else {
            resp = false;
            return resp;
        }
    }



    function validarTablaTraslado() {
        var resp = false;
        if (arrayTablaTraslado.length == 0) {
            resp = true;
            return resp;
        } else {
            resp = false;
            return resp;
        }
    }



    function validarGuardaEditar() {

        var resp = false;
        if ($('#IdTraslado').val() == 0) {
            resp = true;
            return resp;
        } else {
            resp = false;
            return resp;
        }

    }

    function capturarArticulosPorCantidadesEditadas(pos){

       // console.log(pos);
        obj = arrayTablaTraslado[pos];

        if (obj.id == 0) { // el articulo es nuevo y se ha agregado

            editarNuevoArticulo(obj);

        } else { // el articulo a sido editado en su cantidad

            agregarArticuloExistenteEditado(obj);

        }

    }



   function agregarArticuloExistenteEditado(obj){
       // console.log("linea existente editada");
       // console.log(obj);
       if (validarArticuloExistente(obj) == true) {
         //  console.log("linea existente existe en el array");
           for (var i = 0; i < arrayTablaTrasladoItemEditadosOnuevos.length; i++) {

               if (arrayTablaTrasladoItemEditadosOnuevos[i].idInventario == obj.idInventario) {

                   arrayTablaTrasladoItemEditadosOnuevos[i].cantidad = obj.cantidad;
               }
           }

        //   console.log(arrayTablaTrasladoItemEditadosOnuevos);

       } else {
          // console.log("linea existente NO existe en el array");

           for (var i = 0; i < arrayTablaTraslado.length; i++) {

               if (arrayTablaTraslado[i].id == obj.id) {

                   var objEncontrado = {

                       id: obj.id,
                       idTraslado: obj.idTraslado,
                       idInventario: obj.idInventario,
                       codigoArticulo: obj.codigoArticulo,
                       descripcion: obj.descripcion,
                       cantidad: obj.cantidad,
                       precioUnitario: obj.precioUnitario,
                       costoTotal: obj.costoTotal

                   };
                   arrayTablaTrasladoItemEditadosOnuevos.push(objEncontrado);
               }

           }
        //   console.log(arrayTablaTrasladoItemEditadosOnuevos);

       }

    }




    function editarNuevoArticulo(obj) {
      //  console.log("linea nueva, agrego, edito");
      //  console.log(obj);
        for (var i = 0; i < arrayTablaTrasladoItemEditadosOnuevos.length; i++) {

            if (arrayTablaTrasladoItemEditadosOnuevos[i].idInventario == obj.idInventario) {

                arrayTablaTrasladoItemEditadosOnuevos[i].cantidad = obj.cantidad;
            }

        }

       // console.log(arrayTablaTrasladoItemEditadosOnuevos);

    }



    //en caso de que solo agrege el articulo
    function agregarNuevoArticulo2(obj) {

       // console.log(obj);

        for (var i = 0; i < arrayTablaTraslado.length; i++) {

            if (arrayTablaTraslado[i].idInventario == obj.idInventario) {

                var objEncontrado = {

                    id: 0,
                    idTraslado: arrayTablaTraslado[i].idTraslado,
                    idInventario: obj.idInventario,
                    codigoArticulo: obj.codigo,
                    descripcion: obj.descripcion,
                    cantidad: 1,
                    precioUnitario: obj.costoPromedioBodega,
                    costoTotal: arrayTablaTraslado[i].costoTotal

                };
                arrayTablaTrasladoItemEditadosOnuevos.push(objEncontrado);

            }
        }
      //  console.log(arrayTablaTrasladoItemEditadosOnuevos);

    }

    function validarPreciosArticulos() {

        var resp = false;

        for (var i = 0; i < arrayTablaTraslado.length; i++) {

            if (arrayTablaTraslado[i].precioUnitario == 0) {

                resp = true;
                return resp;
                break;

            }

        }

    }


    function validarArticuloExistente(obj) {
        var resp = false;
        for (var i = 0; i < arrayTablaTrasladoItemEditadosOnuevos.length; i++) {
            if (arrayTablaTrasladoItemEditadosOnuevos[i].idInventario == obj.idInventario) {
                resp = true;
                break;
            }
        }
        return resp;
    }



//-----------------------------------------editar---------------------------------------------//
           function getTraslado() {


            var IdTraslado = $('#IdTraslado').val();

            if (IdTraslado != 0)
            $.ajax({
                  type: "get",
                  headers: {
                      "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                  },
                  dataType: "json",
                url: '@Url.Action("GetTraslado", "Traslado")',
                data: { id: IdTraslado},
                success: function (data) {

                    arrayTraslado = data;
                    getTrasladoInventario();

                },
                  error: function (err, scnd) {
                      cargarAlert('@SharedLocalizer["errorGeneral"]');
                      console.log(err.statusText);
                  }
            });
    }





        function getTrasladoInventario() {


            var IdTraslado = $('#IdTraslado').val();

            if (IdTraslado != 0)
            $.ajax({
                  type: "get",
                  headers: {
                      "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                  },
                  dataType: "json",
                url: '@Url.Action("GetTrasladoInventario", "Traslado")',
                data: { id: IdTraslado},
                success: function (data) {

                    arrayTablaTraslado = data;
                    //console.log(auxArrayTablaTraslado);
                    cargarDatosTraslado(arrayTablaTraslado);

                },
                  error: function (err, scnd) {
                      cargarAlert('@SharedLocalizer["errorGeneral"]');
                      console.log(err.statusText);
                  }
            });
        }
    function anularTraslado() {


            var id = @Model.IdTraslado;

            bootbox.confirm({
                message: "@SharedLocalizer["confirmAnularTraslado"]", 
                buttons: {
                    confirm: {
                        label: "@SharedLocalizer["Aceptar"]",
                        className: 'btn btn-success'
                    },
                    cancel: {
                        label: "@SharedLocalizer["Cancelar"]",
                        className: 'btn btn-default'
                    }
                },
                callback: function (result) {
                    if (result == true) {

                              $.ajax({
                                type: "get",
                                headers: {
                                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                                },
                                dataType: "json",
                                url: '@Url.Action("AnularTraslado", "Traslado", new { id = @Model.IdTraslado })',
                                success: function (data) {
                                    if (data.success) {

                                        cargarAlert('@SharedLocalizer["TrasladoAnulado"]');
                                        getTraslados();

                                        //bloquear boton pdf
                                        $('#Anular').prop("disabled", true);

                                    }
                                    else
                                        cargarAlert('@SharedLocalizer["TrasladoConEstadoAnulado"]');
                                },
                                error: function (err, scnd) {
                                    cargarAlert('@SharedLocalizer["errorGeneral"]');
                                    console.log(err.statusText);
                                }
                            });
                    }else if (result == false){
                            //console.log("entro y NO anulO ");
                    }
                }
            });
    }


    function crearPdfTrasladoEspecifico() {

            console.log(" A crear el pdf ");

            open("Crear-PDF-Traslado/@Model.IdTraslado");

    }











    function recuperarUsuario() {


        var idUsu = $('#IdUsuario').val();
        var nombre = "";



        for (var i = 0; i < Usuarios.length; i++) {

            if (Usuarios[i].id == idUsu) {
                nombre = Usuarios[i].nombre;
            }

        }

        $("#IdUsuario2").val(nombre);




    }


    function focus() {

      //document.getElementById("filtroBuscar").focus();
      //  console.log("entro");
        id = "filtroBuscar";

        console.log("Evento>" + id);

            document.getElementById(id).focus();
            document.getElementById(id).select();

    }

































</script>

