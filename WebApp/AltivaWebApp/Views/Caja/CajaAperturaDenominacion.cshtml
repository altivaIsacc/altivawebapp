@model AltivaWebApp.ViewModels.CajaViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@inject IStringLocalizer<SharedResources> Lb

@{
    ViewData["Title"] = "CajaAperturaDenominacion";
}

<div class="row">
    <div class="col-md-3">
        @{ if (Model.IdCaja != 0)
            {
            <h2>@Lb["Caja"]&nbsp;#@Model.IdCaja</h2>
            }
            else
            {
            <h2>@Lb["Caja"]</h2>
                }
            }
    </div>
    <div class="col-md-7"></div>
    <div class="col-md-2">
        <button style="font-size:2rem; padding-top:1rem" onclick="crearPdf()" class="btn btn-link"><i class="fas fa-file-pdf"></i>PDF</button>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <label>@Lb["Usuario"]:</label>
        <label id="lbCreador" class="form-control" disabled></label>
    </div>


    <div class="col-md-2">
        <label>@Lb["Estado"]:</label>
        <select id="lbEstado" class="form-control search-key">
        </select>
    </div>

    <div class="col-md-4">
        <fieldset>
            <div class="form-group">
                <label for="fecha">@Lb["Fecha"]:</label>
                <div class='input-group date' id='fechaPicker'>
                    <input type='text' class="form-control" id="lbFechaCreacion" disabled />
                    <span class="input-group-addon">
                        <span class="fas fa-calendar"></span>
                    </span>
                </div>
            </div>
        </fieldset>
    </div>
</div>

<div class="row">
    <div class="col-md-12  table-responsive">
        <table class="table table-bordered" style="width:100%" id="tblCajaApertura">
            <thead>
                <tr>
                    <th><span class="letratbDenominaciones">@Lb["Denominacion"]</span> </th>
                    <th><span class="letratbDenominaciones"> @Lb["Cantidad"]</span> </th>
                    <th><span class="letratbDenominaciones">@Lb["Monto"]</span> </th>
                </tr>
            </thead>
            <tbody>

                <tr class="lineaForm"></tr>
            </tbody>

        </table>

    </div>

</div>

<div class="form-group">
    <div class="form-row">
        <div class="col-md-6"></div>
        <div class="col-md-2">
            <label>@Lb["TotalBase"]:</label>
            <input type="text" class="form-control currency" id="txtTotalBase" disabled />
        </div>
        <div class="col-md-2">
            <label>@Lb["TotalDolar"]:</label>
            <input type='text' class="form-control currency" id="txtTotalDolar" disabled />
        </div>
        <div class="col-md-2">
            <label>@Lb["TotalEuro"]:</label>
            <input type='text' class="form-control currency" id="txtTotalEuro" disabled />
        </div>  
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <button class="btn btn-success btnAccion" onclick="guardarSalir()">@Lb["Guardar"] <i class="fas fa-save"></i></button>
        <a onclick="cancelar()" class="btn btn-default">@Lb["Cancelar"]</a>
    </div>
</div>
<input readonly hidden id="monedaFormater" />
<div hidden><input hidden id="formater" class="currency" type="text" /></div>

<style>
    .letratbDenominaciones {
        font-size: 18px !important;
    }
</style>

<script>

    var Usuarios = [];
    var $Creador = $('#lbCreador');
    var $Estado = $('#lbEstado');
    var IdUsuarioLogueado = 0;
    var _Denominaciones = [];
    var monedas = [];
    var $cantidad = $('#lbCantidad');
    var $monto = $('#lbMonto');
    var Apertura = [];
    var _LineaCajaAperturaDenominaciones = [];
    var CajaApertura = [];
    var $FechaCreacion = $('#lbFechaCreacion');
    var TotalEuro = [];
    var TotalDolar = [];
    var TotalBase = [];
    var $TotalBase = $('#txtTotalBase');
    var $TotalDolar = $('#txtTotalDolar');
    var $TotalEuro = $('#txtTotalEuro');

////////////////////////////////////////////////////////////DOCUMENT READY///////////////////////////////////////////////////////////////////
    $(document).ready(function () {

        getUsuarios();
        getDenominaciones();
        cargarlbEstado();

        if (@Model.IdCaja!= 0) {
            $FechaCreacion.val(formatearFechaCreacion());

        }
                $('#fechaPicker').datetimepicker({
            defaultDate: new Date(),
            locale: localStorage.getItem("idioma"),
            format: "@Lb["DD/MM/YYYY"]",

        }).on('keypress paste', function (e) {
            e.preventDefault();
            return false;
            });

        $(".numerico").inputmask({

            'alias': 'decimal',
            rightAlign: true,

        });


        $(".numerico").inputmask({

            'alias': 'decimal',

            rightAlign: true,

        });

    });
///////////////////////////////////////////////////////GETS/////////////////////////////////////////////////////////////////////////////////////

    function getCajaApertura() {
        if(@Model.IdCaja != 0)
        $.ajax({
              type: "get",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
            url: '@Url.Action("GetCajaAperturaDenominacion")',
            success: function (data) {
                CajaApertura = JSON.parse(JSON.stringify(data));
                cargarLineas(CajaApertura);
                setTotalGlobal();
               },
            error: function (err, scnd) {
               cargarAlert('@Lb["errorGeneral"]');
            }
        });
    }

    function getDenominaciones() {
        $.ajax({
              type: "get",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
            url: '@Url.Action("GetDenominaciones","Denominaciones")',
            success: function (data) {
                _Denominaciones = JSON.parse(JSON.stringify(data));

                for (var i = 0; i <_Denominaciones.length; i++) {

                    switch (parseInt(_Denominaciones[i].idMoneda)) {
                        case 1:
                            TotalBase.push(_Denominaciones[i]);
                            break;
                        case 2:
                            TotalDolar.push(_Denominaciones[i]);
                            break;
                        case 3:
                            TotalEuro.push( _Denominaciones[i]);
                            break;

                    }
                }
         
                getMonedas();

               },
            error: function (err, scnd) {
               cargarAlert('@Lb["errorGeneral"]');
            }
        });
    }

    function getMonedas() {

         $.ajax({
              type: "get",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
              url: '@Url.Action("GetMonedas", "Monedas")',
             success: function (data) {
                 monedas = data;
                 if (@Model.IdCaja!= 0) {
                     getCajaApertura();
         
                 } else {
                     cargarTabla(_Denominaciones);
                 }
              },
              error: function (err, scnd) {
                  cargarAlert('@Lb["errorGeneral"]');
                  console.log(err.statusText);
              }
          });
    }

    function getUsuarios() {
         $.ajax({
              type: "get",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
              url: '@Url.Action("GetUsuariosPorEmpresa", "ManejoUsuarios")',
             success: function (data) {
                 Usuarios = data;

                 getIdUsuarioLogueado();

              },
              error: function (err, scnd) {
                  cargarAlert('@Lb["errorGeneral"]');
                  console.log(err.statusText);
              }
          });
    }

         function getIdUsuarioLogueado() {
         $.ajax({
              type: "get",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
              url: '@Url.Action("GetInfoLogueado", "CotizacionProducto")',
             success: function (data) {
                 IdUsuarioLogueado = data;
                 GetUsuarioLogueado();
              },
              error: function (err, scnd) {
                  cargarAlert('@Lb["errorGeneral"]');
                  console.log(err.statusText);
              }
          });
    }

/////////////////////////////////////////////////////////CARGAR-DOM////////////////////////////////////////////////////////////////////////////

    function cargarlbEstado() {

            if (@Model.IdCaja!= 0) {
                switch (parseInt( @Model.Estado)) {
                    case 1:
                        $Estado.val(1);
                        var o = "<option value=" + 1+ ">@Lb["Abierta"]</option><option value=" + 2+ ">@Lb["Arqueo"]</option><option value=" + 6+ ">@Lb["Anulada"]</option>";
                        $("#lbEstado").append(o);
                        break;
                    case 2:
                        $Estado.val(2);
                         var o = "<option value=" + 2+ ">@Lb["Arqueo"]</option><option value=" + 4 + ">@Lb["Cerrada"]</option><option value=" +3+ ">  @Lb["ArqueoReabierto"]  </option>";
                        $("#lbEstado").append(o);
                        break;
                    case 3:
                        $Estado.val(3);
                         var o = "<option value=" + 3+ ">@Lb["ArqueoReabierto"]</option><option value=" + 2+ ">@Lb["Arqueo"]</option>";
                        $("#lbEstado").append(o);
                        break;
                    case 4:
                        $Estado.val(4);
                        var o = "<option value=" + 4+ ">@Lb["Cerrada"]</option><option value=" + 5+ ">@Lb["CierreReabierto"]</option>";
                        $("#lbEstado").append(o);
                        break;
                    case 5:
                        $Estado.val(5);
                        var o = "<option value=" + 5+ ">@Lb["CierreReabierto"]</option><option value=" + 4+ ">@Lb["Cerrada"]</option><option value=" + 3+ ">@Lb["ArqueoReabierto"]</option>";
                        $("#lbEstado").append(o);
                        break;
                    case 6:
                           $Estado.val(5);
                        var o = "<option value=" + 6+ ">@Lb["Anulada"]</option>";
                        $("#lbEstado").append(o);
                        break;
                }
            }
            else {
                $Estado.val(1);
                var o = "<option value=" + 1 + "> @Lb["Abierta"]</option>";
                $("#lbEstado").append(o);
                $("#lbEstado").prop('disabled', true);
            }
            
        }

    function cargarLineas(data) {
        var count = data.length;
       for (var i = 0; i < count; i++) {
            var model = {
      
                idCajaApertura: data[i].idCajaApertura,
                idCaja: data[i].idCaja,
                fechaCreacion: data[i].fechaCreacion,
                idUsuario: data[i].idUsuario,
                idDenominaciones: data[i].idDenominacion,
                cantidad: data[i].cantidad,
                monto: data[i].monto,

            };
        
            _LineaCajaAperturaDenominaciones.push(model);

        }

        cargarTabla(_LineaCajaAperturaDenominaciones);   
    }

    function GetUsuarioLogueado() {
        for (var i = 0; i < Usuarios.length; i++) {
            if (Usuarios[i].id === IdUsuarioLogueado) {
                if (@Model.IdCaja!= 0) {

                    for (var i = 0; i < Usuarios.length; i++) {
                        if (Usuarios[i].id === @Model.IdUsuario) {
                            $Creador.text(Usuarios[i].nombre)
                        }
                    }
                    $Estado.val(@Model.Estado);

                } else {
                    $("#lbCreador").text(Usuarios[i].nombre);
                    $("#lbEstado").val(1);
                }
            }
        }
    }

    function cargarTabla(data) {

        $('.filasCargadas').remove();
        contadorFila = 0;
        var tipomoneda = 0;
        var coin = "";
        var _cantidad = 0;
        var _monto = 0;

        for (var i = 0; i < _Denominaciones.length; i++) {

            tipomoneda = _Denominaciones[i].idMoneda;

            var _moneda = 0;
            switch (tipomoneda) {
                case 0:
                    _moneda = monedas[0].simbolo;
                    coin = "colon";
                    break;
                case 1:
                    _moneda = monedas[0].simbolo;
                    coin = "colon";
                    break;
                case 2:
                    _moneda = monedas[1].simbolo;
                    coin = "dolar";
                    break;
                case 3:
                    _moneda = monedas[2].simbolo;
                    coin = "euro";
                    break;
            }

            $(".currency").inputmask('currency', {
                prefix: _moneda + ' ',
                rightAlign: true
            });

            if (@Model.IdCaja!= 0) {
         
                _cantidad = data[i].cantidad;
                _monto = data[i].monto;
            } else {
                _cantidad = 0;
                _monto = 0;
            }
     
            var body = '<tr class="filasCargadas" id="fila' + contadorFila + '">'
                + '<td style="padding-top:2rem;text-align:center;" class="letratbDenominaciones "><img id="' + data[i].idDenominaciones + '" width="45px" height="45px"/>&nbsp;<label class="'+coin+'" id="lb' + data[i].idDenominaciones + '"> ' + _Denominaciones[i].valor + '</label></td> '
                + '<td style="padding-top:2rem;text-align:center;" class="letratbDenominaciones"><input onkeyup="calcularLinea(' + contadorFila + ',value)" value="'+_cantidad+'" id="inpCantidad' + data[i].idDenominaciones + '" class="form-control moneda numerico" type="text" min="0" value="0" /></td>'
                + '<td style="padding-top:2rem;text-align: right;" class="letratbDenominaciones"><input id="inpMonto' + data[i].idDenominaciones + '" value="'+_monto+'" class="form-control moneda numerico" type="text" min="0" value="0" disabled /></td></tr>';
            $('.lineaForm').before(body);


            darFormatoTipo(_Denominaciones[i].tipo, data[i].idDenominaciones);
            contadorFila++;
        }

        //inicializa formato
        $(".colon").inputmask('currency', {
            prefix: monedas[0].simbolo + " ",
            rightAlign: true
        });
        $(".dolar").inputmask('currency', {
            prefix: monedas[1].simbolo + " ",
            rightAlign: true
        });
        $(".euro").inputmask('currency', {
            prefix: monedas[2].simbolo + " ",
            rightAlign: true
        });

        inicializaCampos();

    }


/////////////////////////////////////////////////////////FUNCIONES COMPLEMENTARIAS//////////////////////////////////////////////////////////////

        function formatearFechaCreacion() {

        return '@Model.FechaCreacion.Day' + "-" + '@Model.FechaCreacion.Month' + "-" + '@Model.FechaCreacion.Year';

    }

    function darFormatoMoneda(idMoneda) {

        if (idMoneda === 1)
            return monedas[0].simbolo;
        else if (idMoneda === 2)
            return monedas[1].simbolo;
        else if (idMoneda === 3)
            return monedas[2].simbolo;
    }

    function inicializaCampos() {

        $cantidad.val(1);
    }

    function darFormatoTipo(idTipo, id) {

        if (idTipo === 1)
            $('#' + id).prop('src', "/../uploads/MonedasIcon.png");
        else if (idTipo === 2)
            $('#' + id).prop('src', "/../uploads/BilleteIcon.png");
    }
///////////////////////////////////////////////////////////////////FUNCIONES PARA GUARDAR///////////////////////////////////////////////////////
    function guardarSalir() {

        GuardarApertura();
        guardarCajaApertura();
    }

    
    function guardarCajaApertura() {

        $.ajax({
              type: "POST",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
            url: '@Url.Action("CrearEditarCaja", "Caja")',
            data: crearModelo(),
            success: function (data) {
                if (data.success) {    
            window.location.href = "@Url.Action("ListarCajas")";
                }
                else
                    cargarAlert("@Lb["numCompraRepitida"]");
               },
              error: function (err, scnd) {
                  cargarAlert('@Lb["errorGeneral"]');
                  console.log(err.statusText);
              }
        });
    }

    function crearModelo() {
        var usuario = 0;
        if (@Model.IdCaja!= 0) {
            usuario =@Model.IdUsuario;
        } else {
            usuario = IdUsuarioLogueado;
        }

          ordenModel = {
                idCaja: @Model.IdCaja,
                fechaCreacion: $('#lbFechaCreacion').val(),
                idUsuario: usuario,
                estado:$('#lbEstado option:selected').val(),
              tbFaCajaAperturaDenominacion:  crearModeloApertura(Apertura)
        };      

        return ordenModel;
    }

    function crearModeloApertura(model) {

        for (var i = 0; i < model.length; i++) {
            model[i].idCajaApertura = model[i].idCajaApertura,
            model[i].idCaja=model[i].idCaja,
            model[i].fechaCreacion= model[i].fechaCreacion,
            model[i].idUsuario= model[i].idUsuario,
            model[i].idDenominacion=model[i].idDenominacion,
            model[i].cantidad = model[i].cantidad;
            model[i].monto = model[i].monto;
        }
        return model;
    }

    function GuardarApertura() {
        for (var i = 0; i < _Denominaciones.length; i++) {

            var model = {
                idCajaApertura:0,
                idCaja:@Model.IdCaja,
                fechaCreacion: $('#lbFechaCreacion').val(),
                idUsuario: IdUsuarioLogueado,
                idDenominacion:_Denominaciones[i].idDenominaciones,
                cantidad: $("#inpCantidad" + _Denominaciones[i].idDenominaciones + "").val().toString().replace(".",","),
                monto: $("#inpMonto" + _Denominaciones[i].idDenominaciones + "").val().toString().replace(".", ","),
            }

            Apertura.push(model);
        }
        if (@Model.IdCaja!= 0) {
            EditarLineasApertura(Apertura);
        }
   
    }

    function EditarLineasApertura(lineas) {

        for (var i = 0; i < lineas.length; i++) {

            Apertura[i].idCajaApertura = CajaApertura[i].idCajaApertura;

        }

    }
//////////////////////////////////////////////////////////////////CALCULOS//////////////////////////////////////////////////////////////////////


    function calcularLinea(fila, cant) {

        var _valor =parseFloat( _Denominaciones[fila].valor);
        var total = 0;
        total = parseFloat(_valor * cant);
        $('#inpMonto' + _Denominaciones[fila].idDenominaciones).val(total);
        
    }

    function setTotalGlobal() {
        var _totalBase = 0;
        var _totalDolar = 0;
        var _totalEuro = 0;
        var _montoBase = 0;
        var _montoDolar = 0;
        var _montoEuro = 0;
        var _idDenominacion = 0;

        for (var i = 0; i < _Denominaciones.length; i++) {
 
            switch (parseInt(_Denominaciones[i].idMoneda)) {

                case 1:           
                    _idDenominacion = _Denominaciones[i].idDenominaciones;
                    for (var i = 0; i < _Denominaciones.length; i++) {
                        if (parseInt(_idDenominacion) ===parseInt( CajaApertura[i].idDenominacion)) {
                            _montoBase =parseFloat( CajaApertura[i].monto);
                        }
                    }
                    _totalBase = parseFloat(_totalBase + _montoBase);

                    break;
                case 2:
                    _idDenominacion = _Denominaciones[i].idDenominaciones;
                    for (var i = 0; i < _Denominaciones.length; i++) {
                        if (parseInt(_idDenominacion) ===parseInt( CajaApertura[i].idDenominacion)) {
                            _montoDolar = parseFloat(CajaApertura[i].monto);
                        }
                    }
                    _totalDolar = parseInt(_totalDolar + _montoDolar);
                    break;
                case 3:
                    _idDenominacion = _Denominaciones[i].idDenominaciones;
                    for (var i = 0; i < _Denominaciones.length; i++) {
                        if (parseInt(_idDenominacion) ===parseInt( CajaApertura[i].idDenominacion)) {
                            _montoEuro = parseFloat(CajaApertura[i].monto);
                        }
                    }
                    _totalEuro = parseFloat(_totalEuro + _montoEuro);
                    break;
            }
        }

        $TotalBase.val(_totalBase);
        $TotalDolar.val(_totalDolar);
        $TotalEuro.val(_totalEuro);
    }
</script>
