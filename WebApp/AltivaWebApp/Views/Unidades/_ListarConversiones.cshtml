@model TbPrUnidadMedida
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@{
    var unidades = ViewData["unidades"] as IList<TbPrUnidadMedida>;

    var usuarios = ViewData["usuarios"] as IList<TbSeUsuario>;

    var conversiones = new List<TbPrConversion>();

    foreach (var item in Model.TbPrConversionIdUnidadOrigenNavigation)
    {
        conversiones.Add(item);
    }

    foreach (var item in Model.TbPrConversionIdUnidadDestinoNavigation)
    {
        conversiones.Add(item);
    }
}
<h4 data-translate="conversiones">Conversiones</h4>
<table class="table table-bordered" id="tblConversiones">
    <thead>
        <tr>
            <th>
                <span data-translate="unidadOrigen">Unidad Origen</span>
            </th>
            <th>
                <span data-translate="unidadDestino">Unidad Destino</span>
            </th>
            <th>
                <span data-translate="equivalencia">Equivalencia</span>
            </th>
            <th>
                <span data-translate="fechaCreacion">Fecha de Creación</span>
            </th>
            <th>
                <span data-translate="usuario">Usuario</span>
            </th>

            <th><span data-translate="accion">Acción</span></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in conversiones)
        {
            <tr>
                <td>
                    @item.IdUnidadOrigenNavigation.Nombre - @item.IdUnidadOrigenNavigation.Abreviatura
                </td>
                <td>
                    @item.IdUnidadDestinoNavigation.Nombre - @item.IdUnidadDestinoNavigation.Abreviatura
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Equivalencia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaCreacion)
                </td>
                <td>
                    @{ 
                        var nombre = usuarios.FirstOrDefault(u => u.Id == item.IdUsuario).Nombre;
                        var codigo = usuarios.FirstOrDefault(u => u.Id == item.IdUsuario).Codigo;
                    }
                    <a href="@Url.Action("CuentaUsuario", "ManejoUsuarios", new { codigo =  codigo})">@nombre</a>
                </td>
                <td>
                    <button class="btn btn-link eliminarConversion" value="@item.IdConversion"><span><i class="fas fa-trash"></i></span></button>
                </td>
            </tr>
        }

        <tr class="frmConversion">
            <td>
                <select disabled class="form-control form-control-sm search-key" id="cmbUnidadO">
                    <option selected value="@Model.Id">@Model.Nombre - @Model.Abreviatura</option>
                </select>
            </td>
            <td>

                <select class="form-control form-control-sm search-key" id="cmbUnidadD">
                    <option selected value="0">Seleccione</option>
                    @{
                        foreach (var item in unidades)
                        {
                            if (item.Id != Model.Id)
                            {
                                <option value="@item.Id">@item.Nombre - @item.Abreviatura</option>
                            }

                        }

                    }

                </select>
            </td>
            <td>
                <div class="form-group">
                    <input pattern="^[0-9]+([.][0-9]+)?$" type="number" min="0" value="0" class="form-control form-control-sm" id="txtEquivalencia" placeholder="Equivalencia">
                </div>
            </td>
            <td>
                <div class="form-group" hidden>
                    <input type="text" min="0" class="form-control form-control-sm" id="fecha" placeholder="Fecha de Creacion">
                </div>
            </td>
            <td>
                <div class="form-group" hidden>
                    <input type="text" min="0" class="form-control form-control-sm" id="exampleFormControlInput1" placeholder="Usuario">
                </div>
            </td>
            <td>
                <button class="btn btn-link" id="guardarConversion"><span><i class="fas fa-plus"></i></span></button>
            </td>
        </tr>
    </tbody>
</table>

<script>
    $(document).ready(function () {

             
        $("#guardarConversion").attr("disabled", true);
        $("#txtEquivalencia").attr("disabled", true);

        $('#cmbUnidadD').attr("disabled", true);

        if (@Model.Id != 0)
            $('#cmbUnidadD').attr("disabled", false);
        else
            $('#cmbUnidadD').attr("disabled", true);


        $('#cmbUnidadD').change(function () {
            if ($(this).val() != 0)
                $("#txtEquivalencia").attr("disabled", false);
            else
                $("#txtEquivalencia").attr("disabled", true);
        });
      
        $("#txtEquivalencia").keyup(function () {           
            if ($(this).val() != 0)
                $("#guardarConversion").attr("disabled", false);
            else
                $("#guardarConversion").attr("disabled", true);
        });


        $('#guardarConversion').on('click', function () {

            var url = '@Url.Action("CrearConversion", "Unidades")';

            var equivalencia = $("#txtEquivalencia").val().toString().replace(/\./g, ','); 

            console.log(equivalencia);

            var model = {
                idUnidadOrigen: $("#cmbUnidadO").val(),
                idUnidadDestino: $("#cmbUnidadD").val(),
                equivalencia: equivalencia
            };

            console.log(model);

            $.ajax({

                    type: "post",
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    url: url,
                    data: model ,
                    success: function (data) {
                        cargarTabla();
                    },
                    error: function (err, scnd) {
                        console.log(err.statusText);
                    }
                });
        });

        $(".eliminarConversion").on('click', function () {

            var url = '@Url.Action("EliminarConversion", "Unidades")';

                $.ajax({
                    type: "get",
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    url: 'Eliminar-Conversion/' + $(this).val(),
                    
                    success: function (data) {
                        if (data.data) {
                            cargarTabla()
                        }
                        else {
                            alert("Error al eliminar la conversión");
                        }
                    },
                    error: function (err, scnd) {
                        console.log(err.statusText);
                    }
                });

        });





    });

    function cargarTabla() {
            var url = '@Url.Action("ListarConversiones", "Unidades")';

                $.ajax({
                    type: "get",
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    url: url,
                    data: { id: @Model.Id},
                    success: function (data) {
                        $('#conversiones').html(data);
                    },
                    error: function (err, scnd) {
                        console.log(err.statusText);
                    }
                });
        }
</script>
