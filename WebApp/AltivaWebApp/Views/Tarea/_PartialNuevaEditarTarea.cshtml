@model AltivaWebApp.Domains.TbFdTarea
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@inject IStringLocalizer<SharedResources> Lb;
@{
    var anulado = false;

}

<!-- agregado por lenin -->
@{
    var titulo = "";

    @if (Model.Id != 0)
    {

        titulo = @Lb["modificarTarea"];

    }
    else
    {
        titulo = @Lb["nuevaTarea"];
    }

}


<style>
    .color {
        color: #fff;
    }
</style>


<div class="container" style=" overflow-y: scroll; height:60rem;">

    <!-- agregado por lenin -->
    <div class="row">
        <h4 class="col-md-11 col-sm-11 col-xs-11" id="titleTarea">@titulo</h4>
        <div class="col-md-1">
            <button type="button" class="close" id="btnCancelarTarea">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
    <hr />

    <input type="hidden" id="anulado" value="@anulado" />

    <div class=" row ">
        <div hidden="hidden" class="form-group">
            <input type="text" class="form-control" id="Id" asp-for="Id" hidden>
        </div>
        <div class="form-group col-md-12 col-sm-12 col-xs-12">
            <label class="col-form-label">@Lb["Título"]:</label><br />
            <input type="text" class="form-control" id="titulo" asp-for="Titulo">
            <div id="AlertTitulo"> </div>
        </div>
    </div>



    <div class="row ">
        <div class="form-group col-md-6 col-sm-6 col-xs-12">
            <label class="col-form-label ">@Lb["Contacto"]:</label><br />
            <select class="selectpicker form-control" data-live-search="true" id="contacto" asp-for="IdContacto">
                <option selected value="seleccione">@Lb["seleccione"]</option>
                @foreach (var contactos in ViewData["contactos"] as IList<TbCrContacto>)
                {
                    @if (contactos.Persona == true)
                    {
                        <option value="@contactos.IdContacto">@contactos.Nombre</option>
                    }
                    else
                    {
                        <option value="@contactos.IdContacto">@contactos.NombreComercial</option>
                    }
                }
            </select>
            <div id="AlertContacto"></div>
        </div>

        <div class="form-group col-md-6 col-sm-6 col-xs-12">
            <label for="staticEmail" class=" col-form-label">@Lb["Asignado"]:</label><br />
            <select class="selectpicker form-control" data-live-search="true" id="asignado" asp-for="IdUsuario">
                <option selected value="seleccione">@Lb["seleccione"]</option>
                @foreach (var asignados in ViewData["asignados"] as IList<TbSeUsuario>)
                {
                    <option value="@asignados.Id">@asignados.Nombre</option>
                }
            </select>
            <div id="AlertAsignado"></div>
        </div>
    </div>
    <div class="row ">
        <div class="form-group col-md-3 ">
            <label for="verMasCampos" class="col-form-label">@Lb["verMas"]</label>
            <input type="checkbox" id="verMasCampos" />
        </div>
    </div>
    <!--collapse-->

    <div id="divVerMas" class="collapse collapseCamposTareas">
        <div class="row ">

            <div class="form-group col-md-9 col-sm-9 col-xs-10">
                <label class=" col-form-label">@Lb["tipo"]:</label>
                <select class=" form-control" id="tipos"></select>
            </div>
            <div class=" form-group col-md-3 col-sm-3 col-xs-2" style="padding-top:3rem;">
                <button class="btn-link" onclick="crearTipos()"><i class="fas fa-plus-circle dark" style="font-size:1.5rem;"></i></button>
                <button class=" btn-link" onclick="EditarTipo()"> <i class="fas fa-edit dark" style="font-size:1.5rem;"></i></button>
            </div>
            <div class="form-group col-md-9 col-sm-9 col-xs-10">
                <label class=" col-form-label">@Lb["Estado"]:</label>
                <select class=" form-control" id="estados"></select>
            </div>
            <div class="form-group col-md-3 col-sm-3 col-xs-2" style="padding-top:3rem;">
                <button class=" btn-link" onclick="CrearEstado()"><i class="fas fa-plus-circle dark" style="font-size:1.5rem;"></i></button>
                <button class="btn-link" onclick="EditarEstadoTarea()"> <i class="fas fa-edit dark" style="font-size:1.5rem;"></i></button>
            </div>
        </div>

        <div class=" row">

            <div class="form-group col-md-6 col-sm-6 col-xs-12">
                <label class=" col-form-label">@Lb["diasEstimados"]:</label><br />
                <input type="text" class="form-control" placeholder="0" id="diasEstimados" asp-for="DiasEstimados" />
            </div>
            <div class="form-group col-md-6 col-sm-6 col-xs-12">
                <label class="col-form-label">@Lb["diasReales"]:</label><br />
                <input type="text" class="form-control" placeholder="0" id="diasReales" asp-for="DiasReales" disabled="disabled" />
            </div>

        </div>

        <div class=" row">
            <div class="form-group col-md-6 col-sm-6 col-xs-12">
                <label class=" col-form-label">@Lb["costoEstimado"]:</label><br />
                <input type="text" class="form-control moneda" placeholder="0" id="costoEstimado" value="@Model.CostoEstimado.ToString().Replace(',', '.')" asp-for="CostoEstimado" disabled="disabled" />
            </div>

            <div class="form-group col-md-6 col-sm-6 col-xs-12">
                <label class="col-form-label">@Lb["costoReal"]:</label><br />
                <input type="text" class="form-control moneda" placeholder="0" id="costoReal" value="@Model.CostoReal.ToString().Replace(',', '.')" asp-for="CostoReal" disabled="disabled" />
            </div>
        </div>
        <div class="row">
            <div class="form-group  col-md-12 col-sm-12 col-xs-12">
                <label class="col-form-label">@Lb["Descripción"]:</label>
                <br />
                <textarea class="form-control" id="descripcion" rows="6" maxlength="1000" asp-for="Descripcion"></textarea>
            </div>
        </div><!--Va depender si en el tipo desea controlar la fecha Limite por fedecto 3 dias-->

        <div class="row">
            <div class="form-group col-md-4 col-sm-4 col-xs-12">
                <label class=" col-form-label">@Lb["fechaLimite"]:</label>
                <input type="datetime-local" class="form-control" id="fechaLimite" asp-for="FechaLimite" />
            </div>



            <div class=" form-group col-md-2 col-sm-2 col-xs-12">
                <label for="staticEmail" class="col-form-label">@Lb["esCobrado"]:</label>
                <input type="checkbox" id="esCobrado" />
            </div>

            <div class=" form-group col-md-6 col-sm-6 col-xs-12">
                <label class="col-form-label">@Lb["montoCobrado"]:</label>
                <input type="text" disabled="disabled" class="form-control moneda" id="montoCobrado" asp-for="MontoCobrad" value="@Model.MontoCobrad.ToString().Replace(',', '.')" />
            </div>
        </div>

    </div>

    @if (Model.Titulo == null)
    {
        <div class="row col-md-8">
            <div class="col-md-4">
                <button disabled type="submit" id="btnGuardarTarea" class="btn btn-success">@Lb["Guardar"]<i class="fas fa-save"></i></button>

            </div><div class="col-md-4">

                <button type="button" onclick="btnCancelarTarea()" class="btn btn-default">@Lb["Cancelar"]</button>
            </div>
        </div>
    }
    else
    {
        <div><label>@Lb["Subtareas"]:</label>
               <button class="btn btn-link" id="AgregarLista"><i style="font-size:2rem;" class="fas fa-plus"></i></button>
    
       </div>


        <div class="row">

            <div id="uls">

            </div>

        </div>
        <br />
        <div class="row col-md-9">
            <div class="col-md-4">
                <button disabled type="button" id="btnEditarTarea" class="btn btn-success"> @Lb["Guardar"] <i class="fas fa-save"></i></button>

            </div>
            <div class="col-md-4">
                <button type="button" onclick="btnCancelarTarea()" class="btn btn-default"> @Lb["Cancelar"]</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div id="comentarios">

                </div>
            </div>
        </div>
    }
</div>

<!-- Full Height Modal Right -->
<div class="modal fade modal-lg" id="sideModalTR" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">

    <!-- Add class .modal-full-height and then add class .modal-right (or other classes from list above) to set a position to the modal -->
    <div class="modal-dialog modal-full-height modal-right" role="document">


        <div class="modal-content">
            @*<div class="row modal-header" id="head">
                    <div class="col-md-6" style="text-align:left">
                        <h4 class="modal-title w-100" id="myModalLabel">@Lb["Tipo"]</h4>
                    </div>
                    <div class="col-md-6" style="text-align:right">
                        <button type="button" class="close" id="btnCancelar">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>*@
            <div class="modal-body " id="tiposTareas">

            </div>

        </div>
    </div>
</div>

<!--modal estados-->
<div class="modal fade modal-lg" id="ModalEstados" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">

    <!-- Add class .modal-full-height and then add class .modal-right (or other classes from list above) to set a position to the modal -->
    <div class="modal-dialog modal-full-height modal-right" role="document">

        <div class="modal-content">
         
            <div class="modal-body " id="EstadosTarea">

            </div>

        </div>
    </div>
</div>


<script>

    var $anulado = $('#anulado');
    var tiposT = [];
    var estadosT = [];
    function btnCancelarTarea() {
        var titulo = $('#titulo').val();
        var idContacto = $('#contacto').val();
        var idUsuario = $('#asignado').val();

        if (titulo != "" && idContacto != 0 && idUsuario != 0) {
            bootbox.confirm({

                message: "<h4 class='text-center'><span >@Lb["confirmCancelar"]</span></h4>",
                buttons: {

                    confirm: {
                        label: '<i class="fa fa-check"></i> @Lb["Aceptar"]'
                    },
                    cancel: {
                        label: '<i class="fa fa-times"></i> @Lb["Cancelar"]'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $('#nuevaTarea').modal('hide');
                        $('#headTareas').empty();
                        $('#headTareas').append('    <h4 class="modal-title" id="titleTarea"></h4><button type="button" class= "close" id ="btnCancelarTarea" aria - label="Close" ><span aria-hidden="true">&times;</span></button >');

                        cargarTabla();
                        return;
                    } else {
                        return;
                    }

                }
            });
        } else {
            $('#nuevaTarea').modal('hide');
            $('#headTareas').empty();
            $('#headTareas').append('    <h4 class="modal-title" id="titleTarea"></h4><button type="button" class= "close" id ="btnCancelarTarea" aria - label="Close" ><span aria-hidden="true">&times;</span></button >');

            cargarTabla();
        }
    }
    //cerrar modal
    $('#btnCancelarTarea').on('click', function () {
        var titulo = $('#titulo').val();
        var idContacto = $('#contacto').val();
        var idUsuario = $('#asignado').val();

        if (titulo != "" && idContacto != 0 && idUsuario != 0) {
            bootbox.confirm({

                message: "<h4 class='text-center'><span >@Lb["confirmCancelar"]</span></h4>",
                buttons: {

                    confirm: {
                        label: '<i class="fa fa-check"></i> @Lb["Aceptar"]'
                    },
                    cancel: {
                        label: '<i class="fa fa-times"></i> @Lb["Cancelar"]'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $('#nuevaTarea').modal('hide');
                        $('#headTareas').empty();
                        $('#headTareas').append('    <h4 class="modal-title" id="titleTarea"></h4><button type="button" class= "close" id ="btnCancelarTarea" aria - label="Close" ><span aria-hidden="true">&times;</span></button >');

                        cargarTabla();
                        return;
                    } else {
                        return;
                    }

                }
            });
        } else {
            $('#nuevaTarea').modal('hide');
            $('#headTareas').empty();
            $('#headTareas').append('    <h4 class="modal-title" id="titleTarea"></h4><button type="button" class= "close" id ="btnCancelarTarea" aria - label="Close" ><span aria-hidden="true">&times;</span></button >');

            cargarTabla();
        }
    });
    var i = 0;
    $('#AgregarLista').on('click', function () {

        $('#uls').append('<div class="form-group" id="subEliminar'+i+'"><div class="col-md-10"><label>Título:</label><input id="st' + i +'" type="text" class="form-control"/></div><div class=" col-md-2" style="margin-top:20px;"><button class="btn btn-link" onclick="eliminarCampo('+i+')"><i class="fas fa-trash dark"></i></button></div></div>');

        i++;
    });
    function GetComentario(referencia, idRefernecia) {



        var comentarioModel = {
            mensaje: '',
            tipoMensaje: 'CO',
            tipoReferencia: referencia,
            id: idRefernecia
        };
        console.log(comentarioModel);

        $.ajax({
            type: "POST",
            url:  '@Url.Action("Nuevo-Comentario", "Mensajes") ',
            data: comentarioModel,
            success: function (data) {
                $('#comentarios').html(data);
            },
            error: function (err, scnd) {
                 cargarAlert('@Lb["errorGeneral"]');
                console.log(err.statusText);

            }

        });
    }

     $(document).ready(function () {
         if (@Model.Id != 0) {
             GetComentario("Tareas", @Model.Id);
             GetSubTareas();
         }

         $(".moneda").inputmask({
             'alias': 'decimal',
             rightAlign: true,
         });
         existeConfiguracion();

    });
    //editar subtareas:
    function EditarSubTareas(idTarea) {
        var SubTareas = [];

        for (var e = 0; e < l; e++) {

            var subtarea = {
                id: $("#is" + e + "").val(),
                idTarea: idTarea,
                descripcion: $("#s" + e + "").val()

            };

            SubTareas.push(subtarea);
        }
         $.ajax({
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                type: "POST",


             url: '@Url.Action("EditarSubTareas", "Tarea")',
             data: { domain: SubTareas },
                success: function (data) {

                    cargarTabla();
                },

             error: function (err, scnd) {
                     cargarAlert('@Lb["errorGeneral"]');
                    console.log(err.statusText);
                }

            });
    }



    //eliminar subtareas nuevas
    function eliminarCampo(id) {
        console.log(id);
        bootbox.confirm({

            message: "<h4 class='text-center'><span > @Lb["confirmElimSubtarea"]</span></h4>",
            buttons: {

               confirm: {
                        label: '<i class="fa fa-check"></i> @Lb["Aceptar"]'
                    },
                    cancel: {
                        label: '<i class="fa fa-times"></i> @Lb["Cancelar"]'
                    }
            },
            callback: function (result) {
                if (result) {
                    $("#subEliminar" + id + "").remove();

                    i--;
                    return;
                } else {
                    return;
                }

            }
        });


    }




    //eliminar subtarea que ya estaban
    function EliminarSubTarea(idSubTarea) {

        console.log(idSubTarea);
        bootbox.confirm({

            message: "<h4 class='text-center'><span > @Lb["confirmElimSubtarea"]</span></h4>",
            buttons: {

                              confirm: {
                        label: '<i class="fa fa-check"></i> @Lb["Aceptar"]'
                    },
                    cancel: {
                        label: '<i class="fa fa-times"></i> @Lb["Cancelar"]'
                    }
            },

            callback: function (result) {
                if (result) {
                    $.ajax({
                        headers: {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                        type: "GET",

                        url: '@Url.Action("EliminarSubTarea", "Tarea")',
                        data: { idSubContacto:idSubTarea },


                      success: function (data1) {
                          $('#uls').empty();
                          GetSubTareas();
                          return;
                    },

                    error: function (err, scnd) {
                        console.log(err.statusText);
                    }

                });
                } else {
                    return;
                }

            }
        });

    }
    //agregar subtarea
    function AgregarSubtarea(idTarea ) {
        var SubTareas = [];
        for (var e = 0; e < i; e++) {
            var subtarea = {
                idTarea: idTarea,
                descripcion: $("#st" + e + "").val()

            };
            SubTareas.push(subtarea);
        }
         $.ajax({
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                type: "POST",


             url: '@Url.Action("AgregarSubTarea", "Tarea")',
             data: { domain: SubTareas },
                success: function (data) {
                    $('#uls').empty();
                    cargarTabla();
                },

             error: function (err, scnd) {
                     cargarAlert('@Lb["errorGeneral"]');
                    console.log(err.statusText);
                }

            });

    }
    var l = 0;
    //getSubTareas.
     function GetSubTareas() {
         $.ajax({
             headers: {
                 "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
             },
             type: "GET",

             url: '@Url.Action("GetSubTareas", "Tarea")',
             data: { idTarea: @Model.Id},


       success: function (data1) {


                        for (l= 0; l < data1.length; l++) {

                            $('#uls').append('<div class= "form-group" ><div class= "form-group" hidden > <input type="text" id="is' + l + '" value="' + data1[l].id + '"/></div> <div class="col-md-10"><input id="s' + l + '" type="text" class="form-control" value=" ' + data1[l].descripcion + ' " /></div> <div class=" col-md-2" style="margin-top:20px;"><button class="btn btn-link" onclick="EliminarSubTarea(' + data1[l].id + ')"><i class="fas fa-trash dark"></i></button></div></div>');

                        }



                    },

                    error: function (err, scnd) {
                        console.log(err.statusText);
                    }

                });
        }
    //editando
    $('#btnEditarTarea').on('click', function () {

        if (ValidarDatos() == true) {
            var fechaLimite = $('#fechaLimite').val();
            var descripcion = $('#descripcion').val();
            var idEstado = $('#estados').val();
            var idTipo = $('#tipos').val();
            var diasEstimados = $('#diasEstimados').val();
            var diasReales = $('#diasReales').val();
            var costoEstimado = $('#costoEstimado').val().replace(".", ",");
            var costoReal = $('#costoReal').val().replace(".", ",");
            var cobrado = $('#esCobrado').val();
            var montoCobrad = $('#montoCobrado').val().replace(".", ",");

            if ($('#esCobrado').prop('checked')) {
                cobrado = true;
            } else {
                cobrado = false;
            }



            var TareaViewModel = {
                id: $('#Id').val(),
                titulo: $('#titulo').val(),
                idContacto: $('#contacto').val(),
                idUsuario: $('#asignado').val(),
                idEstado: idEstado,
                idTipo: idTipo,
                eliminada: null,
                fechaLimite: fechaLimite,
                descripcion: descripcion,
                diasEstimados: diasEstimados,
                diasReales: diasReales,
                costoEstimado: costoEstimado,
                costoReal: costoReal,
                cobrado: cobrado,
                montoCobrad: montoCobrad,
                posicion: (tareas.length + 1)
            };
            console.log(TareaViewModel);
            $.ajax({
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                type: "POST",


                url: '@Url.Action("EditarTareaPost", "Tarea")',
                data: { domain: TareaViewModel },
                success: function (data) {
                    if (l != 0) {
                        EditarSubTareas(data);
                    }
                    if (i != 0) {
                        AgregarSubtarea(data);
                    }
                    $('#nuevaTarea').modal('hide');
                    cargarTabla();
                },

                error: function (err, scnd) {
                     cargarAlert('@Lb["errorGeneral"]');
                    console.log(err.statusText);
                }

            });
        }


    });
    //metodo que permiter guardar la tarea
    $('#btnGuardarTarea').on('click', function () {

        if (ValidarDatos() == true) {
            var fechaLimite = $('#fechaLimite').val();
            var descripcion = $('#descripcion').val();
            var idEstado = $('#estados').val();
            var idTipo = $('#tipos').val();
            var diasEstimados = $('#diasEstimados').val();
            var diasReales = $('#diasReales').val();
            var costoEstimado = $('#costoEstimado').val();
            var costoReal = $('#costoReal').val();
            var cobrado = $('#esCobrado').val();
            var montoCobrad = $('#montoCobrado').val();

            if ($('#esCobrado').prop('checked')) {
                cobrado = true;
            } else {
                cobrado = false;
            }



            var TareaViewModel = {
                id: null,
                titulo: $('#titulo').val(),
                idContacto: $('#contacto').val(),
                idUsuario: $('#asignado').val(),
                idEstado: idEstado,
                idTipo: idTipo,
                eliminada:null,
                fechaLimite: fechaLimite,
                descripcion: descripcion,
                diasEstimados: diasEstimados,
                diasReales: diasReales,
                costoEstimado: costoEstimado,
                costoReal: costoReal,
                cobrado: cobrado,
                montoCobrad: montoCobrad,
                posicion: (tareas.length + 1)
            };
            console.log(TareaViewModel);
              $.ajax({
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    type: "POST",


                    url: '@Url.Action("CrearTarea", "Tarea")',
                  data: { domain: TareaViewModel},
                  success: function (data) {

                      $('#nuevaTarea').modal('hide');
                      cargarTabla();
                    },

                  error: function (err, scnd) {
                         cargarAlert('@Lb["errorGeneral"]');
                        console.log(err.statusText);
                    }

                });
        }
    });
    function CrearEstado() {
           $.ajax({
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    type: "GET",


                    url: '@Url.Action("CrearEstadoVista", "EstadoTarea")',

                    success: function (data) {
                        $('#EstadosTarea').html(data);
                        $('#ModalEstados').modal('show');
                    },

               error: function (err, scnd) {
                         cargarAlert('@Lb["errorGeneral"]');
                        console.log(err.statusText);
                    }

                });
    }
    $('#sideModalTR').on('hidden.bs.modal', function () {

        getTipos();

    });
    $('#ModalEstados').on('hidden.bs.modal', function () {

        getEstados();

    });

    //llamar vista parcial para editar los estados
    function EditarEstadoTarea() {
        var idEstado = $('#estados').val();
         $.ajax({
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    type: "GET",


             url: '@Url.Action("EditarEstadoVista", "EstadoTarea")',
             data: { idEstado: idEstado },
                    success: function (data) {
                        $('#EstadosTarea').html(data);
                        $('#ModalEstados').modal('show');
                    },

             error: function (err, scnd) {
                         cargarAlert('@Lb["errorGeneral"]');
                        console.log(err.statusText);
                    }

                });
    }
    tipoTareas = [];
    $("#tipos").on('click', function () {

        var posicion = document.getElementById('tipos').options.selectedIndex; //posicion
        var realPosicion = document.getElementById('tipos').options[posicion].text;
        console.log(tipoTareas);
        if (tipoTareas[posicion] == true) {

                $('#fechaLimite').attr('disabled', true);
            } else {
                $('#fechaLimite').attr('disabled', false);
            }

    });
    $(document).ready(function () {



        $("#esCobrado").click(function () {
        //valida que si cobrado habilita el campo
            if ($(this).is(":checked"))
            {
                $('#montoCobrado').attr('disabled', false);
            } else {
                $('#montoCobrado').attr('disabled', true);
                $('#montoCobrado').val(0);
            }
        })
        $('.selectpicker').selectpicker();
        getTipos();
        getEstados();

    });

    //Mostrar div con la opcion ver mas
    $(document).ready(function () {
        $('#divVerMas').attr("hidden", true);

        $('#verMasCampos').change(function () {

            $('.collapseCamposTareas').collapse('toggle');

            if (!$('#verMasCampos').prop('checked')) {

            }

        });

    });

    function getEstados() {

         var url = '@Url.Action("GEtEstados", "EstadoTarea")';
            $.ajax({
                type: "get",
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                url: url,
                success: function (data) {

                    var selected = "";

                    var flag = false;



                    if ($('#estados').has('option').length > 0) {
                        flag = true;
                        selected = $('#estados').val();
                        $('#btnEditarTarea').attr('disabled', false);
                        $('#btnGuardarTarea').attr('disabled', false);
                    } else
                        estadosT = data;


                    $("#estados option").remove();
                    $('#estados').selectpicker('destroy');

                    for (var i = 0; i < data.length; i++) {

                        if (data[i].activo) {

                            var o = new Option(data[i].titulo, data[i].id);

                            o.setAttribute("data-content", "<img class='img-circle' style='width:2rem; height: 2rem; background: " + data[i].color + " '>  <span>" + data[i].titulo + "</span>");

                            if (@Model.Id === 0) {

                                if (!flag) {

                                    if (data[i].esTipoDefecto)
                                        o.setAttribute("selected", "selected");
                                }
                                else {

                                    if (estadosT.length === data.length) {
                                        if (parseInt(selected) === data[i].id) {
                                            $(o).attr("selected", true);
                                        }

                                    }
                                    else {
                                        var pos = data.length - 1;
                                        if (i === pos) {
                                            $(o).attr("selected", true);
                                            estadosT = data;
                                        }

                                    }

                                }
                            }
                            else {
                                if (!flag) {

                                    if (data[i].id.toString() === "@Model.IdEstado") {
                                        o.setAttribute("selected", "selected");
                                    }
                                }
                                else{

                                    if (estadosT.length === data.length) {

                                        if (parseInt(selected) === data[i].id)
                                            $(o).attr("selected", true);
                                    }
                                    else {
                                        var pos = data.length - 1;
                                        if (i === pos) {
                                            $(o).attr("selected", true);
                                            estadosT = data;
                                        }

                                    }
                                }
                            }

                            $("#estados").append(o);

                        }
                    }

                    $('#estados').selectpicker();



                },
                error: function (err, scnd) {
                    //console.log(err.statusText);
                    cargarAlert("@Lb["errorGeneral"]");
                }
            });
    }
     function getTipos() {

            var url = '@Url.Action("GEtTipos", "TipoTarea")';
            $.ajax({
                type: "get",
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                url: url,
                success: function (data) {
                    tipoTareas = [];

                    var selected = "";

                    var flag = false;

                    if ($('#tipos').has('option').length > 0) {
                        flag = true;
                        selected = $('#tipos').val();
                        $('#btnEditarTarea').attr('disabled', false);
                        $('#btnGuardarTarea').attr('disabled', false);
                    } else
                        tiposT = data;


                    $("#tipos option").remove();
                    $('#tipos').selectpicker('destroy');

                    for (var i = 0; i < data.length; i++) {

                        if (data[i].activo == true) {

                            tipoTareas.push(JSON.parse(JSON.stringify(data[i].controlaFechaLimite)));

                            var o = new Option(data[i].titulo, data[i].id);

                            o.setAttribute("data-content", "<img class='img-circle' style='width:2rem; height: 2rem; background: " + data[i].color + " '>  <span>" + data[i].titulo + "</span>");

                            if (@Model.Id === 0) {

                                if (!flag) {

                                    if (data[i].esTipoDefecto) {
                                        o.setAttribute("selected", "selected");
                                    }
                                }
                                else if (flag) {

                                    if (tiposT.length === data.length) {
                                        console.log(selected);
                                        console.log(data[i].id);
                                        if (parseInt(selected) === data[i].id) {
                                            $(o).attr("selected", true);
                                        }

                                    }
                                    else {
                                        var pos = data.length - 1;
                                        if (i === pos) {
                                            $(o).attr("selected", true);
                                            tiposT = data;
                                        }

                                    }

                                }
                            }
                            else {
                                if (!flag) {

                                    if (data[i].id.toString() === "@Model.IdTipo") {
                                        o.setAttribute("selected", "selected");
                                    }
                                }
                                else if (flag) {

                                    if (tiposT.length === data.length) {

                                        if (parseInt(selected) === data[i].id) {
                                            $(o).attr("selected", true);
                                        }

                                    }
                                    else {
                                        var pos = data.length - 1;
                                        if (i === pos) {
                                            $(o).attr("selected", true);
                                            tiposT = data;
                                        }

                                    }

                                }
                            }

                            if (data[i].controlaFechaLimite) {
                                $('#fechaLimite').attr('disabled', true);
                            }


                            $("#tipos").append(o);

                        }
                    }

                    $('#tipos').selectpicker();

                },
                error: function (err, scnd) {
                    //console.log(err.statusText);
                    cargarAlert("@Lb["errorGeneral"]");
                }
            });
        }

      function crearTipos() {
             $.ajax({
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    type: "GET",


                    url: '@Url.Action("CrearTipos", "TipoTarea")',

                 success: function (data) {

                        $('#tiposTareas').html(data);
                        $('#sideModalTR').modal('show');
                    },

                    error: function (err, scnd) {
                        //console.log(err.statusText);
                        cargarAlert("@Lb["errorGeneral"]");
                    }

                });
    }
      //llamar vista parcial para editar..
    function EditarTipo() {
        var idTipoTarea = $('#tipos').val();
             $.ajax({
                    headers: {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    type: "GET",


                    url: '@Url.Action("EditarTipo", "TipoTarea")',
                 data: { idTipoTarea: idTipoTarea},
                 success: function (data) {

                        $('#tiposTareas').html(data);
                        $('#sideModalTR').modal('show');
                    },

                    error: function (err, scnd) {
                        //console.log(err.statusText);
                        cargarAlert("@Lb["errorGeneral"]");
                    }

                });
    }

    function existeConfiguracion() {

         $.ajax({
                type: "get",
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },

                url: '@Url.Action("ExisteConfigurarion", "Tarea")',
             success: function (data) {

                 if (!data.estados && !data.tipos) {
                     cargarAlert("@Lb["NoEstadosNiTipos"]");
                 }
                 else if (data.estados && !data.tipos) {
                     cargarAlert("@Lb["NoTipos"]");
                 }
                 else if (!data.estados && data.tipos) {
                     cargarAlert("@Lb["NoEstados"]");
                 }
                 else if (data.estados && data.tipos) {
                     $('#btnEditarTarea').attr('disabled', false);
                     $('#btnGuardarTarea').attr('disabled', false);
                 }

             },
             error: function (err, scnd) {
                  cargarAlert('@Lb["errorGeneral"]');
                console.log(err.statusText);
             }
         });
    }

    function ValidarDatos() {

        if ($('#titulo').val() == "") {
            $('#AlertTitulo').empty();
            $('#AlertTitulo').append('<span class="text-danger">@Lb["tituloRequired"]</span>');
            return false;
        } else {
            $('#AlertTitulo').empty();
        }

        if ($("#contacto").val() == "seleccione") {
            $('#AlertContacto').empty();
            $('#AlertContacto').append('<span class="text-danger">@Lb["contactoRequired"]</span>');
            return false;
        } else {
            $('#AlertContacto').empty();
        }

        if ($("#asignado").val() == "seleccione") {
            $('#AlertAsignado').empty();
            $('#AlertAsignado').append('<span class="text-danger">@Lb["asignadoRequired"].</span>');
            return false;
        } else {
            $('#AlertAsignado').empty();
        }


        return true;
    }
</script>