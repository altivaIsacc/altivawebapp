@model IEnumerable<AltivaWebApp.Domains.TbPrInventario>
@inject IStringLocalizer<SharedResources> SharedLocalizer
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@{ 

    ViewData["Title"] = @SharedLocalizer["Catálogo"];

}


<div class="row">
    <div class="col-md-2">
        <h3>@SharedLocalizer["Catálogo"]</h3>
    </div>
    <div class="col-md-8" style="margin-left:1rem; padding-top:0.7rem">
        <p>
            <a asp-action="CrearInventario" class="btn btn-primary"><span>@SharedLocalizer["Agregar"]</span>&nbsp;<i class="fas fa-plus-circle"></i></a>
        </p>
    </div>

</div>

<hr />
<div class="row">
    <div class="col-md-6 col-sm-6 col-xs-6" style="padding-top:2rem">
        <button value="0" class="btn btn-dark btnEstado" id="btnInactivo"><span>@SharedLocalizer["VerInactivos"]</span></button>
        <button value="1" class="btn btn-dark btnEstado" id="btnActivo"><span>@SharedLocalizer["VerActivos"]</span></button>
    </div>

    <div class="col-md-offset-2 col-md-4 col-sm-6 col-xs-6 right">
        <label for="filtroBodega">@SharedLocalizer["Bodega"]:</label>
        <select class="form-control selectFiltro" id="filtroBodega">
            <option id="seleccione" value="0" selected>@SharedLocalizer["Todas"]</option>
            @{
                foreach (var item in ViewData["bodegas"] as IList<TbPrBodega>)
                {
                    <option value="@item.Id">@item.Nombre</option>
                }

            }
        </select>
    </div>
</div>

<br />

<div class="row">

    <div class="col-md-2 col-sm-6 col-xs-12" style="padding-top:0.4rem">
        <label>@SharedLocalizer["buscarPorCodigo"]:</label>
        <input type="text" id="filtroBuscar" class="form-control" />
    </div>
    <div class="col-md-2 col-sm-6 col-xs-12" style="padding-top:0.4rem">
        <label>@SharedLocalizer["buscarPorDescripcion"]:</label>
        <input type="text" id="filtroBuscarDescripcion" class="form-control" />
    </div>
    <div class="col-md-2 col-sm-6 col-xs-6" style="padding-top:0.4rem">
        <label for="filtroFamilia">@SharedLocalizer["familia"]:</label>
        <select id="filtroFamilia" class="form-control search-key selectFiltro">
            <option value="0" selected>Todos</option>
        </select>
    </div>
    <div class="col-md-2 col-sm-6 col-xs-6" style="padding-top:0.4rem">
        <label for="filtroSubFamilias">@SharedLocalizer["subFamilias"]:</label>
        <select id="filtroSubFamilias" class="form-control search-key selectFiltro">
            <option id="seleccione" value="0" selected>@SharedLocalizer["Todos"]</option>
        </select>
    </div>

    <div class="col-md-offset-1  col-md-3 col-sm-6 col-xs-12">
        <input type="checkbox" id="filtroExistencia" class="selectFiltro" />
        <label for="filtroExistencia">@SharedLocalizer["FiltroExistencia"]</label>
        <div class="row ">
            <div class="col-md-6 col-sm-6 col-xs-6">
                <select style="width:12rem" id="filtroSExistencia" class="form-control form-control-sm selectExistencia selectFiltro">
                    <option value="1" selected>@SharedLocalizer["MenorQue"]</option>
                    <option value="2" selected>@SharedLocalizer["Igual"]</option>
                    <option value="3" selected>@SharedLocalizer["MayorQue"]</option>
                    <option value="4" selected>@SharedLocalizer["MenorIgual"]</option>
                    <option value="5" selected>@SharedLocalizer["MayorIgual"]</option>
                    <option value="6" selected>@SharedLocalizer["Diferente"]</option>
                </select>
            </div>
            <div class="col-md-6 col-sm-6 col-xs-6">
                <select style="width:10rem" id="filtroMedida" class="form-control form-control-sm selectExistencia selectFiltro">
                    <option value="1" selected>@SharedLocalizer["Min"]</option>
                    <option value="2" selected>@SharedLocalizer["Med"]</option>
                    <option value="3" selected>@SharedLocalizer["Max"]</option>
                </select>
            </div>
        </div>
    </div>

</div>

<hr />

<div class="table-responsive">
    <table class="table table-bordered" id="tblCatalogo" style="width:100%">
        <thead>
            <tr>
                <th hidden>
                    <span>Id</span>
                </th>
                <th style="width:10%">
                    <span >@SharedLocalizer["Código"] </span>
                </th>
                <th style="width:20%">
                    <span>@SharedLocalizer["Descripción"]</span>
                </th>
                <th style="width:5%">
                    <span>@SharedLocalizer["Present"]</span>
                </th>
                <th style="width:15%">
                    <span>@SharedLocalizer["PrecioUnit"]</span>
                </th>
                <th style="width:8%">
                    <span>@SharedLocalizer["Exist"]</span>
                </th>
                <th style="width:8%">
                    <span>@SharedLocalizer["Min"]</span>
                </th>
                <th style="width:8%">
                    <span>@SharedLocalizer["Med"]</span>
                </th>
                <th style="width:8%">
                    <span>@SharedLocalizer["Max"]</span>
                </th>
                <th style="width:6%">
                    <span>@SharedLocalizer["Estado"]</span>
                </th>
                <th style="width:12%">
                    <span>@SharedLocalizer["Acción"]</span>
                </th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<input readonly hidden id="formaterColon" class="colon" />
<input readonly hidden id="formaterDolar" class="dolar" />
<input readonly hidden id="formaterEuro" class="euro" />

<script>


    var inventario = [];
    var inventarioMostrar = [];
    var familias = [];
    var subFamilia = [];
    var estadoItem = false;
    var monedas = [];
    var tblCatalogo = [];
    $(document).ready(function () {

        if ("@ViewBag.cod" != "") {
            var url = "@Url.Action("ListarInventario", "Inventario", new { cod = ViewBag.cod })";
            var regex = new RegExp('/[^/]*$');
            history.pushState(null, "", url.replace(regex, '/'));
        }
        


        $('.selectExistencia').attr('disabled', true);
        $('#filtroSubFamilias').attr('disabled', true);

        $('#btnActivo').hide();


        /////////////////////////get Familias//////////////////////////

        var url = '@Url.Action("GetFamilia", "Inventario")';
        $.ajax({
            type: "get",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            url: url,
            success: function (data) {

                familias = data;

                for (var i = 0; i < data.length; i++) {
                    var o = new Option(data[i].descripcion, data[i].id);
                    $("#filtroFamilia").append(o);
                }



            },
            error: function (err, scnd) {
                 cargarAlert("@SharedLocalizer["errorGeneral"]");
            }
        });


        $('#filtroExistencia').change(function () {
            //selectExistencia

            if ($(this).prop('checked'))
                $('.selectExistencia').attr('disabled', false);
            else
                $('.selectExistencia').attr('disabled', true);


        });

        $('#filtroFamilia').change(function () {

            setFiltroSubFamilia($(this).val());


            if ($(this).val() === 0)
                $('#filtroSubFamilias').attr('disabled', true);
            else
                $('#filtroSubFamilias').attr('disabled', false);
        });



        $('.btnEstado').click(function () {

            $(this).hide();

            if ($(this).val() === '1') {
                estadoItem = false;
                $('#btnInactivo').show();
            }
            else {
                estadoItem = true;
                $('#btnActivo').show();
            }


            cargarFiltros();
            

        });

        getMonedas();
        $("#filtroBuscar").val("@ViewBag.cod");
        

    });

    function getMonedas() {
         $.ajax({
              type: "get",
              headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
              url: '@Url.Action("GetMonedas", "Monedas")',
              success: function (data) {

                  monedas = data;

                  ///inicializa formato
                  $(".colon").inputmask('currency', {
                      prefix: monedas[0].simbolo + ' ',
                      rightAlign: true
                  });
                  $(".dolar").inputmask('currency', {
                      prefix: monedas[1].simbolo + ' ',
                      rightAlign: true
                  });
                  $(".euro").inputmask('currency', {
                      prefix: monedas[2].simbolo + ' ',
                      rightAlign: true
                  });

                  getInventario();


              },
              error: function (err, scnd) {
                  cargarAlert('@SharedLocalizer["errorGeneral"]');
                  console.log(err.statusText);
              }
         });
    }


    function getInventario() {
            ///get inventario
            $.ajax({

            type: "get",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetAllInventario")',
                    success: function (data) {
                    console.log(data);
                    inventario = JSON.parse(JSON.stringify(data));
                    //console.log(data);
                    cargarDatos(data);

                    
            },
            error: function (err, scnd) {
                 cargarAlert("@SharedLocalizer["errorGeneral"]");
            }
            });
    }


    function setFiltroSubFamilia(id) {


            $('#filtroSubFamilias option').remove();

            var opt = new Option("Todos", 0);
            $(opt).attr('selected', true);


            $("#filtroSubFamilias").append(opt);

            for (var i = 0; i < familias.length; i++) {
                subFamilia = familias[i].inverseIdFamiliaNavigation;
                if (familias[i].id === parseInt(id)) {
                    for (var j = 0; j < subFamilia.length; j++) {
                        var o = new Option(subFamilia[j].descripcion, subFamilia[j].id);
                        $("#filtroSubFamilias").append(o);
                    }

                }
            }


    }

    function inicializarTabla() {

         $('#tblCatalogo').DataTable().destroy();

        tblCatalogo = $('#tblCatalogo').DataTable({
            "info": false,
            "order": [[0, "desc"]],
            dom: 'Bfrtip',
            language: {
                "decimal": "",
                "emptyTable": "@SharedLocalizer["NoDatos"]",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "@SharedLocalizer["Mostrar"] _MENU_ @SharedLocalizer["Entradas"]",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "<i class='fas fa-search'></i>",
                "zeroRecords": "@SharedLocalizer["sinResultados"]",
                "paginate": {
                    "first": "@SharedLocalizer["Primero"]",
                    "last": "@SharedLocalizer["Último"]",
                    "next": "@SharedLocalizer["Sguiente"]",
                    "previous": "@SharedLocalizer["Anterior"]"
                }
            },
            buttons: [
                {
                    extend: 'print',
                    text: '<i class="fas fa-print   "></i>',
                    titleAttr: 'PDF',
                    title: '@SharedLocalizer["Catálogo"]',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8]
                    }
                },
                {
                    extend: 'copy',
                    text: '<i class="fas fa-copy"></i>',
                    titleAttr: 'Copy',
                    title: '@SharedLocalizer["Catálogo"]',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8]
                    }
                   
                }              
            ]
        });

        $(".dataTables_searching").hide();

        buscarPorCodigo($("#filtroBuscar").val());
        

    }

    var contadorFila = 0;
    function cargarDatos(data) {

        contadorFila = 0;

        $("#tblCatalogo > tbody").remove();

        $('table').append('<tbody></tbody>');

        for (var i = 0; i < data.length; i++) {

            var estado = "@SharedLocalizer["Activo"]";
            var icono = '<i class="fas fa-trash"></i>';
            if (data[i].inactiva === true) {
                icono = '<i class="fas fa-trash-restore"></i>';
                estado = "@SharedLocalizer["Inactivo"]";
            }

            if (data[i].inactiva === estadoItem) {
                var body = '<tr class="fila' + contadorFila + ' filas">'
                    + '<td hidden>' + data[i].idInventario + '</td>'
                    + '<td style = "padding-top: 1.5rem;" > <a href="#" onclick="irAItem(' + data[i].idInventario + ')">' + data[i].codigo + '</a></td>'
                    + '<td style="padding-top:1.5rem;">' + data[i].descripcion + '</td>'
                    + '<td style="padding-top:1.5rem;">' + data[i].cantidadUnidad.toFixed(2) + ' ' + data[i].idUnidadMedidaNavigation.abreviatura + ' </td>'
                    + '<td style="text-align:right; padding-top:1.5rem;">' + darFormato(data[i].codigoMonedaVenta, data[i].precioVentaFinal) + '</td>'
                    + '<td style="padding-top:1.5rem;">' + calcularExistencia(data[i].tbPrInventarioBodega) + '</td>'
                    + '<td style="padding-top:1.5rem;">' + calcularExistenciaMinima(data[i].tbPrInventarioBodega) + '</td>'
                    + '<td style="padding-top:1.5rem;">' + calcularExistenciaMedia(data[i].tbPrInventarioBodega) + '</td>'
                    + '<td style="padding-top:1.5rem;">' + calcularExistenciaMaxima(data[i].tbPrInventarioBodega) + '</td>'
                    + '<td style="padding-top:1.5rem;">' + estado + '</td>'
                    + '<td >  <button value="' + data[i].idInventario + '" onclick="editarInventario(value)" class="btn btn-link btnEditar"><i class="fas fa-edit"></i></button><button value="' + data[i].idInventario + '" onclick="cambiarEstadoInventario(value ' + "," + contadorFila + ')" class="btn btn-link">' + icono + '</button></td></tr>';
                $('#tblCatalogo > tbody').append(body);
                contadorFila++;
            }

        }
        
        inicializarTabla();


    }


    var counter = 0;

    function editarInventario(id) {
        counter++;
        if (counter == 1) {
            var url = '@Url.Action("EditarInventario", "Inventario", new { id = "__id__" })';
        window.location.href = url.replace('__id__', id);
        }


    }

    function darFormato(idMoneda, value) {

        if (idMoneda === 1) {
            $('#formaterColon').val(value);
            return $('#formaterColon').val();
        }

        else if (idMoneda === 2) {
            $('#formaterDolar').val(value);
            return $('#formaterDolar').val();
        }

        else if (idMoneda === 3) {
            $('#formaterEuro').val(value);
            return $('#formaterEuro').val();
        }

    }

    function cambiarEstadoInventarioLocal(id) {
        var item = "";
        var msj = "";
        var contador = 0;

        for (var i = 0; i < inventario.length; i++) {

            if (inventario[i].idInventario == id) {
                item = inventario[i];
                contador = i;
                break;
            }
        }

        if (item.inactiva)
            msj = '@SharedLocalizer["confirmReactivar"]';//"Está seguro que desea reactivar este item?";
        else
            msj = '@SharedLocalizer["confirmDesactivar"]';//"Está seguro que desea desactivar este item?";

        bootbox.confirm(msj, function (result) {

            if (result) {

                if (item.inactiva)
                    inventario[contador].inactiva = false;
                else
                    inventario[contador].inactiva = true;

                cargarFiltros();
            }

        });
    }

    function cambiarEstadoInventario(id) {

        $.ajax({

            type: "get",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: 'CambiarEstado-Inventario/' + id,
            success: function (data) {
                cambiarEstadoInventarioLocal(id);

            },
            error: function (err, scnd) {
                console.log(err.statusText);
                cargarAlert("@SharedLocalizer["errorGeneral"]");
            }

        });

    }

    ////////////////////////////calculos existencia/////////////////////////////////

    function calcularExistencia(bodegas) {

        var existencia = 0;

        for (var i = 0; i < bodegas.length; i++) {
            existencia += bodegas[i].existenciaBodega;
        }

        return existencia;
    }

    function calcularExistenciaMaxima(bodegas) {

        var existencia = 0;
        for (var i = 0; i < bodegas.length; i++) {
            existencia += bodegas[i].existenciaMaxima;
        }

        return existencia;
    }

    function calcularExistenciaMinima(bodegas) {

        var existencia = 0;
        for (var i = 0; i < bodegas.length; i++) {
            existencia += bodegas[i].existenciaMinima;
        }

        return existencia;
    }

    function calcularExistenciaMedia(bodegas) {

        var existencia = 0;
        for (var i = 0; i < bodegas.length; i++) {
            existencia += bodegas[i].existenciaMedia;
        }

        return existencia;
    }

    //////////////////////////////filtros/////////////////////////////////////////////////

    $("#filtroBuscarDescripcion").on("keyup", function () {

        tblCatalogo
            .columns(2)
            .search(this.value)
            .draw();
    });

    $("#filtroBuscar").on("keyup", function () {

        buscarPorCodigo($(this).val());
    });

    function buscarPorCodigo(value) {

        tblCatalogo
            .columns(1)
            .search(value)
            .draw();

    }

    $('.selectFiltro').on('change', function () {

        cargarFiltros();

    });


    function cargarFiltros() {

        inventarioMostrar = JSON.parse(JSON.stringify(inventario));
        inventarioMostrar = filtroFamilia(inventarioMostrar);
        inventarioMostrar = filtroSubFamilia(inventarioMostrar);
        inventarioMostrar = filtroExistencia(inventarioMostrar);
        inventarioMostrar = filtroBodega(inventarioMostrar);

        cargarDatos(inventarioMostrar);
    }

    function filtroFamilia(inventarioMostrar) {

        var inventarioFiltrado = [];
        var idFamilia = parseInt($('#filtroFamilia').val());

        if (idFamilia === 0) {
            return inventarioMostrar;
        }
        else {

            for (var j = 0; j < familias.length; j++) {
                if (familias[j].id == idFamilia)
                    subF = familias[j].inverseIdFamiliaNavigation;
            }

            for (var i = 0; i < inventarioMostrar.length; i++) {
                for (var j = 0; j < subF.length; j++) {
                    if (inventarioMostrar[i].idSubFamilia == subF[j].id) {
                        inventarioFiltrado.push(inventarioMostrar[i]);
                    }
                }
            }

            //console.log(inventarioFiltrado);

            return inventarioFiltrado;

        }



    }
    function filtroSubFamilia(inventarioMostrar) {

        var inventarioFiltrado = [];
        var subF = {};
        var idSubFamilia = parseInt($('#filtroSubFamilias').val());

        if (idSubFamilia === 0) {
            return inventarioMostrar;
        }
        else {

            for (var j = 0; j < familias.length; j++) {
                for (var i = 0; i < familias[j].inverseIdFamiliaNavigation.length; i++) {
                    if (familias[j].inverseIdFamiliaNavigation[i].id == idSubFamilia)
                        subF = familias[j].inverseIdFamiliaNavigation[i];
                }

            }
            //console.log(subF);

            for (var i = 0; i < inventarioMostrar.length; i++) {
                if (inventarioMostrar[i].idSubFamilia == subF.id)
                    inventarioFiltrado.push(inventarioMostrar[i]);
            }

            return inventarioFiltrado;

        }

    }
    function filtroExistencia(inventarioMostrar) {

        if ($('#filtroExistencia').prop('checked')) {
            var a = filtrarPorMedida(inventarioMostrar);
            return a;
        }
        else {
            return inventarioMostrar;
        }


    }


    function filtroBodega(inventarioMostrar) {

        var idBodega = parseInt($('#filtroBodega').val());
        var inventarioFiltrado = [];


        if (idBodega === 0) {
            return inventarioMostrar;
        }
        else {

            for (var i = 0; i < inventarioMostrar.length; i++) {
                var bodega = inventarioMostrar[i].tbPrInventarioBodega;

                for (var j = 0; j < bodega.length; j++) {

                    if (bodega[j].idBodega === idBodega) {

                        inventarioFiltrado.push(inventarioMostrar[i]);

                    }
                    else {
                        bodega[j].existenciaBodega = 0;
                        bodega[j].existenciaMaxima = 0;
                        bodega[j].existenciaMedia = 0;
                        bodega[j].existenciaMinima = 0;
                    }


                }
            }

            return inventarioFiltrado;

        }


    }
    function filtrarPorMedida(inventarioMostrar) {

        var existencia = $('#filtroSExistencia').val();
        var medida = parseInt($('#filtroMedida').val());
        var inventarioAux = inventarioMostrar;
        var inventarioFiltrado3 = [];

        if (existencia == 1 && medida == 1) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) < calcularExistenciaMinima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //menor que med
        else if (existencia == 1 && medida == 2) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) < calcularExistenciaMedia(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //menor que maxima
        else if (existencia == 1 && medida == 3) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) < calcularExistenciaMaxima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        // igual que min
        else if (existencia == 2 && medida == 1) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) === calcularExistenciaMinima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //igual que med
        else if (existencia == 2 && medida == 2) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) === calcularExistenciaMedia(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);

            }
        }
        //igual que max
        else if (existencia == 2 && medida == 3) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) === calcularExistenciaMaxima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //mayor que min
        else if (existencia == 3 && medida == 1) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) > calcularExistenciaMinima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //mayor que med
        else if (existencia == 3 && medida == 2) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) > calcularExistenciaMedia(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }

        //mayor que max
        else if (existencia == 3 && medida == 3) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) > calcularExistenciaMaxima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //menor igual que min
        else if (existencia == 4 && medida == 1) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) <= calcularExistenciaMinima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //menor igual que med
        else if (existencia == 4 && medida == 2) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) <= calcularExistenciaMedia(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }

        //menor igual que max
        else if (existencia == 4 && medida == 3) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) <= calcularExistenciaMaxima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //mayor igual que min
        else if (existencia == 5 && medida == 1) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) >= calcularExistenciaMinima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //mayor igual que med
        else if (existencia == 5 && medida == 2) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) >= calcularExistenciaMedia(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }

        //mayor igual que max
        else if (existencia == 5 && medida == 3) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) >= calcularExistenciaMaxima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //dif que min
        else if (existencia == 6 && medida == 1) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) != calcularExistenciaMinima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }
        //dif que med
        else if (existencia == 6 && medida == 2) {
            for (var i = 0; i < inventarioAux.length; i++) {
                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) != calcularExistenciaMedia(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);
            }
        }

        //dif que max
        else if (existencia == 6 && medida == 3) {
            for (var i = 0; i < inventarioAux.length; i++) {

                if
                (calcularExistencia(inventarioAux[i].tbPrInventarioBodega) != calcularExistenciaMaxima(inventarioAux[i].tbPrInventarioBodega))
                    inventarioFiltrado3.push(inventarioAux[i]);

            }
        }

        return inventarioFiltrado3;

    }



    function irAItem(idItem) {
        window.location.href = '@Url.Action("EditarInventario", new { id = "__id__" })'.replace("__id__", idItem);
    }


</script>

<style>
    .dataTables_wrapper .dataTables_filter {
        float: right;
        text-align: right;
        visibility: hidden;
    }
</style>