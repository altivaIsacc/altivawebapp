@*monto*@
@model FormaPagoViewModel
@inject IStringLocalizer<SharedResources> Lb


<div class="modal fade" id="formaPagoModal" tabindex="-1" role="dialog" aria-labelledby="formaPagoModalCenter" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header row" style="padding-bottom:0; margin-bottom: 0; ">

                <div class="col-md-3 col-sm-3 col-xs-6">
                    <div class="form-group row">
                        <label for="monto" class="col-sm-3 col-xs-4 col-md-3 col-form-label col-form-label-sm">@Lb["Monto"]:</label>
                        <div class="col-sm-9 col-md-9 col-xs-8">
                            <input readonly class="form-control input-sm formaPagoMoneda" value="@Model.Monto" id="monto">
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-6">
                    <div class="form-group row">
                        <label for="pago" class="col-sm-3 col-xs-4 col-md-3 col-form-label col-form-label-sm">@Lb["Pagos"]:</label>
                        <div class="col-sm-9 col-md-9 col-xs-8">
                            <input readonly class="form-control input-sm formaPagoMoneda" value="@Model.Monto" id="pago">
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-4 col-xs-8">
                    <div class="form-group row">
                        <label for="balance" class="col-sm-3 col-xs-3 col-md-3 col-form-label col-form-label-sm">@Lb["Balance"]:</label>
                        <div class="col-sm-9 col-md-9 col-xs-9">
                            <input readonly class="form-control input-sm " id="balance">
                        </div>
                    </div>
                </div>
                <div class="col-md-2 col-sm-2 col-xs-4" style="margin: 0; padding: 0; text-align:right">
                    <button class="btn btn-link" data-dismiss="modal">
                        <span aria-hidden="true">@Lb["Terminar"]</span>
                    </button>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-2 col-sm-4 col-xs-12">
                        <div class="list-group" id="metodosPago" role="tablist">
                            <a onclick="setFormaPagoSeleccionada(1)" class="list-group-item list-group-item-action" id="efectivoTab" data-toggle="list" href="#list-efectivo" role="tab" aria-controls="efectivo">@Lb["Efectivo"]</a>
                            <a onclick="setFormaPagoSeleccionada(2)" class="list-group-item list-group-item-action" id="tarjetaTab" data-toggle="list" href="#list-tarjeta" role="tab" aria-controls="tarjeta">@Lb["Tarjeta"]</a>
                            <a onclick="setFormaPagoSeleccionada(3)" class="list-group-item list-group-item-action" id="transferenciaTab" data-toggle="list" href="#list-transferencia" role="tab" aria-controls="transferencia">@Lb["Transferencia"]</a>
                            <a onclick="setFormaPagoSeleccionada(4)" class="list-group-item list-group-item-action" id="chequeTab" data-toggle="list" href="#list-cheque" role="tab" aria-controls="cheque">@Lb["Cheque"]</a>
                            <a onclick="setFormaPagoSeleccionada(5)" class="list-group-item list-group-item-action" id="saldoTab" data-toggle="list" href="#list-saldo" role="tab" aria-controls="saldo">@Lb["AplicarSaldo"]</a>
                        </div>
                    </div>
                    <div class="col-md-5 col-sm-8 col-xs-12">
                        <div class="tab-content" id="nav-tabContent">
                            <div class="row">
                                <div class="form-group col-md-12 col-sm-12 col-xs-12" style="text-align:right">
                                    <label class="form-check-label" for="rdMonedaBase"><input class="form-check-input rdMonedaBase" onclick="setMonedaFormaPago(1)" type="radio" name="rdMoneda" id="rdMonedaBase" value="1"><span class="lbMonedaBase"></span></label>&nbsp;&nbsp;
                                    <label class="form-check-label" for="rdMonedaDolar"><input class="form-check-input rdMonedaDolar" onclick="setMonedaFormaPago(2)" type="radio" name="rdMoneda" id="rdMonedaDolar" value="2"><span class="lbMonedaDolar"></span></label>&nbsp;&nbsp;
                                    <label class="form-check-label" for="rdMonedaEuro"> <input class="form-check-input rdMonedaEuro" onclick="setMonedaFormaPago(3)" type="radio" name="rdMoneda" id="rdMonedaEuro" value="3"><span class="lbMonedaEuro"></span></label>&nbsp;&nbsp;
                                </div>
                            </div>
                            <div class="tab-pane fade" id="list-efectivo" role="tabpanel" aria-labelledby="efectivoTab">
                                <div class="row">                    
                                    <div class="col-md-12 col-sm-12 col-xs-12">
                                        <hr style="padding:0; margin:0; margin-bottom:1rem" />
                                        <div class="col-md-6 col-sm-6 col-xs-6">
                                            <span><stron>@Lb["Monto"]:</stron></span>
                                        </div>
                                        <div class="col-md-6 col-sm-6 col-xs-6">
                                            <input class="form-control input-sm montoFormaPago" id="montoFP1" />
                                        </div>
                                        <div class="col-md-12 col-sm-12 col-xs-12" style="text-align: right">
                                            <button onclick="borrarMontoFormaPago()" class="btn btn-link">@Lb["Borrar"]</button>
                                            |
                                            <button onclick="guardarFormaPago(2)" class="btn btn-link">@Lb["Listo"]</button>
                                        </div>
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            <div class="row">
                                                @foreach (var item in ViewData["denominaciones"] as IList<TbFaDenominacion>)
                                                {
                                                    var claseD = "digito" + item.IdMoneda.ToString();
                                                    var claseT = "tipo" + item.Tipo.ToString();
                                                    var claseM = "moneda" + item.IdMoneda.ToString();
                                                    <div class="col-md-4 col-sm-4 col-xs-4 @claseD @claseT" hidden>
                                                        @{ CultureInfo us = CultureInfo.CreateSpecificCulture("en-US"); }

                                                        @if (item.Tipo == 2)
                                                        {
                                                            <button style="width:100%" class="btn btn-sm" value="@item.Valor" onclick="btnDenominacion(value)"><i class="fas fa-coins"></i><span class="@claseM"></span> @item.Valor.ToString("#,#", us)</button>
                                                        }
                                                        else
                                                        {
                                                            <button style="width:100%" class="btn btn-sm" value="@item.Valor" onclick="btnDenominacion(value)"><i class="fas fa-money-bill"></i><span class="@claseM"></span> @item.Valor.ToString("#,#", us)</button>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="list-tarjeta" role="tabpanel" aria-labelledby="tarjetaTab">Tarjeta</div>
                            <div class="tab-pane fade" id="list-transferencia" role="tabpanel" aria-labelledby="transferenciaTab">Transferencia</div>
                            <div class="tab-pane fade" id="list-cheque" role="tabpanel" aria-labelledby="chequeTab">Cheque</div>
                            <div class="tab-pane fade" id="list-saldo" role="tabpanel" aria-labelledby="saldoTab">Saldo</div>

                        </div>
                    </div>
                    <div class="col-md-5 col-sm-8 col-xs-12 pull-right" >
                        <h4 style="padding:0; margin:0; margin-top:0.3rem; margin-bottom: 1.5rem;">@Lb["MetodosAgreados"]</h4>
                        <table class="table table-borderless pull-right" style="width:100%" id="tblFormaPago">
                            <tbody>
                                <tr id="lineaTotalesFP">
                                    <td></td>
                                    <td><strong>@Lb["Total"]</strong></td>
                                    <td style="text-align:right"><label id="totalFormasPago"></label></td>
                                    <td></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div hidden><input hidden id="formater1" type="text" /></div>
<div hidden><input hidden id="formater2" type="text" /></div>
<div hidden><input hidden id="formater3" type="text" /></div>
<div hidden><input hidden id="formater4" class="formaPagoMoneda" type="text" /></div>

<script>
    var formaPagoSeleccionada;
    var formasPago = [];

    $(document).ready(function () {

        setMonedaGeneral(@Model.Moneda);

        $("#formater1").inputmask('currency', {
            prefix: monedas[0].simbolo,
            rightAlign: true,
            min: 0
        });
        $("#formater2").inputmask('currency', {
            prefix: monedas[1].simbolo,
            rightAlign: true,
            min: 0

        });

        $("#formater3").inputmask('currency', {
            prefix: monedas[2].simbolo,
            rightAlign: true,
            min: 0
        });

    });

    $('#metodosPago a').on('click', function (e) {
        e.preventDefault();
        $('#metodosPago a').removeClass('active');
        $(this).tab('show');
        $(this).addClass('active');
    });

    function setFormaPagoSeleccionada(value) {
        formaPagoSeleccionada = value;
        setMonedaGeneral(@Model.Moneda);

        setTimeout(function () { $('#montoFP' + value).select(); $('#montoFP' + value).focus(); }, 250);
    }

    /////////////////////////calculos efectivo/////////////////////


    ////////////validar si es la primera vez
    function btnDenominacion(value) {

        var montoAct = $('#montoFP1').inputmask('unmaskedvalue');
        if (montoAct == null)
            montoAct = 0;

        $('#montoFP1').val(parseFloat(montoAct) + parseFloat(value));

        setTimeout(function () { $('#montoFP1').focus();}, 1);

    }



    /////////////////////////fin calculos efectivo/////////////////////
    //////////////////////////calculos general/////////////////////

    function getMontosTipoCambio(idMoneda) {


        var monto = parseFloat($('#montoFP' + formaPagoSeleccionada).inputmask('unmaskedvalue'));
        if ($('#montoFP' + formaPagoSeleccionada).inputmask('unmaskedvalue') == null)
            monto = 0;


        var model = {
            base: 0,
            dolar: 0,
            euro: 0
        };

        switch (idMoneda) {
            case 1:
                model.base = monto;
                model.dolar = monto / monedas[1].valorCompra;
                model.euro = monto / monedas[2].valorCompra;
                break;
            case 2:
                model.base = monto * monedas[1].valorCompra;
                model.dolar = monto;
                model.euro = (monto * monedas[1].valorCompra) / monedas[2].valorCompra;
                break;
            case 3:
                model.base = monto * monedas[2].valorCompra;
                model.dolar = (monto * monedas[2].valorCompra) / monedas[1].valorCompra;
                model.euro = monto;
                break;
            default:
        }

        return model;

    }

    function calcularBalance() {
        var balance = parseFloat($('#pago').inputmask('unmaskedvalue')) - parseFloat($('#monto').inputmask('unmaskedvalue'));
        $('#balance').val(balance);
    }


    /////////////////////////fin calculos general/////////////////

    /////////////////////////general////////////////////////////

    function crearModeloFormaPago(tipoCategoriaFlujo) {

        var idMoneda = parseInt($("input[name='rdMoneda']:checked").val());
        var montos = getMontosTipoCambio(idMoneda);

        var montoOriginal = parseFloat($('#montoFP' + formaPagoSeleccionada).inputmask('unmaskedvalue'));
        if ($('#montoFP' + formaPagoSeleccionada).inputmask('unmaskedvalue') == null)
            montoOriginal = 0;

        var model = {
            idCajaMovimiento: 0,
            tipoCategoriaFlujo: tipoCategoriaFlujo,
            idCategoriaFlujo: 0,
            fechaCreacion: new Date(),
            estado: true,
            idMoneda: idMoneda,
            montoOriginal: montoOriginal,
            montoBase: montos.base,
            montoDolar: montos.dolar,
            montoEuro: montos.euro,
            compraDolarTc: monedas[1].valorCompra,
            ventaDolarTc: monedas[1].valorVenta,
            compraEuroTc: monedas[2].valorCompra,
            ventaEuroTc: monedas[2].valorVenta,
            idTipoCajaMovimiento: 1,
            idCaja: @Model.IdCaja,
            idMovimiento: 0
        };

        return model;
    }


    function guardarFormaPago(tipoCategoriaFlujo) {

        var fp = crearModeloFormaPago(tipoCategoriaFlujo);
        formasPago.push(fp);

        $('#pago').val(totalFomasPago());

        borrarMontoFormaPago();
        cargarFormasPago(formasPago);


        calcularBalance();
    }

    function cargarFormasPago(data) {

        $('.filasCargadasFP').remove();
        var pos = 0;
        for (var i = 0; i < data.length; i++) {

            var body =
                '<tr class="filasCargadasFP">'
                + '<th>' + getNombreFormaPago(data[i].idTipoCajaMovimiento) + '</th>'
                + '<td>' + formatCurrencyFP(data[i].montoOriginal, data[i].idMoneda) + '</td>'
                + '<td style="text-align: right">' + formatCurrencyFactura(data[i]) + '</td>'
                + '<td><a onclick="eliminarFP(' + data[i].idCajaMovimiento + ',' + pos + ')" href="#"><i class="fas fa-trash"></i></a></td>'
                + '</tr>';

            $('#lineaTotalesFP').before(body);

            pos++;

        }

    }

    function totalFomasPago() {

        var montoPago = 0;

        for (var i = 0; i < formasPago.length; i++) {
            montoPago += getMontoAlCambio(formasPago[i]);
        }

        $('#formater4').val(montoPago);
        $('#totalFormasPago').text($('#formater4').val());

        return montoPago;
    }

    function eliminarFP(id, pos) {

        formasPago.splice(pos, 1);
        $('#pago').val(totalFomasPago());
        cargarFormasPago(formasPago);

    }


    function getNombreFormaPago(forma) {
        var nombre = "";
        switch (forma) {
            case 1:
                nombre = "@Lb["Efectivo"]";
                break;
            case 2:
                nombre = "@Lb["Tarjeta"]";
                break;
            case 3:
                nombre = "@Lb["Transferencia"]";
                break;
            case 4:
                nombre = "@Lb["Cheque"]";
                break;
            case 5:
                nombre = "@Lb["AplicarSaldo"]";
                break;
            default:
                nombre = "";
        }

        return nombre;
    }

    /////////////////////////fin general///////////////////////

    /////////////////////////formato///////////////////////////
    function setMonedaFormaPago(codigo) {

        var simbolo = "";
        switch (codigo) {
            case 1:
                simbolo = monedas[0].simbolo;
                $('.digito1').prop('hidden', false);
                $('.digito2').prop('hidden', true);
                $('.digito3').prop('hidden', true);
                break;
            case 2:
                simbolo = monedas[1].simbolo;
                $('.digito2').prop('hidden', false);
                $('.digito1').prop('hidden', true);
                $('.digito3').prop('hidden', true);
                break;
            case 3:
                simbolo = monedas[2].simbolo;
                $('.digito3').prop('hidden', false);
                $('.digito2').prop('hidden', true);
                $('.digito1').prop('hidden', true);
                break;
            default:
        }

        borrarMontoFormaPago();

        $(".montoFormaPago").inputmask('currency', {
            prefix: simbolo,
            rightAlign: true,
            min: 0
        });

    }


    function borrarMontoFormaPago() {
        $(".montoFormaPago").val(0);
    }

    function setMonedaGeneral(codigo) {
        setMonedaFormaPago(codigo);

        var simbolo = "";
        switch (codigo) {
            case 1:
                simbolo = monedas[0].simbolo;
                $('.rdMonedaBase').prop('checked', true);
                break;
            case 2:
                simbolo = monedas[1].simbolo;
                $('.rdMonedaDolar').prop('checked', true);
                break;
            case 3:
                simbolo = monedas[2].simbolo;
                $('.rdMonedaEuro').prop('checked', true);
                break;
            default:
        }

        $('.lbMonedaBase').text(monedas[0].nombre);
        $('.lbMonedaDolar').text(monedas[1].nombre);
        $('.lbMonedaEuro').text(monedas[2].nombre);

        $(".formaPagoMoneda").inputmask('currency', {
            prefix: simbolo,
            rightAlign: true,
            min: 0
        });

        $("#balance").inputmask('currency', {
            prefix: simbolo,
            rightAlign: true,
        });

    }


    //////////////////////////////////////////////////////auxiliares/////////////////////////////////////////
    function formatCurrencyFP(value, idMoneda) {
        $('#formater' + idMoneda).val(value);
        return $('#formater' + idMoneda).val();
    }
    function formatCurrencyFactura(data) {

        $('#formater' + @Model.Moneda).val(getMontoAlCambio(data));
        return $('#formater' + @Model.Moneda).val();
    }

    function getMontoAlCambio(data) {
        var monto = 0;


        switch (@Model.Moneda) {
            case 1:
                monto = data.montoBase;
                break;
            case 2:
                monto = data.montoDolar;
                break;
            case 3:
                monto = data.montoEuro;
                break;
            default:
        }

        return monto;
    }

</script>