@model UsuarioViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<style>
    .btn-circle {
        width: 20px;
        height: 20px;
        text-align: center;
        padding: 4px 0;
        font-size: 8px;
        line-height: 1.428571429;
        border-radius: 10px;
    }

    .btn-combined {
        background-image: linear-gradient(to right, black, white);
    }
</style>

<div class="row">
    <div class="col-md-12">

        @if (Model.codigo == User.Identity.Name)
        {
            <h3 data-translate="layoutNAVMicuenta">Mi Cuenta</h3>
        }
        else
        {
            <h3 data-translate="MUCuentaUsuario">Cuenta Usuario</h3>
        }

    </div>
    <div class="col-md-2">
        <h4>Avatar</h4>
        <div class="col-md-12">
            <div style="background-color:#EDEDED; padding: 1rem; text-align:center">
                <img style="height: 15rem; width:15rem" src="@Model.avatar" class="img-circle" />
                <div class="row">
                    <a data-translate="avatar" class="btn btn-link" data-toggle="modal" data-target="#exampleModal">
                        Cargar tu avatar
                    </a>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            @if (Model.codigo == User.Identity.Name)
            {

                <h5 data-translate="tema">Tema: </h5>

                <div class="col-md-12">
                    <span data-translate="MUFuenteM">Fuente M:</span>
                    <button type="button" name="1" value="TemaClaro" class="btn btntema btn-default btn-circle"></button>                  
                    <button type="button" name="3" value="TemaCombinado" class="btn btntema btn-combined btn-circle"></button>
                </div>

                <div class="col-md-12">
                    <span data-translate="MUFuenteG">Fuente G:</span>
                    <button type="button" name="4" value="TemaClaroG" class="btn btntema btn-default btn-circle"></button>
                    <button type="button" name="6" value="TemaCombinadoG" class="btn btntema btn-combined btn-circle"></button>
                </div>


            }
        </div>
    </div>
    <div class="col-md-4">
        <h4 data-translate="datosUsuario">Datos</h4>
        <form asp-controller="ManejoUsuarios" asp-action="EditarUsuario" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" hidden>
                <input asp-for="id" class="form-control" />
            </div>
            <div class="form-group">
                <label data-translate="codigo" asp-for="codigo" class="control-label">Codigo:</label>
                <input asp-for="codigo" id="codigo" class="form-control" />
                <div id="codigoValidation" ></div>
            </div>
            <div class="form-group">
                <label data-translate="nombre" asp-for="nombre" class="control-label">Nombre:</label>
                <input asp-for="nombre" class="form-control" />
                <div id="nombreValidation"></div>
            </div>
            <div class="form-group">
                <label data-translate="estado" asp-for="estado" class="control-label">Estado:</label>
                <select asp-for="estado" class="form-control">
                    <option data-translate="estadoA" value="ACTIVO">ACTIVO</option>
                    <option data-translate="estadoI" value="INACTIVO">INACTIVO</option>
                </select>
                <span asp-validation-for="estado" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label data-translate="iniciales" asp-for="iniciales" class="control-label">Iniciales:</label>
                <input asp-for="iniciales" class="form-control" />
                <div id="inicialesValidation"></div>
            </div>
            <div class="form-group">
                <label asp-for="contrasena" class="control-label">Contraseña: (Una Mayuscula y un caracter especial)</label>
                <input pattern="(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$" title="Es necesario que contenga al menos un número, una mayúsculay un caracter especial" asp-for="contrasena" class="form-control" />
                <div id="passwordValidation"></div>
            </div> 
            <div class="form-group">
                <label class="control-label">Confirmar Contraseña:</label>
                <input asp-for="ConfirmPassowrd" class="form-control" />
                <div id="passwordConfirmValidation"></div>
            </div>
            <div class="form-group">
                <label data-translate="correo" asp-for="correo" class="control-label">Correo:</label>
                <input type="email" asp-for="correo" class="form-control" />
                <div id="correoValidation"></div>
            </div>
            <div class="form-group" hidden>
                <label asp-for="Id_Usuario" class="control-label">Id usuario:</label>
                <input asp-for="Id_Usuario" class="form-control" />
                <span asp-validation-for="Id_Usuario" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" id="btnEditarUsuario" data-translate="guardar" class="btn btn-success"><span>Guardar </span><span><i class="fas fa-save"></i></span></button>
                <a class="btn btn-default btnAtras" >Cancelar</a>
            </div>
        </form>

    </div>
    <div class="col-md-4">
        <h4 data-translate="MUPerfilesAsig">Perfiles Asignados</h4>
        <table class="table table-bordered" id="perfiles">
            <thead>
                <tr>
                    <th>
                        <p data-translate="perfil">Perfil</p>
                    </th>
                    <th>
                        <p data-translate="accion">Acción</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in @ViewData["Asignados"] as IEnumerable<AltivaWebApp.GEDomain.TbSePerfil>)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nombre)
                        </td>
                        <td>
                            @Html.ActionLink("Quitar", "QuitarPerfil", "ManejoUsuarios", new { usuario = Model.id, id = item.Id })
                        </td>

                    </tr>

                }
                <tr>
                    <td>
                        <a class="btn btn-link" data-toggle="modal" data-target="#perfilModal">
                            <span style="font-size:3rem"><i class="fas fa-plus-circle"></i></span>
                        </a>
                    </td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>


</div>

<div class="row">

    

    <div class="col-md-4">

        
    </div>
    <div class="col-md-2">
        
    </div>
    <div class="col-md-6">
        

    </div>
</div>



<div class="row">



    <div id="errorDiv" class="col-md-6 col-sm-12 alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Lo siento!</strong> <span>Algo ha salido mal, no se pudo guardar la configuración</span>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

</div>


<!-- Modal for perfil-->
<div class="modal fade" id="perfilModal" tabindex="-1" role="dialog" aria-labelledby="perfilModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header row">
                <div class="col-md-6">
                    <h4 data-translate="MUAsignarPerfil" class="modal-title" id="perfilModalLabel">Asignar Perfil</h4>
                </div>
                <div class="col-md-6">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div class="modal-body" style="padding-left: 5rem">
                <div class="row">
                    @foreach (var item in @ViewData["SinAsignar"] as IEnumerable<AltivaWebApp.GEDomain.TbSePerfil>)
                    {
                        <div class="col-md-4" style="margin-top: 1rem;">

                            <label>
                                <input value="@item.Id" class="asignar" name="@Model.id" type="checkbox" data-toggle="toggle">
                                @item.Nombre
                            </label>

                        </div>

                    }
                </div>
            </div>
            <div class="modal-footer">
                <button data-translate="cancelar" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button data-translate="guardar" type="button" id="guardar" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal for avatar-->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="row modal-header">
                <div class="col-md-6"><h4 data-translate="avatar" class="modal-title" id="exampleModalLabel">Cargar mi Avatar</h4></div>
                <div class="col-md-6">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>

            <div class="modal-body" style="padding-left: 5rem">
                @await Component.InvokeAsync("Avatar", Model)
            </div>
        </div>
    </div>
</div>

<hr />

<div id="comentarios">

</div>




<script type="text/javascript">
    //validaciones de campos editar usuario
    $('#btnEditarUsuario').on('click', function () {
        if ($('#codigo').val() == "") {
           
            $('#codigoValidation').empty();
            $('#codigoValidation').append('<span class="text-danger">Código es requerido.</span>');

            return false;
        }

        if ($('#nombre').val() == "") {
            $('#nombreValidation').empty();
            $('#nombreValidation').append('<span class="text-danger">Nombre es requerido.</span>');

            return false;
        }
        if ($('#iniciales').val() == "") {
            $('#inicialesValidation').empty();
            $('#inicialesValidation').append('<span class="text-danger">Iniciales es requerido.</span>');

            return false;
        }
        if ($('#contrasena').val() == "") {
            $('#passwordValidation').empty();
            $('#passwordValidation').append('<span class="text-danger">Contraseña es requerido.</span>');

            return false;
        }
        if ($('#ConfirmPassowrd').val() == "") {
            $('#passwordConfirmValidation').empty();
            $('#passwordConfirmValidation').append('<span class="text-danger">Confirmar contraseña es requerido.</span>');

            return false;
        } if ($('#correo').val() == "") {
            $('#correoValidation').empty();
            $('#correoValidation').append('<span class="text-danger">El correo es requerido.</span>');

            return false;
        }
        if ($('#contrasena').val() != $('#ConfirmPassowrd').val()) {
            $('#passwordConfirmValidation').empty();
            $('#passwordConfirmValidation').append('<span class="text-danger">Las contraseñas no coinciden.</span>');
            $('#passwordValidation').empty();
            $('#passwordValidation').append('<span class="text-danger">Las contraseñas no coinciden.</span>');

            return false;
        }
        

    });
    function validarPassword(email) {
        var i = '(?=^.{ 8, } $) ((?=.*\d)| (?=.*\W +)) (? ![.\n])(?=.* [A - Z])(?=.* [a - z]).* $';
        if (!i.test(email)) {
            return false;
        } else {
            return true;
        }
    }
    $(document).ready(function () {

        GetComentarios('Usuario', @Model.id);

        $('.btntema').on('click', function () {
            $("#tema").attr('href', '/../css/' + $(this).val() + '.css');
            localStorage.setItem('tema', $(this).val());


            var tema = $(this).attr('name');

            /////ajax para guradar el tema en la bd//////
            var userId = @Model.id;

            var config = {
                idUsuario: userId,
                tema: localStorage.getItem('tema'),
                idioma: localStorage.getItem('idioma')
            };

            $.ajax({
                type: "POST",
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                url: '@Url.Action("CambiarConfig", "ManejoUsuarios")',
                data: config,
                success: function (data) {
                    console.log(data.data);

                },
                    error: function (err, scnd) {
                        console.log(err.statusText);
                        $('#errorDiv').attr('hidden', false);
                }
            });

        });


                    ///al cambiar avatar se cambia en el layout

        if ("@User.Identity.Name" === "@Model.codigo" ) {
            localStorage.setItem("avatar", "@Model.avatar");
            $("#perfilNAVAvatar").attr('src', localStorage.getItem("avatar"));
            $("#perfilAvatar").attr('src', localStorage.getItem("avatar"));
        }


        //metodo para asignar perfiles al usuario

        var arrayModel = [];


        $(".asignar").change(function () {

            if ($(this).is(":checked")) {
                var model = {
                    idPerfil: $(this).val(),
                    idUsuario: $(this).attr("name")
                };
                arrayModel.push(model);
            }
            else {

                var model = {
                    idPerfil: $(this).val(),
                    idUsuario: $(this).attr("name")
                };

                arrayModel.splice($.inArray(model, arrayModel), 1);
            }
            console.log(arrayModel);
        });



        $('#guardar').click(function () {
            console.log(arrayModel);

            var url = '@Url.Action("AsignarPerfil", "ManejoUsuarios")';

            $.ajax({
                type: "POST",
                headers: {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                url: url,
                data: {model: arrayModel },
                    success: function (data) {
                        //console.log($(this).parent());
                        window.location.href = window.location.href;
                },
                    error: function (err, scnd) {
                        console.log(err.statusText);
                }
            });
        });
    });
</script>





