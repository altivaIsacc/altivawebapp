@model IEnumerable<AltivaWebApp.Domains.TbBaFlujoCategoria>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@inject IStringLocalizer<SharedResources> SL

@{

    var usuarios = ViewData["usuarios"] as IList<TbSeUsuario>;

    ViewData["Title"] = @SL["CategoriaDeFlujo"];
}


<div class="row">
    <!--  SL = Cambiar POR SL -->
    <div class="col-md-4">
        <h3>@SL["CategoriaDeFlujo"]</h3>
    </div>
    <div class="col-md-4" style="margin-left:1rem; padding-top:0.7rem">
        <p>
            <a asp-action="CrearCategoria" class="btn btn-primary"><span data-translate="agregar">@SL["Agregar"]</span>&nbsp;<i class="fas fa-plus-circle"></i></a>
        </p>
    </div>

</div>

<!-- Botones -->
<div class="row">

    <div class="col-md-2" style="margin-top: 0.2rem">
        <label>@SL["buscarPorCodigo"]:</label>
        <input type="text" maxlength="50" id="filtroBuscar" class="form-control" placeholder="@SL["buscarPorCodigo"]" autofocus="autofocus" />
    </div>


    <div class="col-md-2" style="margin-top: 0.2rem">
        <label>@SL["Tipo"]:</label>
        <select id="filtroTipo" class="form-control search-key selectFiltro">
            <option value="0" selected>@SL["todos"]</option>
            <option value="Bancario" selected>@SL["bancario"]</option>
            <option value="Canje" selected>@SL["canje"]</option>
            <option value="Efectivo" selected>@SL["Efectivo"]</option>


        </select>
    </div>



    <div class="col-md-7 checkbox">
        <label class="control-label">
            <input type="checkbox" id="estado"> @SL["inactivos"]
        </label>
    </div>

</div>
<br>



<div class="row">

    <div class="col-md-12 table-responsive">
        <table class=" table table-bordered" style="width:100%" id="tblFlujoCategoria">
            <thead>


                <tr>
                    <th>
                        <span>@SL["Id"]</span>
                    </th>
                    <th>
                        <span>@SL["tipo"]</span>
                    </th>
                    <th>
                        <span>@SL["Nombre"]</span>
                    </th>
                    <th>
                        <span>@SL["Código"]</span>
                    </th>
                    <th hidden>

                    </th>
                    <th>
                        <span>@SL["Estado"]</span>
                    </th>
                    <th><span>@SL["accion"]</span></th>
                </tr>

            </thead>
            <tbody></tbody>
        </table>

    </div>

</div>



<style>
    .dataTables_wrapper .dataTables_filter {
        float: right;
        text-align: right;
        visibility: hidden;
    }
</style>




<script>
    var FlujoCategoria = [];//se esta utilizando cambiar
    var FlujoCategoriaFiltrado = [];
    var tblFlujoCategoria;
    var hasta;
    var desde;


    $(document).ready(function () {

        getFlujoCategoria(); //lleno la tabla

        $('.selectFiltro').val(0);
        $('.selectFiltro').change(function () {
            var tipo = $('#filtroTipo').val();
            console.log(tipo);

            if (tipo == 0) {

                tblFlujoCategoria
                    .columns(1)
                    .search('')
                    .draw();

            } else if (tipo == 'Bancario') {

                tblFlujoCategoria
                    .columns(1)
                    .search(tipo)
                    .draw();

            } else if (tipo == 'Canje') {

                tblFlujoCategoria
                    .columns(1)
                    .search(tipo)
                    .draw();

            } else if (tipo == 'Efectivo') {

                tblFlujoCategoria
                    .columns(1)
                    .search(tipo)
                    .draw();

            }

        });

    });



    function getFlujoCategoria() {

        $.ajax({
            type: "get",
            headers: {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetCategoria", "FlujoCategoria")',
            success: function (data) {
                //console.log(data);
                FlujoCategoria = JSON.parse(JSON.stringify(data));
                cargarDatos(data);
                validarLista();
              

            },
            error: function (err, scnd) {
                cargarAlert('@SL["errorGeneral"]');
                console.log(err.statusText);
            }
        });
    }

     function cargarDatos(data) {

         var estado = "";
         var contadorFila = 0;
         var idTipoFlujo = 0;
         var respTipoFlujo = "";

        $("#tblFlujoCategoria > tbody").remove();
        $('#tblFlujoCategoria').append('<tbody></tbody>');

         for (var i = 0; i < data.length; i++) {

             idTipoFlujo = data[i].idTipoFlujo;//captura el idTipoFlujo proveniente de la BD
             respTipoFlujo = obtenerTipoFlujo(idTipoFlujo); // se envia al metodo


            if (data[i].estado == 1)
                estado = '@SL["Activo"]';


             else
                estado = '@SL["Inactivo"]';



                var body = '<tr class="fila' + contadorFila + ' filas">'
                    + '<td><p style="padding-top:1rem">' + data[i].idCategoriaFlujo + '</p></td>'
                    + '<td><p style="padding-top:1rem">' + respTipoFlujo + '</p></td>'
                    + '<td><p style="padding-top:1rem">' + data[i].nombre + '</p></td>'
                    + '<td><p style="padding-top:1rem">' + data[i].codigo + '</p></td>'
                    + '<td hidden><p style="padding-top:1rem">' + data[i].estado + '</p></td>'
                    + '<td><p style="padding-top:1rem">' + estado + '</p></td>'
                    + '<td>  <button value="' + data[i].idCategoriaFlujo + '" onclick="editarCategoria(value)" class="btn btn-link btnEditar"><i class="fas fa-edit"></i></button>';
                $('#tblFlujoCategoria > tbody').append(body);
                contadorFila++;

        }

       inicializarTabla();

    }


    function obtenerTipoFlujo(idTipoFlujo) {

        var respTipoF = "";

        if (idTipoFlujo == 1) {

            respTipoF = '@SL["Bancario"]';
            return respTipoF;

        } else if (idTipoFlujo == 2) {

            respTipoF = '@SL["Efectivo"]';
            return respTipoF;

        } else {

            respTipoF = '@SL["Canje"]';
            return respTipoF;

        }

    }


    function inicializarTabla() {

        $('#tblFlujoCategoria').DataTable().destroy();


        tblFlujoCategoria = $('#tblFlujoCategoria').DataTable({
            "info": false,
            "order": [[0, "desc"]],
           // dom: 'Bfrtip',
            language: {
                "decimal": "",
                "emptyTable": "@SL["NoDatos"]",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "@SL["Mostrar"] _MENU_ @SL["Entradas"]",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "<i class='fas fa-search'></i>",
                "zeroRecords": "@SL["sinResultados"]",
                "paginate": {
                    "first": "@SL["Primero"]",
                    "last": "@SL["Último"]",
                    "next": "@SL["Sguiente"]",
                    "previous": "@SL["Anterior"]"
                }
            },
        });

        $(".dataTables_searching").hide();
           

    }



           function validarLista(){       
               
              var paso =0;
               var codigoEncontrado = "";
                var estadoFiltro = "";
                 var estadoEncontrado = 0;

              if (@ViewBag.id == 0) {

                 // alert('Listar normal');
                  filtroInactivoId(1);
                                                             
               }else{

                   
                    var url = "@Url.Action("ListarCategorias", "FlujoCategoria")";
                    var regex = new RegExp('/[^/]*$');
                    history.pushState(null, "", url.replace(regex, '/'));
                            
                           //alert("Buscar el codigo y estado del registro editado");
                           codigoEncontrado = buscarCodigoRegistro(@ViewBag.id); 
                           estadoEncontrado = buscarEstadoRegistro(@ViewBag.id);   
                          // alert(codigoEncontrado);
                          // alert(estadoEncontrado);
                          // alert('Proceda a listar');

                              if (estadoEncontrado == 1) {

                                  filtroInactivoId(1);
                                  $("#filtroBuscar").val(codigoEncontrado.replace(/ /g, ""));// lleno el buscador
                                  buscarPorCodigo($("#filtroBuscar").val()); 
                                  
                              } else {

                                  filtroInactivoId(0);
                                  $("#estado").prop("checked", true);
                                  $("#filtroBuscar").val(codigoEncontrado.replace(/ /g, ""));// lleno el buscador
                                  buscarPorCodigo($("#filtroBuscar").val()); 
                                
                                 
                              }

               }
   
            }

    
        


        $("#filtroBuscar").on("keyup", function () {
            buscarPorCodigo(this.value)
        });




        function buscarPorCodigo(codigo) {
            tblFlujoCategoria
                .columns(3)
                .search(codigo)
                .draw();
        }





        $("#estado").change("checked", function () {

            if ($('#estado').prop('checked')) {

                filtroInactivoId(0);

            } else {

                filtroInactivoId(1);
            }

    });





    function filtroInactivoId(val) {
       
            tblFlujoCategoria
            .columns(4)
            .search(val)
            .draw();
        }


    function prueba(val) {
        //alert("entro");
        //alert(val);
        tblFlujoCategoria
            .columns(4)
            .search(val)
            .draw();
    } 



        function validarEstado() {

            var array = FlujoCategoria;

            for (var i = 0; i < array.length; i++) {

                if (array[i].idCategoriaFlujo == @ViewBag.id) {

                    if (array[i].estado == 0) {
                        filtroInactivo(0);
                    }
                    else {

                        filtroInactivo(1);

                    }

                    break;

                } 
            }
        }

        function buscarCodigoRegistro(id) {

            var array = FlujoCategoria;
            var codEncontrado = "";

            for (var i = 0; i < array.length; i++) {

                if (array[i].idCategoriaFlujo == id) {

                    codEncontrado = array[i].codigo;
                    return codEncontrado;
                }
            }
        }

        function buscarEstadoRegistro(id) {

            var array = FlujoCategoria;
            var estEncontrado = "";

            for (var i = 0; i < array.length; i++) {

                if (array[i].idCategoriaFlujo == id) {

                    estEncontrado = array[i].estado;
                    return estEncontrado;
                }
            }
       }


     


        function filtroInactivo() {

        var array = FlujoCategoria;

        var arrayFlujoCate = [];//JSON.parse(JSON.stringify(ordenFiltrado));

        if ($('#estado').prop('checked')) {

            for (var i = 0; i < array.length; i++) {
                if (!array[i].estado)
                    arrayFlujoCate.push(array[i]);
            }
        }
        else
            for (var i = 0; i < array.length; i++) {
                if (array[i].estado)
                    arrayFlujoCate.push(array[i]);
            }
        cargarDatos(arrayFlujoCate);
        }




    function editarCategoria(id) {

          var url = '@Url.Action("EditarCategoria", "FlujoCategoria", new { id = "__id__" })';

        window.location.href = url.replace("__id__", id);

    }
























</script>

