@model AltivaWebApp.ViewModels.PrecioCatalogoViewModel
@inject IStringLocalizer<SharedResources> SharedLocalizer
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<div class="row">
    <div class="col-md-3"><h3>@SharedLocalizer["PrecioCatalogo"]</h3></div>

</div>
<hr />

<div class="row">
    <div class="col-md-12"><label>@SharedLocalizer["TiposPrecio"]:</label></div>
    <div class="col-md-2">
        <select id="precios"  class="form-control search-key">
    
        </select>
    </div>
    <div class="col-md-6">
        <button class="btn btn-primary" id="cambiarU"><span>@SharedLocalizer["cambiarUtilidad"]</span></button>


    </div>
</div>
<hr />
<div class="table-responsive" id="marcados">
    <table class="table table-bordered" id="tblCatalogo" style="width:100%">
        <thead>
            <tr>
                <th hidden>
                    <span>Id</span>
                </th>
                <th style="width:5%">
                    <span>@SharedLocalizer["Eligir"] </span>
                </th>
                <th style="width:10%">
                    <span>@SharedLocalizer["Producto"]</span>
                </th>
                <th style="width:3%">
                    <span>@SharedLocalizer["Presentación"]</span>
                </th>
                <th style="width:20%">
                    <span>@SharedLocalizer["CostoPromedio"]</span>
                </th>
                <th style="width:15%">
                    <span>@SharedLocalizer["UtilidadDeseada"]</span>
                </th>
                <th style="width:1%">
                    <span>@SharedLocalizer["Impuesto"]</span>
                </th>
                <th style="width:15%">
                    <span>@SharedLocalizer["Precio sin impuesto"]</span>
                </th>
                <th style="width:15%">
                    <span>@SharedLocalizer["Precio con impuesto"]</span>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr class="lineaForm"></tr>
        </tbody>
    </table>



</div>

<div class="row">

    <div class="col-md-2">
        <input type="checkbox" id="marcar" /><span>Marcar/ Desmarcar todos</span>
        
    </div>

    <div class="col-md-2 col-sm-4 col-xs-4" style="padding-top:0.4rem">
        <label for="filtroFamilia">@SharedLocalizer["Familia"]:</label>
        <select id="filtroFamilia" class="form-control search-key selectFiltro">
            <option value="0" selected>Todos</option>
        </select>
    </div>
    <div class="col-md-2 col-sm-4 col-xs-4" style="padding-top:0.4rem">
        <label for="filtroSubFamilias">@SharedLocalizer["Sub-Familia"]:</label>
        <select id="filtroSubFamilias" class="form-control search-key selectFiltro">
            <option id="seleccione" value="0" selected>@SharedLocalizer["Todos"]</option>
        </select>
    </div>
</div>

<br />
<div class="row">
    <div class="form-group col-md-12">
        <button id="btnGuardar" class="btn btn-success"><span>@SharedLocalizer["Guardar"]</span> <span><i class="fas fa-save"></i></span></button>
        <a class="btn btn-default" id="btnCancelar" data-translate="cancelar">@SharedLocalizer["Cancelar"]</a>
    </div>
</div>
<div>
    <!-- Modal Editar -->
    <div class="modal fade" id="modalCambiarU" aria-labelledby="bodegaIventarioLabel" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="col-md-6"> <h5 data-translate="editarOrden" class="modal-title" id="bodegaIventarioLabel">@SharedLocalizer["PrecioCatalogo"]</h5></div>
                </div>
                <div class="modal-body" id="editar">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <div class="row">
                        
                        <div class="form-group col-sm-7">
                            <label class="control-label">@SharedLocalizer["Utilidad deseada"]</label>
                            <input id="editUtilidad" class="form-control numerico" />
                        </div>
                       
                        <div class="form-group col-sm-7">

                            <button id="btnEditOrden" onclick="cambiarUtilidad()" class="btn btn-success"><span>@SharedLocalizer["Guardar"] </span><span><i class="fas fa-save"></i></span></button>

                            <button class="btn btn-default" data-dismiss="modal"><span>@SharedLocalizer["Cancelar"]</span></button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    var lineas = [];
    var lineasFInventario = [];
    var lineasFPrecio = [];
    var inventario = [];
    var precios = [];
    $(document).ready(function () {
        getInventario();
        getFamilias();

    

    });
    ///Eventos directos///
    
     $("#precioConImpuesto").on("input", function(){
         alert($("#id").val());
    });
       $('#precios').change(function () {

           
           filtrarTipoPrecio();
     });
     $('.selectFiltro').change(function () {

         filtrarTodo();
     });
    
    $("#marcar").change(function () {
        if ($(this).is(':checked')) {
            $("#marcados input[type=checkbox]").prop('checked', true);
            for (var i = 0; i < lineasFPrecio.length; i++) {
                lineasFPrecio[i].marcador = true;
            }
        }
        else {
            $("#marcados input[type=checkbox]").prop('checked', false);
            for (var i = 0; i < lineasFPrecio.length; i++) {
                lineasFPrecio[i].marcador = false;
            }
        }
          
    });

    $('#cambiarU').click(function () {
         $('#modalCambiarU').modal('show');
    });

     $('#filtroFamilia').change(function () {

            setFiltroSubFamilia($(this).val());


            if ($(this).val() === 0)
                $('#filtroSubFamilias').attr('disabled', true);
            else
                $('#filtroSubFamilias').attr('disabled', false);
        });
    
    ///Ajax///
    function getFamilias() {
          var url = '@Url.Action("GetFamilia", "Inventario")';
        $.ajax({
            type: "get",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            url: url,
            success: function (data) {

                familias = data;

                for (var i = 0; i < data.length; i++) {
                    var o = new Option(data[i].descripcion, data[i].id);
                    $("#filtroFamilia").append(o);
                }



            },
            error: function (err, scnd) {
                 cargarAlert("@SharedLocalizer["errorGeneral"]");
            }
        });
    }
   
    function getPrecioCatalogo() {
          $.ajax({
              type: "get",
              dataType: "json",
            url: '@Url.Action("GetPrecioCatalogo")',

              success: function (data) {

                  cargarLineas(data);
                 
               },
            error: function (err, scnd) {
               cargarAlert('@SharedLocalizer["errorGeneral"]');
            }
        });
    }
     function getPrecios() {
          $.ajax({
              type: "get",
              dataType: "json",
            url: '@Url.Action("GetPrecios", "Precios")',

              success: function (data) {
                  precios = data;
                  for (var i = 0; i < data.length; i++) {
                      var o = new Option(data[i].nombre, data[i].id);
                      $("#precios").append(o);
                  }
               },
            error: function (err, scnd) {
               cargarAlert('@SharedLocalizer["errorGeneral"]');
            }
        });
    }
      function getInventario() {
          $.ajax({
              type: "get",
               headers: {
                  "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
              },
              dataType: "json",
            url: '@Url.Action("GetAllInventario", "Inventario")',

              success: function (data) {
                  inventario = data;
                   getPrecios();
                   getPrecioCatalogo();

               },
            error: function (err, scnd) {
               cargarAlert('@SharedLocalizer["errorGeneral"]');
            }
        });
        }
    ///helpers///
    function cambiarUtilidad()
    {
         for (var i = 0; i < lineasFPrecio.length; i++) {
             if (lineasFPrecio[i].marcador == true)
             {
                 lineasFPrecio[i].porcUtilidad = parseFloat($('#editUtilidad').val());
                 calcular(i, 1, lineasFPrecio[i].porcUtilidad);
                 lineasFPrecio[i].marcador = false;
             }
        }
     $("#marcar").prop('checked', false);
$('#modalCambiarU').modal('hide');
    }
    function filtrarTipoPrecio() {
        
        lineasFPrecio = [];
        var idTipoPrecio = parseInt($('#precios').val());
       
        for (var j = 0; j < lineas.length; j++) {
                
                if (lineas[j].idTipoPrecio == idTipoPrecio) {
                  
                    lineasFPrecio.push(lineas[j]);
                }
                    
        }
        cargarTabla(lineasFPrecio);
        
       

    }
    function filtrarTodo() {
                var lineasFiltradas = [];

        cargarFiltros();
         if (lineasFInventario.length != 0) {
            for (var i = 0; i < lineasFInventario.length; i++) {
                for (var j = 0; j < lineasFPrecio.length; j++) {
                    if (lineasFInventario[i].idInventario == lineasFPrecio[j].idInventario) {
                        lineasFiltradas.push(lineasFPrecio[j]);
                    }

                }
            }
            cargarTabla(lineasFiltradas);
        }
        else if (parseInt($("#filtroFamilia").val()) === 0) {
            cargarTabla(lineasFPrecio);
        }

    }
   
     function cargarFiltros() {
     
        lineasFInventario = JSON.parse(JSON.stringify(inventario));
        lineasFInventario = filtroFamilia(lineasFInventario);
         lineasFInventario = filtroSubFamilia(lineasFInventario);
         
        

       
    }
    function filtroFamilia(lineasFInventario) {

        //console.log(lineasFInventario);

        var inventarioFiltrado = [];
        var idFamilia = parseInt($('#filtroFamilia').val());

        if (idFamilia === 0) {
            return lineasFInventario;
        }
        else {

            for (var j = 0; j < familias.length; j++) {
                if (familias[j].id == idFamilia)
                    subF = familias[j].inverseIdFamiliaNavigation;
            }

            for (var i = 0; i < lineasFInventario.length; i++) {
                for (var j = 0; j < subF.length; j++) {
                    if (lineasFInventario[i].idSubFamilia == subF[j].id) {
                        inventarioFiltrado.push(lineasFInventario[i]);
                    }
                }
            }

            //console.log(inventarioFiltrado);

            return inventarioFiltrado;

        }



    }
    function filtroSubFamilia(lineasFInventario) {

        var inventarioFiltrado = [];
        var subF = {};
        var idSubFamilia = parseInt($('#filtroSubFamilias').val());

        if (idSubFamilia === 0) {
            return lineasFInventario;
        }
        else {

            for (var j = 0; j < familias.length; j++) {
                for (var i = 0; i < familias[j].inverseIdFamiliaNavigation.length; i++) {
                    if (familias[j].inverseIdFamiliaNavigation[i].id == idSubFamilia)
                        subF = familias[j].inverseIdFamiliaNavigation[i];
                }

            }
            //console.log(subF);

            for (var i = 0; i < lineasFInventario.length; i++) {
                if (lineasFInventario[i].idSubFamilia == subF.id)
                    inventarioFiltrado.push(lineasFInventario[i]);
            }

            return inventarioFiltrado;

        }

    }
    function setFiltroSubFamilia(id) {


            $('#filtroSubFamilias option').remove();

            var opt = new Option("Todos", 0);
            $(opt).attr('selected', true);


            $("#filtroSubFamilias").append(opt);

            for (var i = 0; i < familias.length; i++) {
                subFamilia = familias[i].inverseIdFamiliaNavigation;
                if (familias[i].id === parseInt(id)) {
                    for (var j = 0; j < subFamilia.length; j++) {
                        var o = new Option(subFamilia[j].descripcion, subFamilia[j].id);
                        $("#filtroSubFamilias").append(o);
                    }

                }
            }


    }
    function getItemProd(id) {
        for (var i = 0; i < inventario.length; i++) {
            if (inventario[i].idInventario == parseInt(id)) {
                 return inventario[i].descripcion;
            }
        }
    }
    function getItemPres(id) {
        for (var i = 0; i < inventario.length; i++) {
            if (inventario[i].idInventario == parseInt(id))
               return inventario[i].idUnidadMedidaNavigation.abreviatura;



        }
    }
    function getItemCosto(id) {
        for (var i = 0; i < inventario.length; i++) {
            if (inventario[i].idInventario == parseInt(id))
                return inventario[i].costoPromedioGeneral;
        }
    }
    function getItemImp(id) {
        for (var i = 0; i < inventario.length; i++) {
            if (inventario[i].idInventario == parseInt(id)) {
                return inventario[i].impuestoVenta;
            }
        }
    }
    function cargarLineas(data) {


          for (var i = 0; i < data.length; i++) {
              var model = {
                  marcador: false,
                  producto: getItemProd(data[i].idInventario),
                  presentacion: getItemPres(data[i].idInventario),
                  costo: getItemCosto(data[i].idInventario),
                  impuesto: getItemImp(data[i].idInventario),
                  idPrecioCatalogo: data[i].idPrecioCatalogo,
                  idInventario: data[i].idInventario,
                  idTipoPrecio: data[i].idTipoPrecio,
                  porcUtilidad: data[i].porcUtilidad,
                  precioSinImpuesto: data[i].precioSinImpuesto,
                  precioFinal : data[i].precioFinal

            };
              lineas.push(model);
              
        }
        
        filtrarTipoPrecio();
    }


    
    function cargarTabla(data) {
        $('.filasCargadas').remove();

        contadorFila = 0;

        for (var i = 0; i < data.length; i++) {

            var body = '<tr class="filasCargadas" id="fila' + contadorFila + '"><td style="padding-top:2rem;"> <input type="checkbox" onchange="marcar('+contadorFila+')"  class="case" value="' + data[i].idPrecioCatalogo + '" /></td>'
                + '<td style="padding-top:2rem;"><input readonly style="border:0; background-color : #F7F7F7" value="' + data[i].producto + '"/></td>'
                + '<td style="padding-top:2rem;"><input readonly style="border:0; background-color : #F7F7F7" value="' + data[i].presentacion + '"/></td>'
                + '<td style="padding-top:2rem;">' + data[i].costo + ' </td>'
                + '<td style="padding-top:2rem; width:12rem;"><input id="utilidad" onchange="calcular('+contadorFila+','+1+', value)"   style="border:0; background-color : #F7F7F7" class="currency" value="' + data[i].porcUtilidad + '"/></td>'
                + '<td style="padding-top:2rem; width:12rem;"><input id="impuesto"  style="border:0; background-color : #F7F7F7" class="currency" value="' + data[i].impuesto+ '"/></td>'
                + '<td style="padding-top:2rem; width:12rem;"><input id="precioSinImpuesto" onchange="calcular('+contadorFila+','+2+', value)" style="border:0; background-color : #F7F7F7"  value="' + data[i].precioSinImpuesto + '"/></td>'
                + '<td hidden style="padding-top:2rem; width:12rem;"><input id="id" style="border:0; background-color : #F7F7F7"  value="' + data[i].idPrecioCatalogo + '"/></td>'
                + '<td style="padding-top:2rem; "><input id="precioConImpuesto" onchange="calcular('+contadorFila+','+3+',value)" style="width:6rem; border:0; background-color : #F7F7F7"  value="' + data[i].precioFinal + '"/></td></tr>';

            $('.lineaForm').before(body);


            contadorFila++;


        }
      
    }
    function marcar(pos) {
        if (lineasFPrecio[pos].marcador == true)
            lineasFPrecio[pos].marcador = false;
        else
            lineasFPrecio[pos].marcador = true; 
    }
    function calcular(pos, numero, valor)
    {
        if (numero == 3)
        {   lineasFPrecio[pos].precioFinal = parseFloat(valor);
            lineasFPrecio[pos].precioSinImpuesto = calcularSinImpuesto(pos);
            lineasFPrecio[pos].porcUtilidad = calcularUtilidad(pos);
             
           
        }
         if (numero == 2)
         {
             lineasFPrecio[pos].precioSinImpuesto = valor;
              lineasFPrecio[pos].precioFinal = calcularConImpuesto(pos);
              lineasFPrecio[pos].porcUtilidad = calcularUtilidad(pos);
        }
          if (numero == 1)
          {
                 lineasFPrecio[pos].porcUtilidad = valor;
            lineasFPrecio[pos].precioSinImpuesto = calcularSinImpuesto(pos);
            lineasFPrecio[pos].precioFinal = calcularConImpuesto(pos);
        }
        cargarTabla(lineasFPrecio);
    }

    function calcularSinImpuesto(pos)
    {
        var resultado = 0;
        var utilidad = 0;
        if (parseFloat(lineasFPrecio[pos].porcUtilidad) == 0)
            utilidad = calcularUtilidad(pos);
        else
            utilidad = parseFloat(lineasFPrecio[pos].porcUtilidad); 
       

        resultado = parseFloat(lineasFPrecio[pos].costo) * (1 + (utilidad / 100));
        return resultado;
    }

    function calcularImpuesto(pos)
    {
        var resultado = 0;
        var sinimpuesto = 0;
        if (parseFloat(lineasFPrecio[pos].precioSinImpuesto) == 0)
            sinimpuesto = calcularSinImpuesto(pos);
        else
            sinimpuesto = parseFloat(lineasFPrecio[pos].precioSinImpuesto); 

        resultado = sinimpuesto * ((parseFloat(lineasFPrecio[pos].impuesto) / 100));
        return resultado;

    }
    function calcularConImpuesto(pos)
    {
         
        var sinimpuesto = 0;
        if (parseFloat(lineasFPrecio[pos].precioSinImpuesto) == 0)
            sinimpuesto = calcularSinImpuesto(pos);
        else
            sinimpuesto = parseFloat(lineasFPrecio[pos].precioSinImpuesto); 

        return sinimpuesto + calcularImpuesto(pos);
        

    }

    function calcularUtilidad(pos)
    {
        var sinimpuesto;
        if (parseFloat(lineasFPrecio[pos].precioSinImpuesto) == 0)
            sinimpuesto = calcularSinImpuesto(pos);
        else
            sinimpuesto = parseFloat(lineasFPrecio[pos].precioSinImpuesto);

        return ((parseFloat(lineasFPrecio[pos].costo) / sinimpuesto) - 1) * 100;

    }





</script>

<style>
    .dataTables_wrapper .dataTables_filter {
        float: right;
        text-align: right;
        visibility: hidden;
    }
</style>
