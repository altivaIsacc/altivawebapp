@model IEnumerable<AltivaWebApp.DomainsConta.Asiento>
@inject IStringLocalizer<SharedResources> lb
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<!DOCTYPE html>

<html>
<head>
    @{
        ViewData["Title"] = ViewBag.Titulo;

    }
</head>
<body>
    <div class="row">
        <div class="col-md-2"><h3>@lb["Asientos"]</h3></div>
        <div class="col-md-10" style="padding-top: 0.5rem">
            <a class="btn btn-primary" asp-action="nItem"><span>@lb["Agregar"]</span>&nbsp;<i class="fas fa-plus-circle"></i></a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["Periodo"]:</label>
            <input id="LtPeriodos" list="LtPeriodoTrabajo" class="form-control" autocomplete=on onchange="buscar()">
            <datalist id="LtPeriodoTrabajo">
                @{
                    foreach (var item in ViewBag.Periodos)
                    {
                        <option value="@item.Nombre">@item.FechaInicio.ToString("yyyy/MM/dd") | @item.FechaFinal.ToString("yyyy/MM/dd") </option>

                    }

                }

            </datalist>
        </div>
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["Tipo"]:</label>
            <input id="LtTipos" list="LtTipoDoc" class="form-control" autocomplete=on onchange="buscar()">
            <datalist id="LtTipoDoc">
                @{
                    foreach (var item in ViewBag.Tipos)
                    {
                        <option>@lb[item.Descripcion]</option>
                    }
                }
            </datalist>
        </div>
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["Codigo"]:</label>
            <input type="search" id="filtroBuscarNombre" class="form-control" placeholder="@lb["Codigo"]">
        </div>
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["Estado"]:</label>
            <input id="LtEstados" list="LtEstado" class="form-control" autocomplete=on onchange="buscar()">
            <datalist id="LtEstado">
                <option value="@lb["ACTIVO"]">@lb["ACTIVO"]</option>
                <option value="@lb["BLOQUEADO"]">@lb["BLOQUEADO"]</option>
                <option value="@lb["ANULADO"]">@lb["ANULADO"]</option>
            </datalist>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12" style="margin-top: 0.2rem">           
                <label class="control-label">
                    <input id="chEntreFechas" type="checkbox" value="false" onchange="buscar()">@lb["EntreFechas"]:
                </label>
                <form id="frmFecha" class="form-horizontal">
                    <fieldset>
                        <div class="control-group">
                            <div class="controls">
                                <div class="input-prepend input-group">
                                    <span class="add-on input-group-addon"><i class="fas fa-calendar"></i></span>
                                    <input type="text" style="width: 250px" name="filtroFecha" id="filtroFecha" class="form-control" value="@ViewBag.FechaDesde - @ViewBag.FechaHasta" />
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </form>       

        </div>
        <div class="col-md-4 col-sm-4 col-xs-12" style="margin-top:0.2rem">
            <label class="control-label">
                <input type="checkbox" id="estado" onchange="filtroAnuladas()"> @lb["VerAnulados"]
            </label>
        </div>
        </div>
        <div class="row">
            <div class="col-md-6 col-xs-12 table-responsive">
                <table class="table table-bordered" id="tblAsiento">
                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Fecha)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Codigo)
                            </th>
                            <th>
                                @lb["Acción"]
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
</body>
</html>

<script>

    var asientos = [];

    $(document).ready(function () {
        getAsientos(1);

          $('#filtroFecha').attr('disabled', false);

        $('#filtroFecha').daterangepicker({
            opens: 'left',

            "locale": {
                format: "@lb["DD/MM/YYYY"]",
                "separator": " - ",
                "applyLabel": "@lb["Aplicar"]",
                "cancelLabel": "@lb["Cancelar"]",
                "fromLabel": "@lb["DE"]",
                "toLabel": "@lb["Hasta"]",
                "customRangeLabel": "Custom",
                "daysOfWeek": [
                    "@lb["Dom"]",
                    "@lb["Lun"]",
                    "@lb["Mar"]",
                    "@lb["Mie"]",
                    "@lb["Jue"]",
                    "@lb["Vie"]",
                    "@lb["Sáb"]"
                ],
                "monthNames": [
                    "@lb["Enero"]",
                    "@lb["Febrero"]",
                    "@lb["Marzo"]",
                    "@lb["Abril"]",
                    "@lb["Mayo"]",
                    "@lb["Junio"]",
                    "@lb["Julio"]",
                    "@lb["Agosto"]",
                    "@lb["Septiembre"]",
                    "@lb["Octubre"]",
                    "@lb["Noviembre"]",
                    "@lb["Diciembre"]"
                ],
                "firstDay": 1
            }
        },

            function (start, end, label) {

                desde = start.format('YYYY-MM-DD');
                hasta = end.format('YYYY-MM-DD');
                cargarFiltros();
                //filtroFecha(start.format('YYYY-MM-DD'), end.format('YYYY-MM-DD'));

            });



    });
    function getAsientos(pos) {

        $.ajax({
            type: "get",
            headers: {"RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetAsientosWithReqs", "ContaAsiento")',
            success: function (data) {

                console.log(data);
                asientos = data;
                filtroAnuladas();

            },
            error: function (err, scnd) {
                cargarAlert('@lb["errorGeneral"]');
                console.log(err.statusText);
            }
        });
    }
     function buscar() {

        asientosFiltrados = JSON.parse(JSON.stringify(asientos));

        asientosFiltrados = filtroItem(asientosFiltrados);

        asientosFiltrados = filtroFecha(asientosFiltrados, desde, hasta);

        cargarDatos(ajusteFiltrado);

    }
     function filtroFecha(array){


        var arrayAjustes = [];

        if ($('#chEntreFechas').prop('checked')) {
            var desdeLocal = new Date(_desde).getTime();
            var hastaLocal = new Date(_hasta).getTime();

            for (var i = 0; i < array.length; i++) {

                var documento = new Date(array[i].fecha.substring(0, 10)).getTime();
                var flag = false;

                if (documento >= desdeLocal && documento <= hastaLocal)
                    arrayAjustes.push(array[i]);
            }
            return arrayAjustes;
        }
        else
            return array;

    }
    function anularAsientoDirect(id) {
        $.ajax({
            type: "post",
            headers: {"RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("AnularAsiento", "ContaAsiento")',
            data: { id: id },
            success: function (data) {
                getAsientos();
            },
            error: function (err, scnd) {
                cargarAlert('@lb["errorGeneral"]');
                console.log(err.statusText);
            }
        });
    }

    function anularAsiento(id, key) {


        var msj = "@lb["confirmAnularAsientoConReq"]";

        if (Asientos[key].tbPrRequisicion.length <= 0)
            msj = "@lb["confirmAnularAsientoSinReq"]";

        if (Asientos[key].anulado) {
             msj = "@lb["confirmHabilitarAsiento"]";
        }

        bootbox.confirm(msj, function (result) {
            if (result) {
                anularAsientoDirect(id);
            }
        });
    }

    function cargarDatos(data) {

        $("#tblAsiento> tbody").remove();
        $('#tblAsiento').append('<tbody></tbody>');

        var contadorFila = 0;
        var colorFila = "";
        var disabled = "";
        var anularIcon = '<i class="fas fa-trash"></i>';
        for (var i = 0; i < data.length; i++) {

            if (data[i].Estado = "ANULADO") {
                colorFila = "color: #808080";
                disabled = "disabled";
                anularIcon = '<i class="fas fa-trash-restore"></i>';
            }

            var body = '<tr class="fila' + contadorFila + ' filas" style="' + colorFila + '">'
                + '<td><p style="padding-top:1rem;">' + data[i].idAsientoContable + '</p></td>'
                + '<td><p style="padding-top:1rem;">' + FormatoFecha(data[i].fecha) + '</p></td>'
                + '<td><p style="padding-top:1rem;">' + data[i].codigo + '</p></td>'
                + '<td>  <button ' + disabled + ' value="' + data[i].IdAsientoContable + '" onclick="getCrearEditarPartial(value)" class="btn btn-link btnEditar"><i class="fas fa-edit"></i>';
                $('#tblAsiento > tbody').append(body);
                contadorFila++;
        }
        inicializarTabla();
    }

    function inicializarTabla() {

        $('#tblAsiento').DataTable().destroy();

        tblCompras = $('#tblAsiento').DataTable({
            "info": false,
            dom: 'Bfrtip',
            language: {
                "decimal": "",
                "emptyTable": "@lb["NoDatos"]",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "@lb["Mostrar"] _MENU_ @lb["Entradas"]",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "<i class='fas fa-search'></i>",
                "zeroRecords": "@lb["sinResultados"]",
                "paginate": {
                    "first": "@lb["Primero"]",
                    "last": "@lb["Último"]",
                    "next": "@lb["Sguiente"]",
                    "previous": "@lb["Anterior"]"
                }
            },
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fas fa-copy   "></i>',
                    titleAttr: 'Copy',
                    title: '@lb["Asiento"]',
                    exportOptions: {
                        columns: [0, 1]
                    }

                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="fas fa-file-excel  "></i>',
                    titleAttr: 'Excel',
                    title: '@lb["Asiento"]',
                    exportOptions: {
                        columns: [0, 1]
                    }

                },

                {
                    extend: 'pdfHtml5',
                    text: '<i class="fas fa-file-pdf   "></i>',
                    titleAttr: 'PDF',
                    title: '@lb["Asiento"]',
                    exportOptions: {
                        columns: [0, 1]
                    }
                }
            ]
        });

    }

    $("#filtroBuscarNombre").on("keyup", function () {
        tblCompras
            .columns(2)
            .search(this.value)
            .draw();
    });

    function filtroAnuladas() {

        var array = asientos;

        var arrayCompras = [];

        if ($('#estado').prop('checked')) {

            for (var i = 0; i < array.length; i++) {
                if (array[i].estado == "ANULADO")
                    arrayCompras.push(array[i]);
            }
        }
        else
            for (var i = 0; i < array.length; i++) {
                if (!(array[i].estado == "ANULADO"))
                    arrayCompras.push(array[i]);
            }
        cargarDatos(arrayCompras);
    }

    function FormatoFecha(_fecha) {
                var monthNames = [
            "01", "02", "03",
            "04", "05", "06", "07",
            "08", "09", "10",
            "11", ""
        ];
        var date = new Date(Date.parse(_fecha));
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();

        return day + '/' + monthNames[monthIndex] + '/' + year;

    }
       
    
</script>
<style>
    .dataTables_wrapper .dataTables_filter {
        float: right;
        text-align: right;
        visibility: hidden;
    }
</style>