@model IEnumerable<AltivaWebApp.DomainsConta.Asiento>
@inject IStringLocalizer<SharedResources> lb
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<!DOCTYPE html>

<html>
<head>
    @{
        ViewData["Title"] = ViewBag.Titulo;

    }
</head>
<body>
    <div id="buscador" class="border-aero">

    <div class="row">
        <div class="col-md-2"><h3>@lb["Asientos"]</h3></div>
        <div class="col-md-10" style="padding-top: 0.5rem">
            <a class="btn btn-primary" asp-action="item"><span>@lb["Agregar"]</span>&nbsp;<i class="fas fa-plus-circle"></i></a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["Periodo"]:</label>
            <input id="LtPeriodosBus" list="LtPeriodoTrabajoBus" class="form-control" autocomplete=on onchange="buscar()" placeholder="@lb["Periodo"]">
            <datalist id="LtPeriodoTrabajoBus">
                @{
                    foreach (var item in ViewBag.Periodos)
                    {
                        <option value="@item.Nombre">@item.FechaInicio.ToString("yyyy/MM/dd") | @item.FechaFinal.ToString("yyyy/MM/dd") </option>

                    }

                }

            </datalist>
        </div>
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["tipo"]:</label>
            <input id="LtTiposBus" list="LtTipoDocBus" class="form-control" autocomplete=on onchange="buscar()" placeholder="@lb["tipo"]">
            <datalist id="LtTipoDocBus">
                @{
                    foreach (var item in ViewBag.Tipos)
                    {
                        <option>@lb[item.Descripcion]</option>
                    }
                }
            </datalist>
        </div>
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["Código"]:</label>
            <input type="search" id="codigoAsientoBus" class="form-control" placeholder="@lb["Codigo"]" onchange="buscar()">
        </div>
        <div class="col-md-3 col-sm-4 col-xs-12" style="margin-top: 0.2rem">
            <label>@lb["Estado"]:</label>
            <input id="ListEstadoBus" list="LtEstadoBus" class="form-control" onchange="buscar()" placeholder="@lb["Estado"]" autocomplete="ÑÖcompletes">
            <datalist id="LtEstadoBus">
                <option value="@lb["ACTIVO"]">@lb["ACTIVO"]</option>
                <option value="@lb["BLOQUEADO"]">@lb["BLOQUEADO"]</option>
                <option value="@lb["ANULADO"]">@lb["ANULADO"]</option>
            </datalist>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12" style="margin-top: 0.2rem">
            <label class="control-label">
                <input id="chEntreFechas" type="checkbox" onchange="buscar()">@lb["FiltroFecha"]:
            </label>
            <div id="contenedorFecha">
                <form id="frmFecha" class="form-horizontal">
                    <fieldset>
                        <div class="control-group">
                            <div class="controls">
                                <div class="input-prepend input-group">
                                    <span class="add-on input-group-addon"><i class="fas fa-calendar"></i></span>
                                    <input type="text" style="width: 250px;" name="filtroFecha" id="filtroFecha" class="form-control" value="@ViewBag.FechaDesde - @ViewBag.FechaHasta" />
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-xs-12 table-responsive">
            <table class="table table-bordered" id="tblAsiento">
                <thead>
                    <tr>
                        <th>
                            Id
                        </th>
                        <th>
                            @lb["Codigo"]
                        </th>
                        <th>
                            @lb["Fecha"]
                        </th>
                        <th>
                            @lb["Monto"] @ViewBag.SimboloBase
                        </th>
                        <th>
                            @lb["Monto"] @ViewBag.SimboloDolar
                        </th>
                        <th>
                            @lb["Monto"] @ViewBag.SimboloEuro
                        </th>
                        <th>
                            @lb["Estado"]
                        </th>
                        <th>
                            @lb["Acción"]
                        </th>
                    </tr>
                </thead>
                <tbody id="tabla"></tbody>
            </table>
        </div>
    </div>
    <input readonly hidden id="monedaFormater" />
</div>
    <div id="editor" class="border-aero" style="display:none">
        <div id="item"></div>
    </div>
</body>

</html>

<script type="text/javascript">

    var asientos = [];
    var periodos = [];
    var tiposDoc = [];
    var desde;
    var hasta;

    var xBuscador;
    var yBuscador;
    function colapsarBuscador() {
        xBuscador = window.scrollX;
        yBuscador = window.scrollY;      
        muestra_oculta("buscador", true);
        muestra_oculta("editor", false);
        window.scrollTo(0, 3);
    }
    function mostrarBuscador() {
        muestra_oculta("buscador", false);
        muestra_oculta("editor", true);
        window.scrollTo(xBuscador, yBuscador);          
    }
    function muestra_oculta(id,ocultar) {
        var el = document.getElementById(id);  
   
            if (ocultar == true) {

                el.style.display = 'none';
            }
            else {
                el.style.display = 'block';
            }          
    }
    $(document).ready(function () {   
    
    var tipoDoc;
    var periodo;

        @foreach (var item in ViewBag.Periodos)
        {
        @:      periodo = {FechaInicio:'@item.FechaInicio.ToString("yyyy/MM/dd")',FechaFinal:'@item.FechaFinal.ToString("yyyy/MM/dd")',Nombre: '@item.Nombre',IdPeriodoTrabajo: '@item.IdPeriodoTrabajo'};
        @:      periodos.push(periodo);
        }      
    
          @foreach (var item in ViewBag.Tipos)
        {
        @:      tipoDoc = { IdTipoDocumento: '@item.IdTipoDocumento', Descripcion: '@item.Descripcion', Abreviatura: '@item.Abreviatura', Automatico: '@item.Automatico' };
        @:      tiposDoc.push(tipoDoc);
        }
        getAsientos(1);

          $('#filtroFecha').attr('disabled', false);

        $('#filtroFecha').daterangepicker({
            opens: 'left',

            "locale": {
                format: "@lb["DD/MM/YYYY"]",
                "separator": " - ",
                "applyLabel": "@lb["Aplicar"]",
                "cancelLabel": "@lb["Cancelar"]",
                "fromLabel": "@lb["DE"]",
                "toLabel": "@lb["Hasta"]",
                "customRangeLabel": "Custom",
                "daysOfWeek": [
                    "@lb["Dom"]",
                    "@lb["Lun"]",
                    "@lb["Mar"]",
                    "@lb["Mie"]",
                    "@lb["Jue"]",
                    "@lb["Vie"]",
                    "@lb["Sáb"]"
                ],
                "monthNames": [
                    "@lb["Enero"]",
                    "@lb["Febrero"]",
                    "@lb["Marzo"]",
                    "@lb["Abril"]",
                    "@lb["Mayo"]",
                    "@lb["Junio"]",
                    "@lb["Julio"]",
                    "@lb["Agosto"]",
                    "@lb["Septiembre"]",
                    "@lb["Octubre"]",
                    "@lb["Noviembre"]",
                    "@lb["Diciembre"]"
                ],
                "firstDay": 1
            }
        },

            function (start, end, label) {

                desde = start.format('YYYY-MM-DD');
                hasta = end.format('YYYY-MM-DD');
                buscar();


            });



    });
    function getAsientos(pos) {

        $.ajax({
            type: "get",
            headers: {"RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            dataType: "json",
            url: '@Url.Action("GetAsientosWithReqs", "ContaAsiento")',
            success: function (data) {          
                asientos = data;
                buscar();
            },
            error: function (err, scnd) {
                cargarAlert('@lb["errorGeneral"]');
                console.log(err.statusText);
            }
        });
    }
    function buscar() {
        obtenerPeriodo();
        obtenerTipos();
        obtenerEstado();
        obtenerCodigo();
        aplicarFiltros(asientos);
    }

    function aplicarFiltros(datos) {
        var arrayMostrar = [];
        for (var i = 0; i < datos.length; i++) {
            if (filtroPeriodo(datos[i].idPeriodoTrabajo) && filtroTipoDoc(datos[i].idTipoDocumento) && filtroEstado(datos[i].estado) && filtroCodigo(datos[i].codigo) && filtroEntreFechas(datos[i].fecha))
            {
                arrayMostrar.push(datos[i]);
            }
        }
        cargarDatos(arrayMostrar);
    }
    function filtroEntreFechas(valor)
    {
        var activo = document.getElementById('chEntreFechas').checked;
        element = document.getElementById("contenedorFecha")
        if (activo) { element.style.display = 'block';}
        else {
            element.style.display = 'none';
        }
        if (activo == true && desde != null && hasta != null) {
            return soloFecha(desde) <= soloFecha(valor) && soloFecha(hasta) >= soloFecha(valor);
        } else {return true;}
     
    }
    
    function soloFecha(_fecha) {
        var soloMyFecha = _fecha.substring(0, 10);
        var soloMyFecha = soloMyFecha.replace('-', '');
        soloMyFecha = soloMyFecha.replace('-', '');
        var fechaLong = parseInt(soloMyFecha);
        return fechaLong;
    }
    function filtroTipoDoc(valor)
    {
        if (tipoDocSeleccionado == null) {
            return true;
        }
        else {
            return valor == tipoDocSeleccionado.IdTipoDocumento;
        }
    }
    function filtroEstado(valor)
    {        
        if (estadoSeleccionado == null || estadoSeleccionado == '') {
            return true;
        }
        else {
            return valor == estadoSeleccionado;
        }
    }
    function filtroCodigo(valor) {
      
        if (codigoSeleccionado == null || codigoSeleccionado == '') {
            return true;
        }
        else {
            return valor.includes(codigoSeleccionado);
        }
    }
    function filtroPeriodo(valor)
    {
        if (periodoSeleccionado == null) {
        
            return true;
        }
        else {

            return valor == periodoSeleccionado.IdPeriodoTrabajo;
        }
    }
    function darFormatoMoneda(_value, moneda) {
    
        var value = parseFloat(_value);
        var clase = "";

        if (moneda === 1)
            clase = "colon";
        else if (moneda === 2)
            clase = "dolar"
        else if (moneda === 3)
            clase = "euro"

        $('#monedaFormater').removeClass("colon dolar euro");
        $('#monedaFormater').addClass(clase);

        //inicializa formato
        $(".colon").inputmask('currency', {
            prefix: "@ViewBag.SimboloBase",
            rightAlign: true
        });
        $(".dolar").inputmask('currency', {
            prefix: "@ViewBag.SimboloDolar",
            rightAlign: true
        });
        $(".euro").inputmask('currency', {
            prefix: "@ViewBag.SimboloEuro",
            rightAlign: true
        });

        $('#monedaFormater').val(value);
        return $('#monedaFormater').val();

    }
    var resultadoCargado;
    function cargarDatos(datos) {    

         var url = "@Url.Action("_ListAsiento")";
        $.ajax({
            type: "Post",
            url: url,
            data: { asientos: datos},
            success: function (data) {
                $('#tabla').html(data);
            },
            error: function (err, scnd) {
                console.log(err.statusText);
            }

        });


        resultadoCargado = datos;
        //$("#tblAsiento> tbody").remove();
        //$('#tblAsiento').append('<tbody></tbody>');
        //  var contadorFila = 0;
        //var colorFila = "";
        //var disabled = "";
        //var anularIcon = '<i class="fas fa-trash"></i>';
        //for (var i = 0; i < data.length; i++) {

        //    if (data[i].Estado == 3) {
        //        colorFila = "color: #808080";             
        //        anularIcon = '<i class="fas fa-trash-restore"></i>';
        //    }

        //    var body = '<tr class="fila' + contadorFila + ' filas" style="' + colorFila + '">'
        //        + '<td><label class="link" onclick=editarItem("' + data[i].idAsientoContable + '") style="padding-top:1rem;">' + data[i].idAsientoContable + '</label></td>'               
        //        + '<td><label class="link" onclick=editarItem("' + data[i].idAsientoContable + '") style="padding-top:1rem;">' + data[i].codigo + '</label></td>'
        //        + '<td><p hidden>'+ soloFecha(data[i].fecha) + '</p><p style="padding-top:1rem;">' + FormatoFecha(data[i].fecha) + '</p></td>'
        //        + '<td><p style="padding-top:1rem; text-align:right;">' + darFormatoMoneda(data[i].montoColones, 1) + '</p></td>'              
        //        + '<td><p style="padding-top:1rem; text-align:right;">' + darFormatoMoneda(data[i].montoDolar, 2) + '</p></td>'              
        //        + '<td><p style="padding-top:1rem; text-align:right;">' + darFormatoMoneda(data[i].montoEuro, 3) + '</p></td>'  
        //        + '<td><p style="padding-top:1rem;">' + obtenerNombreEstado(data[i].estado) + '</p></td>'
        //        + '<td>  <button onclick=editarItem("' + data[i].idAsientoContable + '") class="btn btn-link btnEditar"><i class="fas fa-edit"></i>';
        //        $('#tblAsiento > tbody').append(body);
        //        contadorFila++;
        //}
        inicializarTabla();
    }
    var anulado = '@lb["ANULADO"]'
    var activo = '@lb["ACTIVO"]'
    var bloqueado = '@lb["BLOQUEADO"]'
    function obtenerNombreEstado(estadoId) {
        if (estadoId == 1) {
            return activo;
          }
          if (estadoId == 3) {
              return anulado;
          }
        if (estadoId == 2) {
            return bloqueado;
        }
        return '';
    }
    function inicializarTabla() {

        $('#tblAsiento').DataTable().destroy();

        tblCompras = $('#tblAsiento').DataTable({
            "info": false,
            dom: 'Bfrtip',
            language: {
                "decimal": "",
                "emptyTable": "@lb["NoDatos"]",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "@lb["Mostrar"] _MENU_ @lb["Entradas"]",
                "loadingRecords": "Cargando...",
                "processing": "Procesando...",
                "search": "<i class='fas fa-search'></i>",
                "zeroRecords": "@lb["sinResultados"]",
                "paginate": {
                    "first": "@lb["Primero"]",
                    "last": "@lb["Último"]",
                    "next": "@lb["Sguiente"]",
                    "previous": "@lb["Anterior"]"
                }
            },
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fas fa-copy   "></i>',
                    titleAttr: 'Copy',
                    title: '@lb["Asiento"]',
                    exportOptions: {
                        columns: [0, 1]
                    }

                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="fas fa-file-excel  "></i>',
                    titleAttr: 'Excel',
                    title: '@lb["Asiento"]',
                    exportOptions: {
                        columns: [0, 1]
                    }

                },

                {
                    extend: 'pdfHtml5',
                    text: '<i class="fas fa-file-pdf   "></i>',
                    titleAttr: 'PDF',
                    title: '@lb["Asiento"]',
                    exportOptions: {
                        columns: [0, 1]
                    }
                }
            ],
            order: [[0, "desc"]]
        });
     

    }

    var codigoSeleccionado;
    function obtenerCodigo() {
        codigoSeleccionado = document.getElementById("codigoAsientoBus").value;
    }

  
    var periodoSeleccionado;
    function obtenerPeriodo() {
        var nombreDoc = document.getElementById("LtPeriodosBus").value;
        periodoSeleccionado = null;
        periodos.forEach(function (item) {
            if (nombreDoc == item.Nombre) {
                periodoSeleccionado = item;           
            }
        });

    }
    var tipoDocSeleccionado;
    function obtenerTipos() {
        var nombreDoc = document.getElementById("LtTiposBus").value;
        tipoDocSeleccionado = null;
        tiposDoc.forEach(function (item) {
            if (nombreDoc == item.Descripcion) {
                tipoDocSeleccionado = item;
            }
        });   
    }
    var estadoSeleccionado;
    function obtenerEstado() {
        estadoSeleccionado = null;
        estadoNombre = document.getElementById("ListEstadoBus").value;
         if (estadoNombre == anulado) {
              estadoSeleccionado = 3
          }
          if (estadoNombre == activo) {
               estadoSeleccionado = 1
          }
          if (estadoNombre == bloqueado) {
               estadoSeleccionado = 2
          }
    }
    function FormatoFecha(_fecha) {
                var monthNames = [
            "01", "02", "03",
            "04", "05", "06", "07",
            "08", "09", "10",
            "11", ""
        ];
        var date = new Date(Date.parse(_fecha));
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();

        return day + '/' + monthNames[monthIndex] + '/' + year;

    }
 
    function editarItem(id) {
      
        var url = '@Url.Action("Item", "ContaAsiento", new { id = "__id__" })';
         url = url.replace("__id__", id);       
         $.ajax({
             type: "Post",
             url: url,
             success: function (data) {
                 $('#item').html(data);
                 colapsarBuscador();
             },
             error: function (err, scnd) {
                 console.log(err.statusText);
             }

         });    
         

    }
</script>
<style>
    .dataTables_wrapper .dataTables_filter {
        float: right;
        text-align: right;
        visibility: hidden;
    }
</style>
